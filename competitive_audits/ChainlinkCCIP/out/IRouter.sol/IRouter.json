{"abi":[{"type":"function","name":"getOnRamp","inputs":[{"name":"destChainSelector","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"onRampAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isOffRamp","inputs":[{"name":"sourceChainSelector","type":"uint64","internalType":"uint64"},{"name":"offRamp","type":"address","internalType":"address"}],"outputs":[{"name":"isOffRamp","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"routeMessage","inputs":[{"name":"message","type":"tuple","internalType":"struct Client.Any2EVMMessage","components":[{"name":"messageId","type":"bytes32","internalType":"bytes32"},{"name":"sourceChainSelector","type":"uint64","internalType":"uint64"},{"name":"sender","type":"bytes","internalType":"bytes"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"destTokenAmounts","type":"tuple[]","internalType":"struct Client.EVMTokenAmount[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]}]},{"name":"gasForCallExactCheck","type":"uint16","internalType":"uint16"},{"name":"gasLimit","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"},{"name":"retBytes","type":"bytes","internalType":"bytes"},{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"error","name":"OnlyOffRamp","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getOnRamp(uint64)":"a8d87a3b","isOffRamp(uint64,address)":"83826b2b","routeMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]),uint16,uint256,address)":"3cf97983"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlyOffRamp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"}],\"name\":\"getOnRamp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"onRampAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"}],\"name\":\"isOffRamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOffRamp\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"gasForCallExactCheck\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"routeMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"retBytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getOnRamp(uint64)\":{\"params\":{\"destChainSelector\":\"The destination chain Id to get the onRamp for.\"},\"returns\":{\"onRampAddress\":\"The address of the onRamp.\"}},\"isOffRamp(uint64,address)\":{\"params\":{\"offRamp\":\"The address of the offRamp to check.\",\"sourceChainSelector\":\"The source chain selector to check.\"}},\"routeMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]),uint16,uint256,address)\":{\"details\":\"if the receiver is a contracts that signals support for CCIP execution through EIP-165. the contract is called. If not, only tokens are transferred.\",\"params\":{\"gasForCallExactCheck\":\"of params for exec\",\"gasLimit\":\"set of params for exec\",\"message\":\"Client.Any2EVMMessage struct.\",\"receiver\":\"set of params for exec\"},\"returns\":{\"gasUsed\":\"the gas used by the external customer call. Does not include any overhead.\",\"retBytes\":\"A bytes array containing return data form CCIP receiver.\",\"success\":\"A boolean value indicating whether the ccip message was received without errors.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getOnRamp(uint64)\":{\"notice\":\"Returns the configured onramp for a specific destination chain.\"},\"isOffRamp(uint64,address)\":{\"notice\":\"Return true if the given offRamp is a configured offRamp for the given source chain.\"},\"routeMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]),uint16,uint256,address)\":{\"notice\":\"Route the message to its intended receiver contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ccip/interfaces/IRouter.sol\":\"IRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=foundry-lib/forge-std/src/\"]},\"sources\":{\"ccip/interfaces/IRouter.sol\":{\"keccak256\":\"0x3035d3a01e424735d8a9a84b41135aefba7e7d6d88cbbdc42f5e4e4ad6b92da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ff87c9d51c4c07e234d489cdc75380d532d57579309b0967705e25628051296\",\"dweb:/ipfs/Qmcb34ajZeGTAtitCWo4RBpu12nCRjxGMmKMBsqVjiHesm\"]},\"ccip/libraries/Client.sol\":{\"keccak256\":\"0x343b4b6e91abb0194f61d5323b5ea6662a170dcfb6d77cb3b7568d061f668e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96ab8e106876ac873643499521cdf11b94d827f2646966a2a68d250dc3e25d44\",\"dweb:/ipfs/QmYiJKdbiSGgJ5PeZPs8b3fAoSfDPWTREUYXqtDJN4x4RF\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"OnlyOffRamp"},{"inputs":[{"internalType":"uint64","name":"destChainSelector","type":"uint64"}],"stateMutability":"view","type":"function","name":"getOnRamp","outputs":[{"internalType":"address","name":"onRampAddress","type":"address"}]},{"inputs":[{"internalType":"uint64","name":"sourceChainSelector","type":"uint64"},{"internalType":"address","name":"offRamp","type":"address"}],"stateMutability":"view","type":"function","name":"isOffRamp","outputs":[{"internalType":"bool","name":"isOffRamp","type":"bool"}]},{"inputs":[{"internalType":"struct Client.Any2EVMMessage","name":"message","type":"tuple","components":[{"internalType":"bytes32","name":"messageId","type":"bytes32"},{"internalType":"uint64","name":"sourceChainSelector","type":"uint64"},{"internalType":"bytes","name":"sender","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"struct Client.EVMTokenAmount[]","name":"destTokenAmounts","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]}]},{"internalType":"uint16","name":"gasForCallExactCheck","type":"uint16"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"routeMessage","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"retBytes","type":"bytes"},{"internalType":"uint256","name":"gasUsed","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"getOnRamp(uint64)":{"params":{"destChainSelector":"The destination chain Id to get the onRamp for."},"returns":{"onRampAddress":"The address of the onRamp."}},"isOffRamp(uint64,address)":{"params":{"offRamp":"The address of the offRamp to check.","sourceChainSelector":"The source chain selector to check."}},"routeMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]),uint16,uint256,address)":{"details":"if the receiver is a contracts that signals support for CCIP execution through EIP-165. the contract is called. If not, only tokens are transferred.","params":{"gasForCallExactCheck":"of params for exec","gasLimit":"set of params for exec","message":"Client.Any2EVMMessage struct.","receiver":"set of params for exec"},"returns":{"gasUsed":"the gas used by the external customer call. Does not include any overhead.","retBytes":"A bytes array containing return data form CCIP receiver.","success":"A boolean value indicating whether the ccip message was received without errors."}}},"version":1},"userdoc":{"kind":"user","methods":{"getOnRamp(uint64)":{"notice":"Returns the configured onramp for a specific destination chain."},"isOffRamp(uint64,address)":{"notice":"Return true if the given offRamp is a configured offRamp for the given source chain."},"routeMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]),uint16,uint256,address)":{"notice":"Route the message to its intended receiver contract."}},"version":1}},"settings":{"remappings":["forge-std/=foundry-lib/forge-std/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"ccip/interfaces/IRouter.sol":"IRouter"},"evmVersion":"paris","libraries":{}},"sources":{"ccip/interfaces/IRouter.sol":{"keccak256":"0x3035d3a01e424735d8a9a84b41135aefba7e7d6d88cbbdc42f5e4e4ad6b92da1","urls":["bzz-raw://5ff87c9d51c4c07e234d489cdc75380d532d57579309b0967705e25628051296","dweb:/ipfs/Qmcb34ajZeGTAtitCWo4RBpu12nCRjxGMmKMBsqVjiHesm"],"license":"MIT"},"ccip/libraries/Client.sol":{"keccak256":"0x343b4b6e91abb0194f61d5323b5ea6662a170dcfb6d77cb3b7568d061f668e0b","urls":["bzz-raw://96ab8e106876ac873643499521cdf11b94d827f2646966a2a68d250dc3e25d44","dweb:/ipfs/QmYiJKdbiSGgJ5PeZPs8b3fAoSfDPWTREUYXqtDJN4x4RF"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"ccip/interfaces/IRouter.sol","id":7623,"exportedSymbols":{"Client":[7788],"IRouter":[7622]},"nodeType":"SourceUnit","src":"32:1689:24","nodes":[{"id":7580,"nodeType":"PragmaDirective","src":"32:23:24","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":7582,"nodeType":"ImportDirective","src":"57:47:24","nodes":[],"absolutePath":"ccip/libraries/Client.sol","file":"../libraries/Client.sol","nameLocation":"-1:-1:-1","scope":7623,"sourceUnit":7789,"symbolAliases":[{"foreign":{"id":7581,"name":"Client","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"65:6:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":7622,"nodeType":"ContractDefinition","src":"106:1614:24","nodes":[{"id":7584,"nodeType":"ErrorDefinition","src":"128:20:24","nodes":[],"errorSelector":"d2316ede","name":"OnlyOffRamp","nameLocation":"134:11:24","parameters":{"id":7583,"nodeType":"ParameterList","parameters":[],"src":"145:2:24"}},{"id":7603,"nodeType":"FunctionDefinition","src":"859:219:24","nodes":[],"documentation":{"id":7585,"nodeType":"StructuredDocumentation","src":"152:704:24","text":"@notice Route the message to its intended receiver contract.\n @param message Client.Any2EVMMessage struct.\n @param gasForCallExactCheck of params for exec\n @param gasLimit set of params for exec\n @param receiver set of params for exec\n @dev if the receiver is a contracts that signals support for CCIP execution through EIP-165.\n the contract is called. If not, only tokens are transferred.\n @return success A boolean value indicating whether the ccip message was received without errors.\n @return retBytes A bytes array containing return data form CCIP receiver.\n @return gasUsed the gas used by the external customer call. Does not include any overhead."},"functionSelector":"3cf97983","implemented":false,"kind":"function","modifiers":[],"name":"routeMessage","nameLocation":"868:12:24","parameters":{"id":7595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7588,"mutability":"mutable","name":"message","nameLocation":"917:7:24","nodeType":"VariableDeclaration","scope":7603,"src":"886:38:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$7729_calldata_ptr","typeString":"struct Client.Any2EVMMessage"},"typeName":{"id":7587,"nodeType":"UserDefinedTypeName","pathNode":{"id":7586,"name":"Client.Any2EVMMessage","nameLocations":["886:6:24","893:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":7729,"src":"886:21:24"},"referencedDeclaration":7729,"src":"886:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$7729_storage_ptr","typeString":"struct Client.Any2EVMMessage"}},"visibility":"internal"},{"constant":false,"id":7590,"mutability":"mutable","name":"gasForCallExactCheck","nameLocation":"937:20:24","nodeType":"VariableDeclaration","scope":7603,"src":"930:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7589,"name":"uint16","nodeType":"ElementaryTypeName","src":"930:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":7592,"mutability":"mutable","name":"gasLimit","nameLocation":"971:8:24","nodeType":"VariableDeclaration","scope":7603,"src":"963:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7591,"name":"uint256","nodeType":"ElementaryTypeName","src":"963:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7594,"mutability":"mutable","name":"receiver","nameLocation":"993:8:24","nodeType":"VariableDeclaration","scope":7603,"src":"985:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7593,"name":"address","nodeType":"ElementaryTypeName","src":"985:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"880:125:24"},"returnParameters":{"id":7602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7597,"mutability":"mutable","name":"success","nameLocation":"1029:7:24","nodeType":"VariableDeclaration","scope":7603,"src":"1024:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7596,"name":"bool","nodeType":"ElementaryTypeName","src":"1024:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7599,"mutability":"mutable","name":"retBytes","nameLocation":"1051:8:24","nodeType":"VariableDeclaration","scope":7603,"src":"1038:21:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7598,"name":"bytes","nodeType":"ElementaryTypeName","src":"1038:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7601,"mutability":"mutable","name":"gasUsed","nameLocation":"1069:7:24","nodeType":"VariableDeclaration","scope":7603,"src":"1061:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1061:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1023:54:24"},"scope":7622,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":7611,"nodeType":"FunctionDefinition","src":"1294:91:24","nodes":[],"documentation":{"id":7604,"nodeType":"StructuredDocumentation","src":"1082:209:24","text":"@notice Returns the configured onramp for a specific destination chain.\n @param destChainSelector The destination chain Id to get the onRamp for.\n @return onRampAddress The address of the onRamp."},"functionSelector":"a8d87a3b","implemented":false,"kind":"function","modifiers":[],"name":"getOnRamp","nameLocation":"1303:9:24","parameters":{"id":7607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7606,"mutability":"mutable","name":"destChainSelector","nameLocation":"1320:17:24","nodeType":"VariableDeclaration","scope":7611,"src":"1313:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7605,"name":"uint64","nodeType":"ElementaryTypeName","src":"1313:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1312:26:24"},"returnParameters":{"id":7610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7609,"mutability":"mutable","name":"onRampAddress","nameLocation":"1370:13:24","nodeType":"VariableDeclaration","scope":7611,"src":"1362:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7608,"name":"address","nodeType":"ElementaryTypeName","src":"1362:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1361:23:24"},"scope":7622,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":7621,"nodeType":"FunctionDefinition","src":"1615:103:24","nodes":[],"documentation":{"id":7612,"nodeType":"StructuredDocumentation","src":"1389:223:24","text":"@notice Return true if the given offRamp is a configured offRamp for the given source chain.\n @param sourceChainSelector The source chain selector to check.\n @param offRamp The address of the offRamp to check."},"functionSelector":"83826b2b","implemented":false,"kind":"function","modifiers":[],"name":"isOffRamp","nameLocation":"1624:9:24","parameters":{"id":7617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7614,"mutability":"mutable","name":"sourceChainSelector","nameLocation":"1641:19:24","nodeType":"VariableDeclaration","scope":7621,"src":"1634:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7613,"name":"uint64","nodeType":"ElementaryTypeName","src":"1634:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":7616,"mutability":"mutable","name":"offRamp","nameLocation":"1670:7:24","nodeType":"VariableDeclaration","scope":7621,"src":"1662:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7615,"name":"address","nodeType":"ElementaryTypeName","src":"1662:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1633:45:24"},"returnParameters":{"id":7620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7619,"mutability":"mutable","name":"isOffRamp","nameLocation":"1707:9:24","nodeType":"VariableDeclaration","scope":7621,"src":"1702:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7618,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1701:16:24"},"scope":7622,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[7622],"name":"IRouter","nameLocation":"116:7:24","scope":7623,"usedErrors":[7584],"usedEvents":[]}],"license":"MIT"},"id":24}