{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectRevert()":"f4844814","expectRevert(bytes)":"f28dceb3","expectRevert(bytes4)":"c31eb0e0","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptUint(string)":"652fd489","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get a `Wallet`'s nonce.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory revm state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"revertTo(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top of the test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"foundry-lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=foundry-lib/forge-std/src/\"]},\"sources\":{\"foundry-lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xf92ea94fe38f8370a8dc5f591ebfb4958869e18d877469ce422162cc88c8b063\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://620b5d4b2ff24d66120ce9dbb72fbde7276f2e8b3bb93f626874183aee01e307\",\"dweb:/ipfs/Qmcyc8co7vCiJ7gUd3jj5Hc1rRPihjt3WSKs5ut6eiU1Ze\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get a `Wallet`'s nonce."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"revertTo(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"revertToAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top of the test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["forge-std/=foundry-lib/forge-std/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"foundry-lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"paris","libraries":{}},"sources":{"foundry-lib/forge-std/src/Vm.sol":{"keccak256":"0xf92ea94fe38f8370a8dc5f591ebfb4958869e18d877469ce422162cc88c8b063","urls":["bzz-raw://620b5d4b2ff24d66120ce9dbb72fbde7276f2e8b3bb93f626874183aee01e307","dweb:/ipfs/Qmcyc8co7vCiJ7gUd3jj5Hc1rRPihjt3WSKs5ut6eiU1Ze"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"foundry-lib/forge-std/src/Vm.sol","id":104149,"exportedSymbols":{"Vm":[104148],"VmSafe":[103547]},"nodeType":"SourceUnit","src":"117:90686:150","nodes":[{"id":100337,"nodeType":"PragmaDirective","src":"117:31:150","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":100338,"nodeType":"PragmaDirective","src":"149:33:150","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":103547,"nodeType":"ContractDefinition","src":"409:75834:150","nodes":[{"id":100346,"nodeType":"EnumDefinition","src":"529:533:150","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":100340,"nodeType":"StructuredDocumentation","src":"432:92:150","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":100341,"name":"None","nameLocation":"610:4:150","nodeType":"EnumValue","src":"610:4:150"},{"id":100342,"name":"Broadcast","nameLocation":"714:9:150","nodeType":"EnumValue","src":"714:9:150"},{"id":100343,"name":"RecurrentBroadcast","nameLocation":"829:18:150","nodeType":"EnumValue","src":"829:18:150"},{"id":100344,"name":"Prank","nameLocation":"939:5:150","nodeType":"EnumValue","src":"939:5:150"},{"id":100345,"name":"RecurrentPrank","nameLocation":"1042:14:150","nodeType":"EnumValue","src":"1042:14:150"}],"name":"CallerMode","nameLocation":"534:10:150"},{"id":100359,"nodeType":"EnumDefinition","src":"1118:791:150","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":100347,"nodeType":"StructuredDocumentation","src":"1068:45:150","text":"The kind of account access that occurred."},"members":[{"id":100348,"name":"Call","nameLocation":"1186:4:150","nodeType":"EnumValue","src":"1186:4:150"},{"id":100349,"name":"DelegateCall","nameLocation":"1252:12:150","nodeType":"EnumValue","src":"1252:12:150"},{"id":100350,"name":"CallCode","nameLocation":"1322:8:150","nodeType":"EnumValue","src":"1322:8:150"},{"id":100351,"name":"StaticCall","nameLocation":"1390:10:150","nodeType":"EnumValue","src":"1390:10:150"},{"id":100352,"name":"Create","nameLocation":"1446:6:150","nodeType":"EnumValue","src":"1446:6:150"},{"id":100353,"name":"SelfDestruct","nameLocation":"1505:12:150","nodeType":"EnumValue","src":"1505:12:150"},{"id":100354,"name":"Resume","nameLocation":"1644:6:150","nodeType":"EnumValue","src":"1644:6:150"},{"id":100355,"name":"Balance","nameLocation":"1703:7:150","nodeType":"EnumValue","src":"1703:7:150"},{"id":100356,"name":"Extcodesize","nameLocation":"1764:11:150","nodeType":"EnumValue","src":"1764:11:150"},{"id":100357,"name":"Extcodehash","nameLocation":"1829:11:150","nodeType":"EnumValue","src":"1829:11:150"},{"id":100358,"name":"Extcodecopy","nameLocation":"1892:11:150","nodeType":"EnumValue","src":"1892:11:150"}],"name":"AccountAccessKind","nameLocation":"1123:17:150"},{"id":100370,"nodeType":"EnumDefinition","src":"1949:683:150","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":100360,"nodeType":"StructuredDocumentation","src":"1915:29:150","text":"Forge execution contexts."},"members":[{"id":100361,"name":"TestGroup","nameLocation":"2047:9:150","nodeType":"EnumValue","src":"2047:9:150"},{"id":100362,"name":"Test","nameLocation":"2109:4:150","nodeType":"EnumValue","src":"2109:4:150"},{"id":100363,"name":"Coverage","nameLocation":"2170:8:150","nodeType":"EnumValue","src":"2170:8:150"},{"id":100364,"name":"Snapshot","nameLocation":"2235:8:150","nodeType":"EnumValue","src":"2235:8:150"},{"id":100365,"name":"ScriptGroup","nameLocation":"2327:11:150","nodeType":"EnumValue","src":"2327:11:150"},{"id":100366,"name":"ScriptDryRun","nameLocation":"2393:12:150","nodeType":"EnumValue","src":"2393:12:150"},{"id":100367,"name":"ScriptBroadcast","nameLocation":"2472:15:150","nodeType":"EnumValue","src":"2472:15:150"},{"id":100368,"name":"ScriptResume","nameLocation":"2551:12:150","nodeType":"EnumValue","src":"2551:12:150"},{"id":100369,"name":"Unknown","nameLocation":"2619:7:150","nodeType":"EnumValue","src":"2619:7:150"}],"name":"ForgeContext","nameLocation":"1954:12:150"},{"id":100379,"nodeType":"StructDefinition","src":"2694:237:150","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":100371,"nodeType":"StructuredDocumentation","src":"2638:51:150","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":100374,"mutability":"mutable","name":"topics","nameLocation":"2792:6:150","nodeType":"VariableDeclaration","scope":100379,"src":"2782:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":100372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":100373,"nodeType":"ArrayTypeName","src":"2782:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":100376,"mutability":"mutable","name":"data","nameLocation":"2850:4:150","nodeType":"VariableDeclaration","scope":100379,"src":"2844:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":100375,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":100378,"mutability":"mutable","name":"emitter","nameLocation":"2917:7:150","nodeType":"VariableDeclaration","scope":100379,"src":"2909:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100377,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2701:3:150","scope":103547,"visibility":"public"},{"id":100385,"nodeType":"StructDefinition","src":"3000:119:150","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":100380,"nodeType":"StructuredDocumentation","src":"2937:58:150","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":100382,"mutability":"mutable","name":"key","nameLocation":"3065:3:150","nodeType":"VariableDeclaration","scope":100385,"src":"3058:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":100381,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100384,"mutability":"mutable","name":"url","nameLocation":"3109:3:150","nodeType":"VariableDeclaration","scope":100385,"src":"3102:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":100383,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3007:3:150","scope":103547,"visibility":"public"},{"id":100406,"nodeType":"StructDefinition","src":"3179:615:150","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":100386,"nodeType":"StructuredDocumentation","src":"3125:49:150","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":100388,"mutability":"mutable","name":"emitter","nameLocation":"3260:7:150","nodeType":"VariableDeclaration","scope":100406,"src":"3252:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100387,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100391,"mutability":"mutable","name":"topics","nameLocation":"3354:6:150","nodeType":"VariableDeclaration","scope":100406,"src":"3344:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":100389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":100390,"nodeType":"ArrayTypeName","src":"3344:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":100393,"mutability":"mutable","name":"data","nameLocation":"3412:4:150","nodeType":"VariableDeclaration","scope":100406,"src":"3406:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":100392,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":100395,"mutability":"mutable","name":"blockHash","nameLocation":"3461:9:150","nodeType":"VariableDeclaration","scope":100406,"src":"3453:17:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":100397,"mutability":"mutable","name":"blockNumber","nameLocation":"3516:11:150","nodeType":"VariableDeclaration","scope":100406,"src":"3509:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":100396,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":100399,"mutability":"mutable","name":"transactionHash","nameLocation":"3578:15:150","nodeType":"VariableDeclaration","scope":100406,"src":"3570:23:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":100401,"mutability":"mutable","name":"transactionIndex","nameLocation":"3657:16:150","nodeType":"VariableDeclaration","scope":100406,"src":"3650:23:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":100400,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":100403,"mutability":"mutable","name":"logIndex","nameLocation":"3717:8:150","nodeType":"VariableDeclaration","scope":100406,"src":"3709:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100405,"mutability":"mutable","name":"removed","nameLocation":"3780:7:150","nodeType":"VariableDeclaration","scope":100406,"src":"3775:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100404,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3186:10:150","scope":103547,"visibility":"public"},{"id":100418,"nodeType":"StructDefinition","src":"3870:334:150","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":100407,"nodeType":"StructuredDocumentation","src":"3800:65:150","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":100409,"mutability":"mutable","name":"errorMessage","nameLocation":"3941:12:150","nodeType":"VariableDeclaration","scope":100418,"src":"3934:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":100408,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100411,"mutability":"mutable","name":"path","nameLocation":"4004:4:150","nodeType":"VariableDeclaration","scope":100418,"src":"3997:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":100410,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100413,"mutability":"mutable","name":"depth","nameLocation":"4060:5:150","nodeType":"VariableDeclaration","scope":100418,"src":"4053:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":100412,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":100415,"mutability":"mutable","name":"isDir","nameLocation":"4125:5:150","nodeType":"VariableDeclaration","scope":100418,"src":"4120:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100414,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":100417,"mutability":"mutable","name":"isSymlink","nameLocation":"4188:9:150","nodeType":"VariableDeclaration","scope":100418,"src":"4183:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100416,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3877:8:150","scope":103547,"visibility":"public"},{"id":100434,"nodeType":"StructDefinition","src":"4434:599:150","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":100419,"nodeType":"StructuredDocumentation","src":"4210:219:150","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":100421,"mutability":"mutable","name":"isDir","nameLocation":"4520:5:150","nodeType":"VariableDeclaration","scope":100434,"src":"4515:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100420,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":100423,"mutability":"mutable","name":"isSymlink","nameLocation":"4591:9:150","nodeType":"VariableDeclaration","scope":100434,"src":"4586:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100422,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":100425,"mutability":"mutable","name":"length","nameLocation":"4683:6:150","nodeType":"VariableDeclaration","scope":100434,"src":"4675:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100424,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100427,"mutability":"mutable","name":"readOnly","nameLocation":"4774:8:150","nodeType":"VariableDeclaration","scope":100434,"src":"4769:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100426,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":100429,"mutability":"mutable","name":"modified","nameLocation":"4863:8:150","nodeType":"VariableDeclaration","scope":100434,"src":"4855:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100428,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100431,"mutability":"mutable","name":"accessed","nameLocation":"4939:8:150","nodeType":"VariableDeclaration","scope":100434,"src":"4931:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100433,"mutability":"mutable","name":"created","nameLocation":"5019:7:150","nodeType":"VariableDeclaration","scope":100434,"src":"5011:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100432,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4441:10:150","scope":103547,"visibility":"public"},{"id":100444,"nodeType":"StructDefinition","src":"5087:277:150","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":100435,"nodeType":"StructuredDocumentation","src":"5039:43:150","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":100437,"mutability":"mutable","name":"addr","nameLocation":"5152:4:150","nodeType":"VariableDeclaration","scope":100444,"src":"5144:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100436,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100439,"mutability":"mutable","name":"publicKeyX","nameLocation":"5214:10:150","nodeType":"VariableDeclaration","scope":100444,"src":"5206:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100438,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100441,"mutability":"mutable","name":"publicKeyY","nameLocation":"5282:10:150","nodeType":"VariableDeclaration","scope":100444,"src":"5274:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100440,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100443,"mutability":"mutable","name":"privateKey","nameLocation":"5347:10:150","nodeType":"VariableDeclaration","scope":100444,"src":"5339:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100442,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5094:6:150","scope":103547,"visibility":"public"},{"id":100452,"nodeType":"StructDefinition","src":"5409:213:150","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":100445,"nodeType":"StructuredDocumentation","src":"5370:34:150","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":100447,"mutability":"mutable","name":"exitCode","nameLocation":"5480:8:150","nodeType":"VariableDeclaration","scope":100452,"src":"5474:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":100446,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:150","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":100449,"mutability":"mutable","name":"stdout","nameLocation":"5557:6:150","nodeType":"VariableDeclaration","scope":100452,"src":"5551:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":100448,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":100451,"mutability":"mutable","name":"stderr","nameLocation":"5609:6:150","nodeType":"VariableDeclaration","scope":100452,"src":"5603:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":100450,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5416:9:150","scope":103547,"visibility":"public"},{"id":100458,"nodeType":"StructDefinition","src":"5671:184:150","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":100453,"nodeType":"StructuredDocumentation","src":"5628:38:150","text":"Information on the chain and fork."},"members":[{"constant":false,"id":100455,"mutability":"mutable","name":"forkId","nameLocation":"5772:6:150","nodeType":"VariableDeclaration","scope":100458,"src":"5764:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100454,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100457,"mutability":"mutable","name":"chainId","nameLocation":"5841:7:150","nodeType":"VariableDeclaration","scope":100458,"src":"5833:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100456,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5678:9:150","scope":103547,"visibility":"public"},{"id":100490,"nodeType":"StructDefinition","src":"5916:1837:150","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":100459,"nodeType":"StructuredDocumentation","src":"5861:50:150","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":100462,"mutability":"mutable","name":"chainInfo","nameLocation":"6008:9:150","nodeType":"VariableDeclaration","scope":100490,"src":"5998:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$100458_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":100461,"nodeType":"UserDefinedTypeName","pathNode":{"id":100460,"name":"ChainInfo","nameLocations":["5998:9:150"],"nodeType":"IdentifierPath","referencedDeclaration":100458,"src":"5998:9:150"},"referencedDeclaration":100458,"src":"5998:9:150","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$100458_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":100465,"mutability":"mutable","name":"kind","nameLocation":"6471:4:150","nodeType":"VariableDeclaration","scope":100490,"src":"6453:22:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$100359","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":100464,"nodeType":"UserDefinedTypeName","pathNode":{"id":100463,"name":"AccountAccessKind","nameLocations":["6453:17:150"],"nodeType":"IdentifierPath","referencedDeclaration":100359,"src":"6453:17:150"},"referencedDeclaration":100359,"src":"6453:17:150","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$100359","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":100467,"mutability":"mutable","name":"account","nameLocation":"6648:7:150","nodeType":"VariableDeclaration","scope":100490,"src":"6640:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100466,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100469,"mutability":"mutable","name":"accessor","nameLocation":"6711:8:150","nodeType":"VariableDeclaration","scope":100490,"src":"6703:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100468,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100471,"mutability":"mutable","name":"initialized","nameLocation":"6922:11:150","nodeType":"VariableDeclaration","scope":100490,"src":"6917:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100470,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":100473,"mutability":"mutable","name":"oldBalance","nameLocation":"7008:10:150","nodeType":"VariableDeclaration","scope":100490,"src":"7000:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100472,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100475,"mutability":"mutable","name":"newBalance","nameLocation":"7183:10:150","nodeType":"VariableDeclaration","scope":100490,"src":"7175:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100474,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100477,"mutability":"mutable","name":"deployedCode","nameLocation":"7260:12:150","nodeType":"VariableDeclaration","scope":100490,"src":"7254:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":100476,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":100479,"mutability":"mutable","name":"value","nameLocation":"7344:5:150","nodeType":"VariableDeclaration","scope":100490,"src":"7336:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100478,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100481,"mutability":"mutable","name":"data","nameLocation":"7418:4:150","nodeType":"VariableDeclaration","scope":100490,"src":"7412:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":100480,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":100483,"mutability":"mutable","name":"reverted","nameLocation":"7513:8:150","nodeType":"VariableDeclaration","scope":100490,"src":"7508:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100482,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":100487,"mutability":"mutable","name":"storageAccesses","nameLocation":"7635:15:150","nodeType":"VariableDeclaration","scope":100490,"src":"7619:31:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$100504_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":100485,"nodeType":"UserDefinedTypeName","pathNode":{"id":100484,"name":"StorageAccess","nameLocations":["7619:13:150"],"nodeType":"IdentifierPath","referencedDeclaration":100504,"src":"7619:13:150"},"referencedDeclaration":100504,"src":"7619:13:150","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$100504_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":100486,"nodeType":"ArrayTypeName","src":"7619:15:150","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$100504_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":100489,"mutability":"mutable","name":"depth","nameLocation":"7741:5:150","nodeType":"VariableDeclaration","scope":100490,"src":"7734:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":100488,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5923:13:150","scope":103547,"visibility":"public"},{"id":100504,"nodeType":"StructDefinition","src":"7815:425:150","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":100491,"nodeType":"StructuredDocumentation","src":"7759:51:150","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":100493,"mutability":"mutable","name":"account","nameLocation":"7905:7:150","nodeType":"VariableDeclaration","scope":100504,"src":"7897:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100492,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100495,"mutability":"mutable","name":"slot","nameLocation":"7969:4:150","nodeType":"VariableDeclaration","scope":100504,"src":"7961:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":100497,"mutability":"mutable","name":"isWrite","nameLocation":"8026:7:150","nodeType":"VariableDeclaration","scope":100504,"src":"8021:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100496,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":100499,"mutability":"mutable","name":"previousValue","nameLocation":"8094:13:150","nodeType":"VariableDeclaration","scope":100504,"src":"8086:21:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":100501,"mutability":"mutable","name":"newValue","nameLocation":"8163:8:150","nodeType":"VariableDeclaration","scope":100504,"src":"8155:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":100503,"mutability":"mutable","name":"reverted","nameLocation":"8225:8:150","nodeType":"VariableDeclaration","scope":100504,"src":"8220:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100502,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7822:13:150","scope":103547,"visibility":"public"},{"id":100516,"nodeType":"StructDefinition","src":"8291:362:150","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":100505,"nodeType":"StructuredDocumentation","src":"8246:40:150","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":100507,"mutability":"mutable","name":"gasLimit","nameLocation":"8357:8:150","nodeType":"VariableDeclaration","scope":100516,"src":"8350:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":100506,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":100509,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8413:12:150","nodeType":"VariableDeclaration","scope":100516,"src":"8406:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":100508,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":100511,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8498:13:150","nodeType":"VariableDeclaration","scope":100516,"src":"8491:20:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":100510,"name":"uint64","nodeType":"ElementaryTypeName","src":"8491:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":100513,"mutability":"mutable","name":"gasRefunded","nameLocation":"8566:11:150","nodeType":"VariableDeclaration","scope":100516,"src":"8560:17:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":100512,"name":"int64","nodeType":"ElementaryTypeName","src":"8560:5:150","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":100515,"mutability":"mutable","name":"gasRemaining","nameLocation":"8634:12:150","nodeType":"VariableDeclaration","scope":100516,"src":"8627:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":100514,"name":"uint64","nodeType":"ElementaryTypeName","src":"8627:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8298:3:150","scope":103547,"visibility":"public"},{"id":100524,"nodeType":"FunctionDefinition","src":"8840:80:150","nodes":[],"documentation":{"id":100517,"nodeType":"StructuredDocumentation","src":"8697:138:150","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"8849:10:150","parameters":{"id":100520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100519,"mutability":"mutable","name":"name","nameLocation":"8876:4:150","nodeType":"VariableDeclaration","scope":100524,"src":"8860:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100518,"name":"string","nodeType":"ElementaryTypeName","src":"8860:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8859:22:150"},"returnParameters":{"id":100523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100522,"mutability":"mutable","name":"value","nameLocation":"8913:5:150","nodeType":"VariableDeclaration","scope":100524,"src":"8905:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100521,"name":"address","nodeType":"ElementaryTypeName","src":"8905:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8904:15:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100535,"nodeType":"FunctionDefinition","src":"9103:112:150","nodes":[],"documentation":{"id":100525,"nodeType":"StructuredDocumentation","src":"8926:172:150","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"9112:10:150","parameters":{"id":100530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100527,"mutability":"mutable","name":"name","nameLocation":"9139:4:150","nodeType":"VariableDeclaration","scope":100535,"src":"9123:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100526,"name":"string","nodeType":"ElementaryTypeName","src":"9123:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100529,"mutability":"mutable","name":"delim","nameLocation":"9161:5:150","nodeType":"VariableDeclaration","scope":100535,"src":"9145:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100528,"name":"string","nodeType":"ElementaryTypeName","src":"9145:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9122:45:150"},"returnParameters":{"id":100534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100533,"mutability":"mutable","name":"value","nameLocation":"9208:5:150","nodeType":"VariableDeclaration","scope":100535,"src":"9191:22:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":100531,"name":"address","nodeType":"ElementaryTypeName","src":"9191:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":100532,"nodeType":"ArrayTypeName","src":"9191:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9190:24:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100543,"nodeType":"FunctionDefinition","src":"9361:74:150","nodes":[],"documentation":{"id":100536,"nodeType":"StructuredDocumentation","src":"9221:135:150","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9370:7:150","parameters":{"id":100539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100538,"mutability":"mutable","name":"name","nameLocation":"9394:4:150","nodeType":"VariableDeclaration","scope":100543,"src":"9378:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100537,"name":"string","nodeType":"ElementaryTypeName","src":"9378:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9377:22:150"},"returnParameters":{"id":100542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100541,"mutability":"mutable","name":"value","nameLocation":"9428:5:150","nodeType":"VariableDeclaration","scope":100543,"src":"9423:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100540,"name":"bool","nodeType":"ElementaryTypeName","src":"9423:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9422:12:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100554,"nodeType":"FunctionDefinition","src":"9615:106:150","nodes":[],"documentation":{"id":100544,"nodeType":"StructuredDocumentation","src":"9441:169:150","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9624:7:150","parameters":{"id":100549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100546,"mutability":"mutable","name":"name","nameLocation":"9648:4:150","nodeType":"VariableDeclaration","scope":100554,"src":"9632:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100545,"name":"string","nodeType":"ElementaryTypeName","src":"9632:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100548,"mutability":"mutable","name":"delim","nameLocation":"9670:5:150","nodeType":"VariableDeclaration","scope":100554,"src":"9654:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100547,"name":"string","nodeType":"ElementaryTypeName","src":"9654:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9631:45:150"},"returnParameters":{"id":100553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100552,"mutability":"mutable","name":"value","nameLocation":"9714:5:150","nodeType":"VariableDeclaration","scope":100554,"src":"9700:19:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":100550,"name":"bool","nodeType":"ElementaryTypeName","src":"9700:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":100551,"nodeType":"ArrayTypeName","src":"9700:6:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"9699:21:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100562,"nodeType":"FunctionDefinition","src":"9870:80:150","nodes":[],"documentation":{"id":100555,"nodeType":"StructuredDocumentation","src":"9727:138:150","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"9879:10:150","parameters":{"id":100558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100557,"mutability":"mutable","name":"name","nameLocation":"9906:4:150","nodeType":"VariableDeclaration","scope":100562,"src":"9890:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100556,"name":"string","nodeType":"ElementaryTypeName","src":"9890:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9889:22:150"},"returnParameters":{"id":100561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100560,"mutability":"mutable","name":"value","nameLocation":"9943:5:150","nodeType":"VariableDeclaration","scope":100562,"src":"9935:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9935:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9934:15:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100573,"nodeType":"FunctionDefinition","src":"10133:112:150","nodes":[],"documentation":{"id":100563,"nodeType":"StructuredDocumentation","src":"9956:172:150","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"10142:10:150","parameters":{"id":100568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100565,"mutability":"mutable","name":"name","nameLocation":"10169:4:150","nodeType":"VariableDeclaration","scope":100573,"src":"10153:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100564,"name":"string","nodeType":"ElementaryTypeName","src":"10153:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100567,"mutability":"mutable","name":"delim","nameLocation":"10191:5:150","nodeType":"VariableDeclaration","scope":100573,"src":"10175:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100566,"name":"string","nodeType":"ElementaryTypeName","src":"10175:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10152:45:150"},"returnParameters":{"id":100572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100571,"mutability":"mutable","name":"value","nameLocation":"10238:5:150","nodeType":"VariableDeclaration","scope":100573,"src":"10221:22:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":100569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10221:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":100570,"nodeType":"ArrayTypeName","src":"10221:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10220:24:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100581,"nodeType":"FunctionDefinition","src":"10392:83:150","nodes":[],"documentation":{"id":100574,"nodeType":"StructuredDocumentation","src":"10251:136:150","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10401:8:150","parameters":{"id":100577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100576,"mutability":"mutable","name":"name","nameLocation":"10426:4:150","nodeType":"VariableDeclaration","scope":100581,"src":"10410:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100575,"name":"string","nodeType":"ElementaryTypeName","src":"10410:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10409:22:150"},"returnParameters":{"id":100580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100579,"mutability":"mutable","name":"value","nameLocation":"10468:5:150","nodeType":"VariableDeclaration","scope":100581,"src":"10455:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":100578,"name":"bytes","nodeType":"ElementaryTypeName","src":"10455:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10454:20:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100592,"nodeType":"FunctionDefinition","src":"10656:108:150","nodes":[],"documentation":{"id":100582,"nodeType":"StructuredDocumentation","src":"10481:170:150","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10665:8:150","parameters":{"id":100587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100584,"mutability":"mutable","name":"name","nameLocation":"10690:4:150","nodeType":"VariableDeclaration","scope":100592,"src":"10674:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100583,"name":"string","nodeType":"ElementaryTypeName","src":"10674:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100586,"mutability":"mutable","name":"delim","nameLocation":"10712:5:150","nodeType":"VariableDeclaration","scope":100592,"src":"10696:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100585,"name":"string","nodeType":"ElementaryTypeName","src":"10696:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10673:45:150"},"returnParameters":{"id":100591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100590,"mutability":"mutable","name":"value","nameLocation":"10757:5:150","nodeType":"VariableDeclaration","scope":100592,"src":"10742:20:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":100588,"name":"bytes","nodeType":"ElementaryTypeName","src":"10742:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":100589,"nodeType":"ArrayTypeName","src":"10742:7:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10741:22:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100600,"nodeType":"FunctionDefinition","src":"10866:77:150","nodes":[],"documentation":{"id":100593,"nodeType":"StructuredDocumentation","src":"10770:91:150","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"10875:9:150","parameters":{"id":100596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100595,"mutability":"mutable","name":"name","nameLocation":"10901:4:150","nodeType":"VariableDeclaration","scope":100600,"src":"10885:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100594,"name":"string","nodeType":"ElementaryTypeName","src":"10885:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10884:22:150"},"returnParameters":{"id":100599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100598,"mutability":"mutable","name":"result","nameLocation":"10935:6:150","nodeType":"VariableDeclaration","scope":100600,"src":"10930:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100597,"name":"bool","nodeType":"ElementaryTypeName","src":"10930:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10929:13:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100608,"nodeType":"FunctionDefinition","src":"11091:75:150","nodes":[],"documentation":{"id":100601,"nodeType":"StructuredDocumentation","src":"10949:137:150","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11100:6:150","parameters":{"id":100604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100603,"mutability":"mutable","name":"name","nameLocation":"11123:4:150","nodeType":"VariableDeclaration","scope":100608,"src":"11107:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100602,"name":"string","nodeType":"ElementaryTypeName","src":"11107:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11106:22:150"},"returnParameters":{"id":100607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100606,"mutability":"mutable","name":"value","nameLocation":"11159:5:150","nodeType":"VariableDeclaration","scope":100608,"src":"11152:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":100605,"name":"int256","nodeType":"ElementaryTypeName","src":"11152:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"11151:14:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100619,"nodeType":"FunctionDefinition","src":"11348:107:150","nodes":[],"documentation":{"id":100609,"nodeType":"StructuredDocumentation","src":"11172:171:150","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11357:6:150","parameters":{"id":100614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100611,"mutability":"mutable","name":"name","nameLocation":"11380:4:150","nodeType":"VariableDeclaration","scope":100619,"src":"11364:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100610,"name":"string","nodeType":"ElementaryTypeName","src":"11364:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100613,"mutability":"mutable","name":"delim","nameLocation":"11402:5:150","nodeType":"VariableDeclaration","scope":100619,"src":"11386:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100612,"name":"string","nodeType":"ElementaryTypeName","src":"11386:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11363:45:150"},"returnParameters":{"id":100618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100617,"mutability":"mutable","name":"value","nameLocation":"11448:5:150","nodeType":"VariableDeclaration","scope":100619,"src":"11432:21:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":100615,"name":"int256","nodeType":"ElementaryTypeName","src":"11432:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":100616,"nodeType":"ArrayTypeName","src":"11432:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"11431:23:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100629,"nodeType":"FunctionDefinition","src":"11646:91:150","nodes":[],"documentation":{"id":100620,"nodeType":"StructuredDocumentation","src":"11461:180:150","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11655:5:150","parameters":{"id":100625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100622,"mutability":"mutable","name":"name","nameLocation":"11677:4:150","nodeType":"VariableDeclaration","scope":100629,"src":"11661:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100621,"name":"string","nodeType":"ElementaryTypeName","src":"11661:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100624,"mutability":"mutable","name":"defaultValue","nameLocation":"11688:12:150","nodeType":"VariableDeclaration","scope":100629,"src":"11683:17:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100623,"name":"bool","nodeType":"ElementaryTypeName","src":"11683:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11660:41:150"},"returnParameters":{"id":100628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100627,"mutability":"mutable","name":"value","nameLocation":"11730:5:150","nodeType":"VariableDeclaration","scope":100629,"src":"11725:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100626,"name":"bool","nodeType":"ElementaryTypeName","src":"11725:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11724:12:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100639,"nodeType":"FunctionDefinition","src":"11931:97:150","nodes":[],"documentation":{"id":100630,"nodeType":"StructuredDocumentation","src":"11743:183:150","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11940:5:150","parameters":{"id":100635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100632,"mutability":"mutable","name":"name","nameLocation":"11962:4:150","nodeType":"VariableDeclaration","scope":100639,"src":"11946:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100631,"name":"string","nodeType":"ElementaryTypeName","src":"11946:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100634,"mutability":"mutable","name":"defaultValue","nameLocation":"11976:12:150","nodeType":"VariableDeclaration","scope":100639,"src":"11968:20:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100633,"name":"uint256","nodeType":"ElementaryTypeName","src":"11968:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11945:44:150"},"returnParameters":{"id":100638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100637,"mutability":"mutable","name":"value","nameLocation":"12021:5:150","nodeType":"VariableDeclaration","scope":100639,"src":"12013:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100636,"name":"uint256","nodeType":"ElementaryTypeName","src":"12013:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12012:15:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100653,"nodeType":"FunctionDefinition","src":"12256:164:150","nodes":[],"documentation":{"id":100640,"nodeType":"StructuredDocumentation","src":"12034:217:150","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12265:5:150","parameters":{"id":100648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100642,"mutability":"mutable","name":"name","nameLocation":"12287:4:150","nodeType":"VariableDeclaration","scope":100653,"src":"12271:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100641,"name":"string","nodeType":"ElementaryTypeName","src":"12271:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100644,"mutability":"mutable","name":"delim","nameLocation":"12309:5:150","nodeType":"VariableDeclaration","scope":100653,"src":"12293:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100643,"name":"string","nodeType":"ElementaryTypeName","src":"12293:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100647,"mutability":"mutable","name":"defaultValue","nameLocation":"12335:12:150","nodeType":"VariableDeclaration","scope":100653,"src":"12316:31:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":100645,"name":"address","nodeType":"ElementaryTypeName","src":"12316:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":100646,"nodeType":"ArrayTypeName","src":"12316:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12270:78:150"},"returnParameters":{"id":100652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100651,"mutability":"mutable","name":"value","nameLocation":"12413:5:150","nodeType":"VariableDeclaration","scope":100653,"src":"12396:22:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":100649,"name":"address","nodeType":"ElementaryTypeName","src":"12396:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":100650,"nodeType":"ArrayTypeName","src":"12396:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12395:24:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100667,"nodeType":"FunctionDefinition","src":"12648:164:150","nodes":[],"documentation":{"id":100654,"nodeType":"StructuredDocumentation","src":"12426:217:150","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12657:5:150","parameters":{"id":100662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100656,"mutability":"mutable","name":"name","nameLocation":"12679:4:150","nodeType":"VariableDeclaration","scope":100667,"src":"12663:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100655,"name":"string","nodeType":"ElementaryTypeName","src":"12663:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100658,"mutability":"mutable","name":"delim","nameLocation":"12701:5:150","nodeType":"VariableDeclaration","scope":100667,"src":"12685:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100657,"name":"string","nodeType":"ElementaryTypeName","src":"12685:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100661,"mutability":"mutable","name":"defaultValue","nameLocation":"12727:12:150","nodeType":"VariableDeclaration","scope":100667,"src":"12708:31:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":100659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12708:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":100660,"nodeType":"ArrayTypeName","src":"12708:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12662:78:150"},"returnParameters":{"id":100666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100665,"mutability":"mutable","name":"value","nameLocation":"12805:5:150","nodeType":"VariableDeclaration","scope":100667,"src":"12788:22:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":100663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12788:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":100664,"nodeType":"ArrayTypeName","src":"12788:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12787:24:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100681,"nodeType":"FunctionDefinition","src":"13039:162:150","nodes":[],"documentation":{"id":100668,"nodeType":"StructuredDocumentation","src":"12818:216:150","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13048:5:150","parameters":{"id":100676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100670,"mutability":"mutable","name":"name","nameLocation":"13070:4:150","nodeType":"VariableDeclaration","scope":100681,"src":"13054:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100669,"name":"string","nodeType":"ElementaryTypeName","src":"13054:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100672,"mutability":"mutable","name":"delim","nameLocation":"13092:5:150","nodeType":"VariableDeclaration","scope":100681,"src":"13076:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100671,"name":"string","nodeType":"ElementaryTypeName","src":"13076:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100675,"mutability":"mutable","name":"defaultValue","nameLocation":"13117:12:150","nodeType":"VariableDeclaration","scope":100681,"src":"13099:30:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":100673,"name":"string","nodeType":"ElementaryTypeName","src":"13099:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":100674,"nodeType":"ArrayTypeName","src":"13099:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13053:77:150"},"returnParameters":{"id":100680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100679,"mutability":"mutable","name":"value","nameLocation":"13194:5:150","nodeType":"VariableDeclaration","scope":100681,"src":"13178:21:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":100677,"name":"string","nodeType":"ElementaryTypeName","src":"13178:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":100678,"nodeType":"ArrayTypeName","src":"13178:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13177:23:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100695,"nodeType":"FunctionDefinition","src":"13427:160:150","nodes":[],"documentation":{"id":100682,"nodeType":"StructuredDocumentation","src":"13207:215:150","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13436:5:150","parameters":{"id":100690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100684,"mutability":"mutable","name":"name","nameLocation":"13458:4:150","nodeType":"VariableDeclaration","scope":100695,"src":"13442:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100683,"name":"string","nodeType":"ElementaryTypeName","src":"13442:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100686,"mutability":"mutable","name":"delim","nameLocation":"13480:5:150","nodeType":"VariableDeclaration","scope":100695,"src":"13464:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100685,"name":"string","nodeType":"ElementaryTypeName","src":"13464:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100689,"mutability":"mutable","name":"defaultValue","nameLocation":"13504:12:150","nodeType":"VariableDeclaration","scope":100695,"src":"13487:29:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":100687,"name":"bytes","nodeType":"ElementaryTypeName","src":"13487:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":100688,"nodeType":"ArrayTypeName","src":"13487:7:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13441:76:150"},"returnParameters":{"id":100694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100693,"mutability":"mutable","name":"value","nameLocation":"13580:5:150","nodeType":"VariableDeclaration","scope":100695,"src":"13565:20:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":100691,"name":"bytes","nodeType":"ElementaryTypeName","src":"13565:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":100692,"nodeType":"ArrayTypeName","src":"13565:7:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13564:22:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100705,"nodeType":"FunctionDefinition","src":"13780:95:150","nodes":[],"documentation":{"id":100696,"nodeType":"StructuredDocumentation","src":"13593:182:150","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13789:5:150","parameters":{"id":100701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100698,"mutability":"mutable","name":"name","nameLocation":"13811:4:150","nodeType":"VariableDeclaration","scope":100705,"src":"13795:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100697,"name":"string","nodeType":"ElementaryTypeName","src":"13795:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100700,"mutability":"mutable","name":"defaultValue","nameLocation":"13824:12:150","nodeType":"VariableDeclaration","scope":100705,"src":"13817:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":100699,"name":"int256","nodeType":"ElementaryTypeName","src":"13817:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13794:43:150"},"returnParameters":{"id":100704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100703,"mutability":"mutable","name":"value","nameLocation":"13868:5:150","nodeType":"VariableDeclaration","scope":100705,"src":"13861:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":100702,"name":"int256","nodeType":"ElementaryTypeName","src":"13861:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13860:14:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100715,"nodeType":"FunctionDefinition","src":"14069:97:150","nodes":[],"documentation":{"id":100706,"nodeType":"StructuredDocumentation","src":"13881:183:150","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14078:5:150","parameters":{"id":100711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100708,"mutability":"mutable","name":"name","nameLocation":"14100:4:150","nodeType":"VariableDeclaration","scope":100715,"src":"14084:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100707,"name":"string","nodeType":"ElementaryTypeName","src":"14084:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100710,"mutability":"mutable","name":"defaultValue","nameLocation":"14114:12:150","nodeType":"VariableDeclaration","scope":100715,"src":"14106:20:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100709,"name":"address","nodeType":"ElementaryTypeName","src":"14106:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14083:44:150"},"returnParameters":{"id":100714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100713,"mutability":"mutable","name":"value","nameLocation":"14159:5:150","nodeType":"VariableDeclaration","scope":100715,"src":"14151:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100712,"name":"address","nodeType":"ElementaryTypeName","src":"14151:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14150:15:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100725,"nodeType":"FunctionDefinition","src":"14360:97:150","nodes":[],"documentation":{"id":100716,"nodeType":"StructuredDocumentation","src":"14172:183:150","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14369:5:150","parameters":{"id":100721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100718,"mutability":"mutable","name":"name","nameLocation":"14391:4:150","nodeType":"VariableDeclaration","scope":100725,"src":"14375:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100717,"name":"string","nodeType":"ElementaryTypeName","src":"14375:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100720,"mutability":"mutable","name":"defaultValue","nameLocation":"14405:12:150","nodeType":"VariableDeclaration","scope":100725,"src":"14397:20:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14397:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14374:44:150"},"returnParameters":{"id":100724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100723,"mutability":"mutable","name":"value","nameLocation":"14450:5:150","nodeType":"VariableDeclaration","scope":100725,"src":"14442:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14442:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14441:15:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100735,"nodeType":"FunctionDefinition","src":"14650:111:150","nodes":[],"documentation":{"id":100726,"nodeType":"StructuredDocumentation","src":"14463:182:150","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14659:5:150","parameters":{"id":100731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100728,"mutability":"mutable","name":"name","nameLocation":"14681:4:150","nodeType":"VariableDeclaration","scope":100735,"src":"14665:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100727,"name":"string","nodeType":"ElementaryTypeName","src":"14665:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100730,"mutability":"mutable","name":"defaultValue","nameLocation":"14703:12:150","nodeType":"VariableDeclaration","scope":100735,"src":"14687:28:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100729,"name":"string","nodeType":"ElementaryTypeName","src":"14687:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14664:52:150"},"returnParameters":{"id":100734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100733,"mutability":"mutable","name":"value","nameLocation":"14754:5:150","nodeType":"VariableDeclaration","scope":100735,"src":"14740:19:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":100732,"name":"string","nodeType":"ElementaryTypeName","src":"14740:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14739:21:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100745,"nodeType":"FunctionDefinition","src":"14953:109:150","nodes":[],"documentation":{"id":100736,"nodeType":"StructuredDocumentation","src":"14767:181:150","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14962:5:150","parameters":{"id":100741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100738,"mutability":"mutable","name":"name","nameLocation":"14984:4:150","nodeType":"VariableDeclaration","scope":100745,"src":"14968:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100737,"name":"string","nodeType":"ElementaryTypeName","src":"14968:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100740,"mutability":"mutable","name":"defaultValue","nameLocation":"15005:12:150","nodeType":"VariableDeclaration","scope":100745,"src":"14990:27:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":100739,"name":"bytes","nodeType":"ElementaryTypeName","src":"14990:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14967:51:150"},"returnParameters":{"id":100744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100743,"mutability":"mutable","name":"value","nameLocation":"15055:5:150","nodeType":"VariableDeclaration","scope":100745,"src":"15042:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":100742,"name":"bytes","nodeType":"ElementaryTypeName","src":"15042:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15041:20:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100759,"nodeType":"FunctionDefinition","src":"15287:158:150","nodes":[],"documentation":{"id":100746,"nodeType":"StructuredDocumentation","src":"15068:214:150","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15296:5:150","parameters":{"id":100754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100748,"mutability":"mutable","name":"name","nameLocation":"15318:4:150","nodeType":"VariableDeclaration","scope":100759,"src":"15302:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100747,"name":"string","nodeType":"ElementaryTypeName","src":"15302:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100750,"mutability":"mutable","name":"delim","nameLocation":"15340:5:150","nodeType":"VariableDeclaration","scope":100759,"src":"15324:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100749,"name":"string","nodeType":"ElementaryTypeName","src":"15324:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100753,"mutability":"mutable","name":"defaultValue","nameLocation":"15363:12:150","nodeType":"VariableDeclaration","scope":100759,"src":"15347:28:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":100751,"name":"bool","nodeType":"ElementaryTypeName","src":"15347:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":100752,"nodeType":"ArrayTypeName","src":"15347:6:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15301:75:150"},"returnParameters":{"id":100758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100757,"mutability":"mutable","name":"value","nameLocation":"15438:5:150","nodeType":"VariableDeclaration","scope":100759,"src":"15424:19:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":100755,"name":"bool","nodeType":"ElementaryTypeName","src":"15424:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":100756,"nodeType":"ArrayTypeName","src":"15424:6:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15423:21:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100773,"nodeType":"FunctionDefinition","src":"15673:164:150","nodes":[],"documentation":{"id":100760,"nodeType":"StructuredDocumentation","src":"15451:217:150","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15682:5:150","parameters":{"id":100768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100762,"mutability":"mutable","name":"name","nameLocation":"15704:4:150","nodeType":"VariableDeclaration","scope":100773,"src":"15688:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100761,"name":"string","nodeType":"ElementaryTypeName","src":"15688:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100764,"mutability":"mutable","name":"delim","nameLocation":"15726:5:150","nodeType":"VariableDeclaration","scope":100773,"src":"15710:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100763,"name":"string","nodeType":"ElementaryTypeName","src":"15710:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100767,"mutability":"mutable","name":"defaultValue","nameLocation":"15752:12:150","nodeType":"VariableDeclaration","scope":100773,"src":"15733:31:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":100765,"name":"uint256","nodeType":"ElementaryTypeName","src":"15733:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":100766,"nodeType":"ArrayTypeName","src":"15733:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15687:78:150"},"returnParameters":{"id":100772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100771,"mutability":"mutable","name":"value","nameLocation":"15830:5:150","nodeType":"VariableDeclaration","scope":100773,"src":"15813:22:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":100769,"name":"uint256","nodeType":"ElementaryTypeName","src":"15813:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":100770,"nodeType":"ArrayTypeName","src":"15813:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15812:24:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100787,"nodeType":"FunctionDefinition","src":"16064:162:150","nodes":[],"documentation":{"id":100774,"nodeType":"StructuredDocumentation","src":"15843:216:150","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"16073:5:150","parameters":{"id":100782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100776,"mutability":"mutable","name":"name","nameLocation":"16095:4:150","nodeType":"VariableDeclaration","scope":100787,"src":"16079:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100775,"name":"string","nodeType":"ElementaryTypeName","src":"16079:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100778,"mutability":"mutable","name":"delim","nameLocation":"16117:5:150","nodeType":"VariableDeclaration","scope":100787,"src":"16101:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100777,"name":"string","nodeType":"ElementaryTypeName","src":"16101:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100781,"mutability":"mutable","name":"defaultValue","nameLocation":"16142:12:150","nodeType":"VariableDeclaration","scope":100787,"src":"16124:30:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":100779,"name":"int256","nodeType":"ElementaryTypeName","src":"16124:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":100780,"nodeType":"ArrayTypeName","src":"16124:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16078:77:150"},"returnParameters":{"id":100786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100785,"mutability":"mutable","name":"value","nameLocation":"16219:5:150","nodeType":"VariableDeclaration","scope":100787,"src":"16203:21:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":100783,"name":"int256","nodeType":"ElementaryTypeName","src":"16203:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":100784,"nodeType":"ArrayTypeName","src":"16203:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16202:23:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100795,"nodeType":"FunctionDefinition","src":"16374:85:150","nodes":[],"documentation":{"id":100788,"nodeType":"StructuredDocumentation","src":"16232:137:150","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16383:9:150","parameters":{"id":100791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100790,"mutability":"mutable","name":"name","nameLocation":"16409:4:150","nodeType":"VariableDeclaration","scope":100795,"src":"16393:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100789,"name":"string","nodeType":"ElementaryTypeName","src":"16393:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16392:22:150"},"returnParameters":{"id":100794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100793,"mutability":"mutable","name":"value","nameLocation":"16452:5:150","nodeType":"VariableDeclaration","scope":100795,"src":"16438:19:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":100792,"name":"string","nodeType":"ElementaryTypeName","src":"16438:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16437:21:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100806,"nodeType":"FunctionDefinition","src":"16641:110:150","nodes":[],"documentation":{"id":100796,"nodeType":"StructuredDocumentation","src":"16465:171:150","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16650:9:150","parameters":{"id":100801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100798,"mutability":"mutable","name":"name","nameLocation":"16676:4:150","nodeType":"VariableDeclaration","scope":100806,"src":"16660:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100797,"name":"string","nodeType":"ElementaryTypeName","src":"16660:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100800,"mutability":"mutable","name":"delim","nameLocation":"16698:5:150","nodeType":"VariableDeclaration","scope":100806,"src":"16682:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100799,"name":"string","nodeType":"ElementaryTypeName","src":"16682:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16659:45:150"},"returnParameters":{"id":100805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100804,"mutability":"mutable","name":"value","nameLocation":"16744:5:150","nodeType":"VariableDeclaration","scope":100806,"src":"16728:21:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":100802,"name":"string","nodeType":"ElementaryTypeName","src":"16728:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":100803,"nodeType":"ArrayTypeName","src":"16728:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"16727:23:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100814,"nodeType":"FunctionDefinition","src":"16900:77:150","nodes":[],"documentation":{"id":100807,"nodeType":"StructuredDocumentation","src":"16757:138:150","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"16909:7:150","parameters":{"id":100810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100809,"mutability":"mutable","name":"name","nameLocation":"16933:4:150","nodeType":"VariableDeclaration","scope":100814,"src":"16917:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100808,"name":"string","nodeType":"ElementaryTypeName","src":"16917:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16916:22:150"},"returnParameters":{"id":100813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100812,"mutability":"mutable","name":"value","nameLocation":"16970:5:150","nodeType":"VariableDeclaration","scope":100814,"src":"16962:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100811,"name":"uint256","nodeType":"ElementaryTypeName","src":"16962:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16961:15:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100825,"nodeType":"FunctionDefinition","src":"17160:109:150","nodes":[],"documentation":{"id":100815,"nodeType":"StructuredDocumentation","src":"16983:172:150","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"17169:7:150","parameters":{"id":100820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100817,"mutability":"mutable","name":"name","nameLocation":"17193:4:150","nodeType":"VariableDeclaration","scope":100825,"src":"17177:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100816,"name":"string","nodeType":"ElementaryTypeName","src":"17177:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100819,"mutability":"mutable","name":"delim","nameLocation":"17215:5:150","nodeType":"VariableDeclaration","scope":100825,"src":"17199:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100818,"name":"string","nodeType":"ElementaryTypeName","src":"17199:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17176:45:150"},"returnParameters":{"id":100824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100823,"mutability":"mutable","name":"value","nameLocation":"17262:5:150","nodeType":"VariableDeclaration","scope":100825,"src":"17245:22:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":100821,"name":"uint256","nodeType":"ElementaryTypeName","src":"17245:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":100822,"nodeType":"ArrayTypeName","src":"17245:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17244:24:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100834,"nodeType":"FunctionDefinition","src":"17346:77:150","nodes":[],"documentation":{"id":100826,"nodeType":"StructuredDocumentation","src":"17275:66:150","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"17355:9:150","parameters":{"id":100830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100829,"mutability":"mutable","name":"context","nameLocation":"17378:7:150","nodeType":"VariableDeclaration","scope":100834,"src":"17365:20:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$100370","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":100828,"nodeType":"UserDefinedTypeName","pathNode":{"id":100827,"name":"ForgeContext","nameLocations":["17365:12:150"],"nodeType":"IdentifierPath","referencedDeclaration":100370,"src":"17365:12:150"},"referencedDeclaration":100370,"src":"17365:12:150","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$100370","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"17364:22:150"},"returnParameters":{"id":100833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100832,"mutability":"mutable","name":"result","nameLocation":"17415:6:150","nodeType":"VariableDeclaration","scope":100834,"src":"17410:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100831,"name":"bool","nodeType":"ElementaryTypeName","src":"17410:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17409:13:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100842,"nodeType":"FunctionDefinition","src":"17465:70:150","nodes":[],"documentation":{"id":100835,"nodeType":"StructuredDocumentation","src":"17429:31:150","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"17474:6:150","parameters":{"id":100840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100837,"mutability":"mutable","name":"name","nameLocation":"17497:4:150","nodeType":"VariableDeclaration","scope":100842,"src":"17481:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100836,"name":"string","nodeType":"ElementaryTypeName","src":"17481:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100839,"mutability":"mutable","name":"value","nameLocation":"17519:5:150","nodeType":"VariableDeclaration","scope":100842,"src":"17503:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100838,"name":"string","nodeType":"ElementaryTypeName","src":"17503:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17480:45:150"},"returnParameters":{"id":100841,"nodeType":"ParameterList","parameters":[],"src":"17534:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":100854,"nodeType":"FunctionDefinition","src":"17667:109:150","nodes":[],"documentation":{"id":100843,"nodeType":"StructuredDocumentation","src":"17571:91:150","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"17676:8:150","parameters":{"id":100846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100845,"mutability":"mutable","name":"target","nameLocation":"17693:6:150","nodeType":"VariableDeclaration","scope":100854,"src":"17685:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100844,"name":"address","nodeType":"ElementaryTypeName","src":"17685:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17684:16:150"},"returnParameters":{"id":100853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100849,"mutability":"mutable","name":"readSlots","nameLocation":"17736:9:150","nodeType":"VariableDeclaration","scope":100854,"src":"17719:26:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":100847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17719:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":100848,"nodeType":"ArrayTypeName","src":"17719:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":100852,"mutability":"mutable","name":"writeSlots","nameLocation":"17764:10:150","nodeType":"VariableDeclaration","scope":100854,"src":"17747:27:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":100850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":100851,"nodeType":"ArrayTypeName","src":"17747:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17718:57:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":100862,"nodeType":"FunctionDefinition","src":"17832:74:150","nodes":[],"documentation":{"id":100855,"nodeType":"StructuredDocumentation","src":"17782:45:150","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"17841:4:150","parameters":{"id":100858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100857,"mutability":"mutable","name":"privateKey","nameLocation":"17854:10:150","nodeType":"VariableDeclaration","scope":100862,"src":"17846:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100856,"name":"uint256","nodeType":"ElementaryTypeName","src":"17846:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17845:20:150"},"returnParameters":{"id":100861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100860,"mutability":"mutable","name":"keyAddr","nameLocation":"17897:7:150","nodeType":"VariableDeclaration","scope":100862,"src":"17889:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100859,"name":"address","nodeType":"ElementaryTypeName","src":"17889:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17888:17:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":100879,"nodeType":"FunctionDefinition","src":"17969:160:150","nodes":[],"documentation":{"id":100863,"nodeType":"StructuredDocumentation","src":"17912:52:150","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"17978:11:150","parameters":{"id":100873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100865,"mutability":"mutable","name":"fromBlock","nameLocation":"17998:9:150","nodeType":"VariableDeclaration","scope":100879,"src":"17990:17:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100864,"name":"uint256","nodeType":"ElementaryTypeName","src":"17990:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100867,"mutability":"mutable","name":"toBlock","nameLocation":"18017:7:150","nodeType":"VariableDeclaration","scope":100879,"src":"18009:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100866,"name":"uint256","nodeType":"ElementaryTypeName","src":"18009:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100869,"mutability":"mutable","name":"target","nameLocation":"18034:6:150","nodeType":"VariableDeclaration","scope":100879,"src":"18026:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100868,"name":"address","nodeType":"ElementaryTypeName","src":"18026:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100872,"mutability":"mutable","name":"topics","nameLocation":"18061:6:150","nodeType":"VariableDeclaration","scope":100879,"src":"18042:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":100870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18042:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":100871,"nodeType":"ArrayTypeName","src":"18042:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17989:79:150"},"returnParameters":{"id":100878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100877,"mutability":"mutable","name":"logs","nameLocation":"18123:4:150","nodeType":"VariableDeclaration","scope":100879,"src":"18103:24:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$100406_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":100875,"nodeType":"UserDefinedTypeName","pathNode":{"id":100874,"name":"EthGetLogs","nameLocations":["18103:10:150"],"nodeType":"IdentifierPath","referencedDeclaration":100406,"src":"18103:10:150"},"referencedDeclaration":100406,"src":"18103:10:150","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$100406_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":100876,"nodeType":"ArrayTypeName","src":"18103:12:150","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$100406_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"18102:26:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":100885,"nodeType":"FunctionDefinition","src":"18466:70:150","nodes":[],"documentation":{"id":100880,"nodeType":"StructuredDocumentation","src":"18135:326:150","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"18475:14:150","parameters":{"id":100881,"nodeType":"ParameterList","parameters":[],"src":"18489:2:150"},"returnParameters":{"id":100884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100883,"mutability":"mutable","name":"blobBaseFee","nameLocation":"18523:11:150","nodeType":"VariableDeclaration","scope":100885,"src":"18515:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100882,"name":"uint256","nodeType":"ElementaryTypeName","src":"18515:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18514:21:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100891,"nodeType":"FunctionDefinition","src":"18851:65:150","nodes":[],"documentation":{"id":100886,"nodeType":"StructuredDocumentation","src":"18542:304:150","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"18860:14:150","parameters":{"id":100887,"nodeType":"ParameterList","parameters":[],"src":"18874:2:150"},"returnParameters":{"id":100890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100889,"mutability":"mutable","name":"height","nameLocation":"18908:6:150","nodeType":"VariableDeclaration","scope":100891,"src":"18900:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100888,"name":"uint256","nodeType":"ElementaryTypeName","src":"18900:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18899:16:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100897,"nodeType":"FunctionDefinition","src":"19240:71:150","nodes":[],"documentation":{"id":100892,"nodeType":"StructuredDocumentation","src":"18922:313:150","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"19249:17:150","parameters":{"id":100893,"nodeType":"ParameterList","parameters":[],"src":"19266:2:150"},"returnParameters":{"id":100896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100895,"mutability":"mutable","name":"timestamp","nameLocation":"19300:9:150","nodeType":"VariableDeclaration","scope":100897,"src":"19292:17:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100894,"name":"uint256","nodeType":"ElementaryTypeName","src":"19292:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19291:19:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100911,"nodeType":"FunctionDefinition","src":"19404:146:150","nodes":[],"documentation":{"id":100898,"nodeType":"StructuredDocumentation","src":"19317:82:150","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"19413:24:150","parameters":{"id":100903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100900,"mutability":"mutable","name":"target","nameLocation":"19446:6:150","nodeType":"VariableDeclaration","scope":100911,"src":"19438:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100899,"name":"address","nodeType":"ElementaryTypeName","src":"19438:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100902,"mutability":"mutable","name":"elementSlot","nameLocation":"19462:11:150","nodeType":"VariableDeclaration","scope":100911,"src":"19454:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19454:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19437:37:150"},"returnParameters":{"id":100910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100905,"mutability":"mutable","name":"found","nameLocation":"19514:5:150","nodeType":"VariableDeclaration","scope":100911,"src":"19509:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100904,"name":"bool","nodeType":"ElementaryTypeName","src":"19509:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":100907,"mutability":"mutable","name":"key","nameLocation":"19529:3:150","nodeType":"VariableDeclaration","scope":100911,"src":"19521:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19521:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":100909,"mutability":"mutable","name":"parent","nameLocation":"19542:6:150","nodeType":"VariableDeclaration","scope":100911,"src":"19534:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19534:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19508:41:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":100921,"nodeType":"FunctionDefinition","src":"19647:97:150","nodes":[],"documentation":{"id":100912,"nodeType":"StructuredDocumentation","src":"19556:86:150","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"19656:16:150","parameters":{"id":100917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100914,"mutability":"mutable","name":"target","nameLocation":"19681:6:150","nodeType":"VariableDeclaration","scope":100921,"src":"19673:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100913,"name":"address","nodeType":"ElementaryTypeName","src":"19673:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100916,"mutability":"mutable","name":"mappingSlot","nameLocation":"19697:11:150","nodeType":"VariableDeclaration","scope":100921,"src":"19689:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19689:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19672:37:150"},"returnParameters":{"id":100920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100919,"mutability":"mutable","name":"length","nameLocation":"19736:6:150","nodeType":"VariableDeclaration","scope":100921,"src":"19728:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100918,"name":"uint256","nodeType":"ElementaryTypeName","src":"19728:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19727:16:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":100933,"nodeType":"FunctionDefinition","src":"19948:109:150","nodes":[],"documentation":{"id":100922,"nodeType":"StructuredDocumentation","src":"19750:193:150","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"19957:16:150","parameters":{"id":100929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100924,"mutability":"mutable","name":"target","nameLocation":"19982:6:150","nodeType":"VariableDeclaration","scope":100933,"src":"19974:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100923,"name":"address","nodeType":"ElementaryTypeName","src":"19974:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100926,"mutability":"mutable","name":"mappingSlot","nameLocation":"19998:11:150","nodeType":"VariableDeclaration","scope":100933,"src":"19990:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19990:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":100928,"mutability":"mutable","name":"idx","nameLocation":"20019:3:150","nodeType":"VariableDeclaration","scope":100933,"src":"20011:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100927,"name":"uint256","nodeType":"ElementaryTypeName","src":"20011:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19973:50:150"},"returnParameters":{"id":100932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100931,"mutability":"mutable","name":"value","nameLocation":"20050:5:150","nodeType":"VariableDeclaration","scope":100933,"src":"20042:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20042:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20041:15:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":100941,"nodeType":"FunctionDefinition","src":"20101:72:150","nodes":[],"documentation":{"id":100934,"nodeType":"StructuredDocumentation","src":"20063:33:150","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"20110:8:150","parameters":{"id":100937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100936,"mutability":"mutable","name":"account","nameLocation":"20127:7:150","nodeType":"VariableDeclaration","scope":100941,"src":"20119:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100935,"name":"address","nodeType":"ElementaryTypeName","src":"20119:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20118:17:150"},"returnParameters":{"id":100940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100939,"mutability":"mutable","name":"nonce","nameLocation":"20166:5:150","nodeType":"VariableDeclaration","scope":100941,"src":"20159:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":100938,"name":"uint64","nodeType":"ElementaryTypeName","src":"20159:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"20158:14:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100949,"nodeType":"FunctionDefinition","src":"20215:64:150","nodes":[],"documentation":{"id":100942,"nodeType":"StructuredDocumentation","src":"20179:31:150","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"20224:15:150","parameters":{"id":100943,"nodeType":"ParameterList","parameters":[],"src":"20239:2:150"},"returnParameters":{"id":100948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100947,"mutability":"mutable","name":"logs","nameLocation":"20273:4:150","nodeType":"VariableDeclaration","scope":100949,"src":"20260:17:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$100379_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":100945,"nodeType":"UserDefinedTypeName","pathNode":{"id":100944,"name":"Log","nameLocations":["20260:3:150"],"nodeType":"IdentifierPath","referencedDeclaration":100379,"src":"20260:3:150"},"referencedDeclaration":100379,"src":"20260:3:150","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$100379_storage_ptr","typeString":"struct VmSafe.Log"}},"id":100946,"nodeType":"ArrayTypeName","src":"20260:5:150","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$100379_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"20259:19:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":100956,"nodeType":"FunctionDefinition","src":"20329:62:150","nodes":[],"documentation":{"id":100950,"nodeType":"StructuredDocumentation","src":"20285:39:150","text":"Gets the gas used in the last call."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"20338:11:150","parameters":{"id":100951,"nodeType":"ParameterList","parameters":[],"src":"20349:2:150"},"returnParameters":{"id":100955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100954,"mutability":"mutable","name":"gas","nameLocation":"20386:3:150","nodeType":"VariableDeclaration","scope":100956,"src":"20375:14:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$100516_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":100953,"nodeType":"UserDefinedTypeName","pathNode":{"id":100952,"name":"Gas","nameLocations":["20375:3:150"],"nodeType":"IdentifierPath","referencedDeclaration":100516,"src":"20375:3:150"},"referencedDeclaration":100516,"src":"20375:3:150","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$100516_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"20374:16:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100966,"nodeType":"FunctionDefinition","src":"20443:81:150","nodes":[],"documentation":{"id":100957,"nodeType":"StructuredDocumentation","src":"20397:41:150","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"20452:4:150","parameters":{"id":100962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100959,"mutability":"mutable","name":"target","nameLocation":"20465:6:150","nodeType":"VariableDeclaration","scope":100966,"src":"20457:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100958,"name":"address","nodeType":"ElementaryTypeName","src":"20457:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100961,"mutability":"mutable","name":"slot","nameLocation":"20481:4:150","nodeType":"VariableDeclaration","scope":100966,"src":"20473:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20473:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20456:30:150"},"returnParameters":{"id":100965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100964,"mutability":"mutable","name":"data","nameLocation":"20518:4:150","nodeType":"VariableDeclaration","scope":100966,"src":"20510:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20510:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20509:14:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":100970,"nodeType":"FunctionDefinition","src":"20615:37:150","nodes":[],"documentation":{"id":100967,"nodeType":"StructuredDocumentation","src":"20530:80:150","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"20624:16:150","parameters":{"id":100968,"nodeType":"ParameterList","parameters":[],"src":"20640:2:150"},"returnParameters":{"id":100969,"nodeType":"ParameterList","parameters":[],"src":"20651:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":100974,"nodeType":"FunctionDefinition","src":"20704:27:150","nodes":[],"documentation":{"id":100971,"nodeType":"StructuredDocumentation","src":"20658:41:150","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"20713:6:150","parameters":{"id":100972,"nodeType":"ParameterList","parameters":[],"src":"20719:2:150"},"returnParameters":{"id":100973,"nodeType":"ParameterList","parameters":[],"src":"20730:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":100978,"nodeType":"FunctionDefinition","src":"20778:31:150","nodes":[],"documentation":{"id":100975,"nodeType":"StructuredDocumentation","src":"20737:36:150","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"20787:10:150","parameters":{"id":100976,"nodeType":"ParameterList","parameters":[],"src":"20797:2:150"},"returnParameters":{"id":100977,"nodeType":"ParameterList","parameters":[],"src":"20808:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":100982,"nodeType":"FunctionDefinition","src":"20899:38:150","nodes":[],"documentation":{"id":100979,"nodeType":"StructuredDocumentation","src":"20815:79:150","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"20908:17:150","parameters":{"id":100980,"nodeType":"ParameterList","parameters":[],"src":"20925:2:150"},"returnParameters":{"id":100981,"nodeType":"ParameterList","parameters":[],"src":"20936:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":100992,"nodeType":"FunctionDefinition","src":"21014:98:150","nodes":[],"documentation":{"id":100983,"nodeType":"StructuredDocumentation","src":"20943:66:150","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"21023:3:150","parameters":{"id":100988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100985,"mutability":"mutable","name":"method","nameLocation":"21043:6:150","nodeType":"VariableDeclaration","scope":100992,"src":"21027:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100984,"name":"string","nodeType":"ElementaryTypeName","src":"21027:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":100987,"mutability":"mutable","name":"params","nameLocation":"21067:6:150","nodeType":"VariableDeclaration","scope":100992,"src":"21051:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":100986,"name":"string","nodeType":"ElementaryTypeName","src":"21051:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21026:48:150"},"returnParameters":{"id":100991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100990,"mutability":"mutable","name":"data","nameLocation":"21106:4:150","nodeType":"VariableDeclaration","scope":100992,"src":"21093:17:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":100989,"name":"bytes","nodeType":"ElementaryTypeName","src":"21093:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21092:19:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101004,"nodeType":"FunctionDefinition","src":"21186:99:150","nodes":[],"documentation":{"id":100993,"nodeType":"StructuredDocumentation","src":"21118:63:150","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"21195:8:150","parameters":{"id":100998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100995,"mutability":"mutable","name":"privateKey","nameLocation":"21212:10:150","nodeType":"VariableDeclaration","scope":101004,"src":"21204:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100994,"name":"uint256","nodeType":"ElementaryTypeName","src":"21204:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100997,"mutability":"mutable","name":"digest","nameLocation":"21232:6:150","nodeType":"VariableDeclaration","scope":101004,"src":"21224:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21224:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21203:36:150"},"returnParameters":{"id":101003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101000,"mutability":"mutable","name":"r","nameLocation":"21271:1:150","nodeType":"VariableDeclaration","scope":101004,"src":"21263:9:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21263:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":101002,"mutability":"mutable","name":"s","nameLocation":"21282:1:150","nodeType":"VariableDeclaration","scope":101004,"src":"21274:9:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":101001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21274:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21262:22:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101018,"nodeType":"FunctionDefinition","src":"21359:104:150","nodes":[],"documentation":{"id":101005,"nodeType":"StructuredDocumentation","src":"21291:63:150","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"21368:4:150","parameters":{"id":101010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101007,"mutability":"mutable","name":"privateKey","nameLocation":"21381:10:150","nodeType":"VariableDeclaration","scope":101018,"src":"21373:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101006,"name":"uint256","nodeType":"ElementaryTypeName","src":"21373:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101009,"mutability":"mutable","name":"digest","nameLocation":"21401:6:150","nodeType":"VariableDeclaration","scope":101018,"src":"21393:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":101008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21393:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21372:36:150"},"returnParameters":{"id":101017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101012,"mutability":"mutable","name":"v","nameLocation":"21438:1:150","nodeType":"VariableDeclaration","scope":101018,"src":"21432:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":101011,"name":"uint8","nodeType":"ElementaryTypeName","src":"21432:5:150","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":101014,"mutability":"mutable","name":"r","nameLocation":"21449:1:150","nodeType":"VariableDeclaration","scope":101018,"src":"21441:9:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":101013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21441:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":101016,"mutability":"mutable","name":"s","nameLocation":"21460:1:150","nodeType":"VariableDeclaration","scope":101018,"src":"21452:9:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":101015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21452:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21431:31:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101030,"nodeType":"FunctionDefinition","src":"21902:84:150","nodes":[],"documentation":{"id":101019,"nodeType":"StructuredDocumentation","src":"21469:428:150","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"21911:4:150","parameters":{"id":101022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101021,"mutability":"mutable","name":"digest","nameLocation":"21924:6:150","nodeType":"VariableDeclaration","scope":101030,"src":"21916:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":101020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21916:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21915:16:150"},"returnParameters":{"id":101029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101024,"mutability":"mutable","name":"v","nameLocation":"21961:1:150","nodeType":"VariableDeclaration","scope":101030,"src":"21955:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":101023,"name":"uint8","nodeType":"ElementaryTypeName","src":"21955:5:150","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":101026,"mutability":"mutable","name":"r","nameLocation":"21972:1:150","nodeType":"VariableDeclaration","scope":101030,"src":"21964:9:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":101025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21964:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":101028,"mutability":"mutable","name":"s","nameLocation":"21983:1:150","nodeType":"VariableDeclaration","scope":101030,"src":"21975:9:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":101027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21975:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21954:31:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101044,"nodeType":"FunctionDefinition","src":"22163:100:150","nodes":[],"documentation":{"id":101031,"nodeType":"StructuredDocumentation","src":"21992:166:150","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"22172:4:150","parameters":{"id":101036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101033,"mutability":"mutable","name":"signer","nameLocation":"22185:6:150","nodeType":"VariableDeclaration","scope":101044,"src":"22177:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101032,"name":"address","nodeType":"ElementaryTypeName","src":"22177:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":101035,"mutability":"mutable","name":"digest","nameLocation":"22201:6:150","nodeType":"VariableDeclaration","scope":101044,"src":"22193:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":101034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22193:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22176:32:150"},"returnParameters":{"id":101043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101038,"mutability":"mutable","name":"v","nameLocation":"22238:1:150","nodeType":"VariableDeclaration","scope":101044,"src":"22232:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":101037,"name":"uint8","nodeType":"ElementaryTypeName","src":"22232:5:150","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":101040,"mutability":"mutable","name":"r","nameLocation":"22249:1:150","nodeType":"VariableDeclaration","scope":101044,"src":"22241:9:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":101039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22241:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":101042,"mutability":"mutable","name":"s","nameLocation":"22260:1:150","nodeType":"VariableDeclaration","scope":101044,"src":"22252:9:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":101041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22252:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22231:31:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101048,"nodeType":"FunctionDefinition","src":"22331:42:150","nodes":[],"documentation":{"id":101045,"nodeType":"StructuredDocumentation","src":"22269:57:150","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"22340:21:150","parameters":{"id":101046,"nodeType":"ParameterList","parameters":[],"src":"22361:2:150"},"returnParameters":{"id":101047,"nodeType":"ParameterList","parameters":[],"src":"22372:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101052,"nodeType":"FunctionDefinition","src":"22517:44:150","nodes":[],"documentation":{"id":101049,"nodeType":"StructuredDocumentation","src":"22379:133:150","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"22526:23:150","parameters":{"id":101050,"nodeType":"ParameterList","parameters":[],"src":"22549:2:150"},"returnParameters":{"id":101051,"nodeType":"ParameterList","parameters":[],"src":"22560:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101060,"nodeType":"FunctionDefinition","src":"22669:92:150","nodes":[],"documentation":{"id":101053,"nodeType":"StructuredDocumentation","src":"22567:97:150","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"22678:22:150","parameters":{"id":101054,"nodeType":"ParameterList","parameters":[],"src":"22700:2:150"},"returnParameters":{"id":101059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101058,"mutability":"mutable","name":"accountAccesses","nameLocation":"22744:15:150","nodeType":"VariableDeclaration","scope":101060,"src":"22721:38:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$100490_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":101056,"nodeType":"UserDefinedTypeName","pathNode":{"id":101055,"name":"AccountAccess","nameLocations":["22721:13:150"],"nodeType":"IdentifierPath","referencedDeclaration":100490,"src":"22721:13:150"},"referencedDeclaration":100490,"src":"22721:13:150","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$100490_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":101057,"nodeType":"ArrayTypeName","src":"22721:15:150","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$100490_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"22720:40:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101064,"nodeType":"FunctionDefinition","src":"22857:41:150","nodes":[],"documentation":{"id":101061,"nodeType":"StructuredDocumentation","src":"22767:85:150","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"22866:20:150","parameters":{"id":101062,"nodeType":"ParameterList","parameters":[],"src":"22886:2:150"},"returnParameters":{"id":101063,"nodeType":"ParameterList","parameters":[],"src":"22897:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101070,"nodeType":"FunctionDefinition","src":"23097:50:150","nodes":[],"documentation":{"id":101065,"nodeType":"StructuredDocumentation","src":"22941:151:150","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"23106:9:150","parameters":{"id":101068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101067,"mutability":"mutable","name":"path","nameLocation":"23132:4:150","nodeType":"VariableDeclaration","scope":101070,"src":"23116:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101066,"name":"string","nodeType":"ElementaryTypeName","src":"23116:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23115:22:150"},"returnParameters":{"id":101069,"nodeType":"ParameterList","parameters":[],"src":"23146:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101080,"nodeType":"FunctionDefinition","src":"23462:93:150","nodes":[],"documentation":{"id":101071,"nodeType":"StructuredDocumentation","src":"23153:304:150","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"23471:8:150","parameters":{"id":101076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101073,"mutability":"mutable","name":"from","nameLocation":"23496:4:150","nodeType":"VariableDeclaration","scope":101080,"src":"23480:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101072,"name":"string","nodeType":"ElementaryTypeName","src":"23480:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101075,"mutability":"mutable","name":"to","nameLocation":"23518:2:150","nodeType":"VariableDeclaration","scope":101080,"src":"23502:18:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101074,"name":"string","nodeType":"ElementaryTypeName","src":"23502:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23479:42:150"},"returnParameters":{"id":101079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101078,"mutability":"mutable","name":"copied","nameLocation":"23547:6:150","nodeType":"VariableDeclaration","scope":101080,"src":"23540:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":101077,"name":"uint64","nodeType":"ElementaryTypeName","src":"23540:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"23539:15:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101088,"nodeType":"FunctionDefinition","src":"23960:66:150","nodes":[],"documentation":{"id":101081,"nodeType":"StructuredDocumentation","src":"23561:394:150","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"23969:9:150","parameters":{"id":101086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101083,"mutability":"mutable","name":"path","nameLocation":"23995:4:150","nodeType":"VariableDeclaration","scope":101088,"src":"23979:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101082,"name":"string","nodeType":"ElementaryTypeName","src":"23979:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101085,"mutability":"mutable","name":"recursive","nameLocation":"24006:9:150","nodeType":"VariableDeclaration","scope":101088,"src":"24001:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":101084,"name":"bool","nodeType":"ElementaryTypeName","src":"24001:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23978:38:150"},"returnParameters":{"id":101087,"nodeType":"ParameterList","parameters":[],"src":"24025:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101096,"nodeType":"FunctionDefinition","src":"24121:69:150","nodes":[],"documentation":{"id":101089,"nodeType":"StructuredDocumentation","src":"24032:84:150","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"24130:6:150","parameters":{"id":101092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101091,"mutability":"mutable","name":"path","nameLocation":"24153:4:150","nodeType":"VariableDeclaration","scope":101096,"src":"24137:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101090,"name":"string","nodeType":"ElementaryTypeName","src":"24137:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24136:22:150"},"returnParameters":{"id":101095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101094,"mutability":"mutable","name":"result","nameLocation":"24182:6:150","nodeType":"VariableDeclaration","scope":101096,"src":"24177:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":101093,"name":"bool","nodeType":"ElementaryTypeName","src":"24177:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24176:13:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101105,"nodeType":"FunctionDefinition","src":"24255:84:150","nodes":[],"documentation":{"id":101097,"nodeType":"StructuredDocumentation","src":"24196:54:150","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"24264:3:150","parameters":{"id":101101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101100,"mutability":"mutable","name":"commandInput","nameLocation":"24286:12:150","nodeType":"VariableDeclaration","scope":101105,"src":"24268:30:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":101098,"name":"string","nodeType":"ElementaryTypeName","src":"24268:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":101099,"nodeType":"ArrayTypeName","src":"24268:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"24267:32:150"},"returnParameters":{"id":101104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101103,"mutability":"mutable","name":"result","nameLocation":"24331:6:150","nodeType":"VariableDeclaration","scope":101105,"src":"24318:19:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":101102,"name":"bytes","nodeType":"ElementaryTypeName","src":"24318:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24317:21:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101114,"nodeType":"FunctionDefinition","src":"24438:93:150","nodes":[],"documentation":{"id":101106,"nodeType":"StructuredDocumentation","src":"24345:88:150","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"24447:10:150","parameters":{"id":101109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101108,"mutability":"mutable","name":"path","nameLocation":"24474:4:150","nodeType":"VariableDeclaration","scope":101114,"src":"24458:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101107,"name":"string","nodeType":"ElementaryTypeName","src":"24458:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24457:22:150"},"returnParameters":{"id":101113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101112,"mutability":"mutable","name":"metadata","nameLocation":"24521:8:150","nodeType":"VariableDeclaration","scope":101114,"src":"24503:26:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$100434_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":101111,"nodeType":"UserDefinedTypeName","pathNode":{"id":101110,"name":"FsMetadata","nameLocations":["24503:10:150"],"nodeType":"IdentifierPath","referencedDeclaration":100434,"src":"24503:10:150"},"referencedDeclaration":100434,"src":"24503:10:150","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$100434_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"24502:28:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":101122,"nodeType":"FunctionDefinition","src":"24769:101:150","nodes":[],"documentation":{"id":101115,"nodeType":"StructuredDocumentation","src":"24537:227:150","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"24778:7:150","parameters":{"id":101118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101117,"mutability":"mutable","name":"artifactPath","nameLocation":"24802:12:150","nodeType":"VariableDeclaration","scope":101122,"src":"24786:28:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101116,"name":"string","nodeType":"ElementaryTypeName","src":"24786:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24785:30:150"},"returnParameters":{"id":101121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101120,"mutability":"mutable","name":"creationBytecode","nameLocation":"24852:16:150","nodeType":"VariableDeclaration","scope":101122,"src":"24839:29:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":101119,"name":"bytes","nodeType":"ElementaryTypeName","src":"24839:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24838:31:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":101130,"nodeType":"FunctionDefinition","src":"25108:108:150","nodes":[],"documentation":{"id":101123,"nodeType":"StructuredDocumentation","src":"24876:227:150","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"25117:15:150","parameters":{"id":101126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101125,"mutability":"mutable","name":"artifactPath","nameLocation":"25149:12:150","nodeType":"VariableDeclaration","scope":101130,"src":"25133:28:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101124,"name":"string","nodeType":"ElementaryTypeName","src":"25133:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25132:30:150"},"returnParameters":{"id":101129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101128,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"25199:15:150","nodeType":"VariableDeclaration","scope":101130,"src":"25186:28:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":101127,"name":"bytes","nodeType":"ElementaryTypeName","src":"25186:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25185:30:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":101138,"nodeType":"FunctionDefinition","src":"25322:68:150","nodes":[],"documentation":{"id":101131,"nodeType":"StructuredDocumentation","src":"25222:95:150","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"25331:5:150","parameters":{"id":101134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101133,"mutability":"mutable","name":"path","nameLocation":"25353:4:150","nodeType":"VariableDeclaration","scope":101138,"src":"25337:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101132,"name":"string","nodeType":"ElementaryTypeName","src":"25337:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25336:22:150"},"returnParameters":{"id":101137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101136,"mutability":"mutable","name":"result","nameLocation":"25382:6:150","nodeType":"VariableDeclaration","scope":101138,"src":"25377:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":101135,"name":"bool","nodeType":"ElementaryTypeName","src":"25377:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25376:13:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101146,"nodeType":"FunctionDefinition","src":"25499:69:150","nodes":[],"documentation":{"id":101139,"nodeType":"StructuredDocumentation","src":"25396:98:150","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"25508:6:150","parameters":{"id":101142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101141,"mutability":"mutable","name":"path","nameLocation":"25531:4:150","nodeType":"VariableDeclaration","scope":101146,"src":"25515:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101140,"name":"string","nodeType":"ElementaryTypeName","src":"25515:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25514:22:150"},"returnParameters":{"id":101145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101144,"mutability":"mutable","name":"result","nameLocation":"25560:6:150","nodeType":"VariableDeclaration","scope":101146,"src":"25555:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":101143,"name":"bool","nodeType":"ElementaryTypeName","src":"25555:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25554:13:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101152,"nodeType":"FunctionDefinition","src":"25624:66:150","nodes":[],"documentation":{"id":101147,"nodeType":"StructuredDocumentation","src":"25574:45:150","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"25633:11:150","parameters":{"id":101148,"nodeType":"ParameterList","parameters":[],"src":"25644:2:150"},"returnParameters":{"id":101151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101150,"mutability":"mutable","name":"path","nameLocation":"25684:4:150","nodeType":"VariableDeclaration","scope":101152,"src":"25670:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101149,"name":"string","nodeType":"ElementaryTypeName","src":"25670:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25669:20:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":101160,"nodeType":"FunctionDefinition","src":"25757:83:150","nodes":[],"documentation":{"id":101153,"nodeType":"StructuredDocumentation","src":"25696:56:150","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"25766:6:150","parameters":{"id":101156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101155,"mutability":"mutable","name":"promptText","nameLocation":"25789:10:150","nodeType":"VariableDeclaration","scope":101160,"src":"25773:26:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101154,"name":"string","nodeType":"ElementaryTypeName","src":"25773:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25772:28:150"},"returnParameters":{"id":101159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101158,"mutability":"mutable","name":"input","nameLocation":"25833:5:150","nodeType":"VariableDeclaration","scope":101160,"src":"25819:19:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101157,"name":"string","nodeType":"ElementaryTypeName","src":"25819:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25818:21:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101168,"nodeType":"FunctionDefinition","src":"25903:78:150","nodes":[],"documentation":{"id":101161,"nodeType":"StructuredDocumentation","src":"25846:52:150","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"25912:13:150","parameters":{"id":101164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101163,"mutability":"mutable","name":"promptText","nameLocation":"25942:10:150","nodeType":"VariableDeclaration","scope":101168,"src":"25926:26:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101162,"name":"string","nodeType":"ElementaryTypeName","src":"25926:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25925:28:150"},"returnParameters":{"id":101167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101168,"src":"25972:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101165,"name":"address","nodeType":"ElementaryTypeName","src":"25972:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25971:9:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101176,"nodeType":"FunctionDefinition","src":"26055:89:150","nodes":[],"documentation":{"id":101169,"nodeType":"StructuredDocumentation","src":"25987:63:150","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"26064:12:150","parameters":{"id":101172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101171,"mutability":"mutable","name":"promptText","nameLocation":"26093:10:150","nodeType":"VariableDeclaration","scope":101176,"src":"26077:26:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101170,"name":"string","nodeType":"ElementaryTypeName","src":"26077:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26076:28:150"},"returnParameters":{"id":101175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101174,"mutability":"mutable","name":"input","nameLocation":"26137:5:150","nodeType":"VariableDeclaration","scope":101176,"src":"26123:19:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101173,"name":"string","nodeType":"ElementaryTypeName","src":"26123:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26122:21:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101184,"nodeType":"FunctionDefinition","src":"26204:75:150","nodes":[],"documentation":{"id":101177,"nodeType":"StructuredDocumentation","src":"26150:49:150","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"26213:10:150","parameters":{"id":101180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101179,"mutability":"mutable","name":"promptText","nameLocation":"26240:10:150","nodeType":"VariableDeclaration","scope":101184,"src":"26224:26:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101178,"name":"string","nodeType":"ElementaryTypeName","src":"26224:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26223:28:150"},"returnParameters":{"id":101183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101184,"src":"26270:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101181,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:9:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101194,"nodeType":"FunctionDefinition","src":"26527:89:150","nodes":[],"documentation":{"id":101185,"nodeType":"StructuredDocumentation","src":"26285:237:150","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"26536:7:150","parameters":{"id":101188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101187,"mutability":"mutable","name":"path","nameLocation":"26560:4:150","nodeType":"VariableDeclaration","scope":101194,"src":"26544:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101186,"name":"string","nodeType":"ElementaryTypeName","src":"26544:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26543:22:150"},"returnParameters":{"id":101193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101192,"mutability":"mutable","name":"entries","nameLocation":"26607:7:150","nodeType":"VariableDeclaration","scope":101194,"src":"26589:25:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$100418_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":101190,"nodeType":"UserDefinedTypeName","pathNode":{"id":101189,"name":"DirEntry","nameLocations":["26589:8:150"],"nodeType":"IdentifierPath","referencedDeclaration":100418,"src":"26589:8:150"},"referencedDeclaration":100418,"src":"26589:8:150","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$100418_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":101191,"nodeType":"ArrayTypeName","src":"26589:10:150","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$100418_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26588:27:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":101206,"nodeType":"FunctionDefinition","src":"26653:106:150","nodes":[],"documentation":{"id":101195,"nodeType":"StructuredDocumentation","src":"26622:26:150","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"26662:7:150","parameters":{"id":101200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101197,"mutability":"mutable","name":"path","nameLocation":"26686:4:150","nodeType":"VariableDeclaration","scope":101206,"src":"26670:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101196,"name":"string","nodeType":"ElementaryTypeName","src":"26670:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101199,"mutability":"mutable","name":"maxDepth","nameLocation":"26699:8:150","nodeType":"VariableDeclaration","scope":101206,"src":"26692:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":101198,"name":"uint64","nodeType":"ElementaryTypeName","src":"26692:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"26669:39:150"},"returnParameters":{"id":101205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101204,"mutability":"mutable","name":"entries","nameLocation":"26750:7:150","nodeType":"VariableDeclaration","scope":101206,"src":"26732:25:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$100418_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":101202,"nodeType":"UserDefinedTypeName","pathNode":{"id":101201,"name":"DirEntry","nameLocations":["26732:8:150"],"nodeType":"IdentifierPath","referencedDeclaration":100418,"src":"26732:8:150"},"referencedDeclaration":100418,"src":"26732:8:150","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$100418_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":101203,"nodeType":"ArrayTypeName","src":"26732:10:150","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$100418_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26731:27:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":101220,"nodeType":"FunctionDefinition","src":"26796:148:150","nodes":[],"documentation":{"id":101207,"nodeType":"StructuredDocumentation","src":"26765:26:150","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"26805:7:150","parameters":{"id":101214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101209,"mutability":"mutable","name":"path","nameLocation":"26829:4:150","nodeType":"VariableDeclaration","scope":101220,"src":"26813:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101208,"name":"string","nodeType":"ElementaryTypeName","src":"26813:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101211,"mutability":"mutable","name":"maxDepth","nameLocation":"26842:8:150","nodeType":"VariableDeclaration","scope":101220,"src":"26835:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":101210,"name":"uint64","nodeType":"ElementaryTypeName","src":"26835:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":101213,"mutability":"mutable","name":"followLinks","nameLocation":"26857:11:150","nodeType":"VariableDeclaration","scope":101220,"src":"26852:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":101212,"name":"bool","nodeType":"ElementaryTypeName","src":"26852:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26812:57:150"},"returnParameters":{"id":101219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101218,"mutability":"mutable","name":"entries","nameLocation":"26935:7:150","nodeType":"VariableDeclaration","scope":101220,"src":"26917:25:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$100418_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":101216,"nodeType":"UserDefinedTypeName","pathNode":{"id":101215,"name":"DirEntry","nameLocations":["26917:8:150"],"nodeType":"IdentifierPath","referencedDeclaration":100418,"src":"26917:8:150"},"referencedDeclaration":100418,"src":"26917:8:150","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$100418_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":101217,"nodeType":"ArrayTypeName","src":"26917:10:150","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$100418_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26916:27:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":101228,"nodeType":"FunctionDefinition","src":"27042:83:150","nodes":[],"documentation":{"id":101221,"nodeType":"StructuredDocumentation","src":"26950:87:150","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"27051:8:150","parameters":{"id":101224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101223,"mutability":"mutable","name":"path","nameLocation":"27076:4:150","nodeType":"VariableDeclaration","scope":101228,"src":"27060:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101222,"name":"string","nodeType":"ElementaryTypeName","src":"27060:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27059:22:150"},"returnParameters":{"id":101227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101226,"mutability":"mutable","name":"data","nameLocation":"27119:4:150","nodeType":"VariableDeclaration","scope":101228,"src":"27105:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101225,"name":"string","nodeType":"ElementaryTypeName","src":"27105:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27104:20:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":101236,"nodeType":"FunctionDefinition","src":"27223:88:150","nodes":[],"documentation":{"id":101229,"nodeType":"StructuredDocumentation","src":"27131:87:150","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"27232:14:150","parameters":{"id":101232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101231,"mutability":"mutable","name":"path","nameLocation":"27263:4:150","nodeType":"VariableDeclaration","scope":101236,"src":"27247:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101230,"name":"string","nodeType":"ElementaryTypeName","src":"27247:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27246:22:150"},"returnParameters":{"id":101235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101234,"mutability":"mutable","name":"data","nameLocation":"27305:4:150","nodeType":"VariableDeclaration","scope":101236,"src":"27292:17:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":101233,"name":"bytes","nodeType":"ElementaryTypeName","src":"27292:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27291:19:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":101244,"nodeType":"FunctionDefinition","src":"27360:83:150","nodes":[],"documentation":{"id":101237,"nodeType":"StructuredDocumentation","src":"27317:38:150","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"27369:8:150","parameters":{"id":101240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101239,"mutability":"mutable","name":"path","nameLocation":"27394:4:150","nodeType":"VariableDeclaration","scope":101244,"src":"27378:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101238,"name":"string","nodeType":"ElementaryTypeName","src":"27378:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27377:22:150"},"returnParameters":{"id":101243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101242,"mutability":"mutable","name":"line","nameLocation":"27437:4:150","nodeType":"VariableDeclaration","scope":101244,"src":"27423:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101241,"name":"string","nodeType":"ElementaryTypeName","src":"27423:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27422:20:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":101252,"nodeType":"FunctionDefinition","src":"27702:93:150","nodes":[],"documentation":{"id":101245,"nodeType":"StructuredDocumentation","src":"27449:248:150","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"27711:8:150","parameters":{"id":101248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101247,"mutability":"mutable","name":"linkPath","nameLocation":"27736:8:150","nodeType":"VariableDeclaration","scope":101252,"src":"27720:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101246,"name":"string","nodeType":"ElementaryTypeName","src":"27720:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27719:26:150"},"returnParameters":{"id":101251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101250,"mutability":"mutable","name":"targetPath","nameLocation":"27783:10:150","nodeType":"VariableDeclaration","scope":101252,"src":"27769:24:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101249,"name":"string","nodeType":"ElementaryTypeName","src":"27769:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27768:26:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":101260,"nodeType":"FunctionDefinition","src":"28185:66:150","nodes":[],"documentation":{"id":101253,"nodeType":"StructuredDocumentation","src":"27801:379:150","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"28194:9:150","parameters":{"id":101258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101255,"mutability":"mutable","name":"path","nameLocation":"28220:4:150","nodeType":"VariableDeclaration","scope":101260,"src":"28204:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101254,"name":"string","nodeType":"ElementaryTypeName","src":"28204:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101257,"mutability":"mutable","name":"recursive","nameLocation":"28231:9:150","nodeType":"VariableDeclaration","scope":101260,"src":"28226:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":101256,"name":"bool","nodeType":"ElementaryTypeName","src":"28226:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28203:38:150"},"returnParameters":{"id":101259,"nodeType":"ParameterList","parameters":[],"src":"28250:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101266,"nodeType":"FunctionDefinition","src":"28584:51:150","nodes":[],"documentation":{"id":101261,"nodeType":"StructuredDocumentation","src":"28257:322:150","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"28593:10:150","parameters":{"id":101264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101263,"mutability":"mutable","name":"path","nameLocation":"28620:4:150","nodeType":"VariableDeclaration","scope":101266,"src":"28604:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101262,"name":"string","nodeType":"ElementaryTypeName","src":"28604:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28603:22:150"},"returnParameters":{"id":101265,"nodeType":"ParameterList","parameters":[],"src":"28634:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101276,"nodeType":"FunctionDefinition","src":"28742:91:150","nodes":[],"documentation":{"id":101267,"nodeType":"StructuredDocumentation","src":"28641:96:150","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"28751:6:150","parameters":{"id":101271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101270,"mutability":"mutable","name":"commandInput","nameLocation":"28776:12:150","nodeType":"VariableDeclaration","scope":101276,"src":"28758:30:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":101268,"name":"string","nodeType":"ElementaryTypeName","src":"28758:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":101269,"nodeType":"ArrayTypeName","src":"28758:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"28757:32:150"},"returnParameters":{"id":101275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101274,"mutability":"mutable","name":"result","nameLocation":"28825:6:150","nodeType":"VariableDeclaration","scope":101276,"src":"28808:23:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$100452_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":101273,"nodeType":"UserDefinedTypeName","pathNode":{"id":101272,"name":"FfiResult","nameLocations":["28808:9:150"],"nodeType":"IdentifierPath","referencedDeclaration":100452,"src":"28808:9:150"},"referencedDeclaration":100452,"src":"28808:9:150","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$100452_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"28807:25:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101282,"nodeType":"FunctionDefinition","src":"28898:60:150","nodes":[],"documentation":{"id":101277,"nodeType":"StructuredDocumentation","src":"28839:54:150","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"28907:8:150","parameters":{"id":101278,"nodeType":"ParameterList","parameters":[],"src":"28915:2:150"},"returnParameters":{"id":101281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101280,"mutability":"mutable","name":"milliseconds","nameLocation":"28944:12:150","nodeType":"VariableDeclaration","scope":101282,"src":"28936:20:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101279,"name":"uint256","nodeType":"ElementaryTypeName","src":"28936:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28935:22:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101290,"nodeType":"FunctionDefinition","src":"29127:72:150","nodes":[],"documentation":{"id":101283,"nodeType":"StructuredDocumentation","src":"28964:158:150","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"29136:9:150","parameters":{"id":101288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101285,"mutability":"mutable","name":"path","nameLocation":"29162:4:150","nodeType":"VariableDeclaration","scope":101290,"src":"29146:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101284,"name":"string","nodeType":"ElementaryTypeName","src":"29146:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101287,"mutability":"mutable","name":"data","nameLocation":"29184:4:150","nodeType":"VariableDeclaration","scope":101290,"src":"29168:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101286,"name":"string","nodeType":"ElementaryTypeName","src":"29168:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29145:44:150"},"returnParameters":{"id":101289,"nodeType":"ParameterList","parameters":[],"src":"29198:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101298,"nodeType":"FunctionDefinition","src":"29377:77:150","nodes":[],"documentation":{"id":101291,"nodeType":"StructuredDocumentation","src":"29205:167:150","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"29386:15:150","parameters":{"id":101296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101293,"mutability":"mutable","name":"path","nameLocation":"29418:4:150","nodeType":"VariableDeclaration","scope":101298,"src":"29402:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101292,"name":"string","nodeType":"ElementaryTypeName","src":"29402:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101295,"mutability":"mutable","name":"data","nameLocation":"29439:4:150","nodeType":"VariableDeclaration","scope":101298,"src":"29424:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":101294,"name":"bytes","nodeType":"ElementaryTypeName","src":"29424:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29401:43:150"},"returnParameters":{"id":101297,"nodeType":"ParameterList","parameters":[],"src":"29453:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101306,"nodeType":"FunctionDefinition","src":"29575:72:150","nodes":[],"documentation":{"id":101299,"nodeType":"StructuredDocumentation","src":"29460:110:150","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"29584:9:150","parameters":{"id":101304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101301,"mutability":"mutable","name":"path","nameLocation":"29610:4:150","nodeType":"VariableDeclaration","scope":101306,"src":"29594:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101300,"name":"string","nodeType":"ElementaryTypeName","src":"29594:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101303,"mutability":"mutable","name":"data","nameLocation":"29632:4:150","nodeType":"VariableDeclaration","scope":101306,"src":"29616:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101302,"name":"string","nodeType":"ElementaryTypeName","src":"29616:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29593:44:150"},"returnParameters":{"id":101305,"nodeType":"ParameterList","parameters":[],"src":"29646:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101316,"nodeType":"FunctionDefinition","src":"29840:91:150","nodes":[],"documentation":{"id":101307,"nodeType":"StructuredDocumentation","src":"29684:151:150","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"29849:9:150","parameters":{"id":101312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101309,"mutability":"mutable","name":"json","nameLocation":"29875:4:150","nodeType":"VariableDeclaration","scope":101316,"src":"29859:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101308,"name":"string","nodeType":"ElementaryTypeName","src":"29859:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101311,"mutability":"mutable","name":"key","nameLocation":"29897:3:150","nodeType":"VariableDeclaration","scope":101316,"src":"29881:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101310,"name":"string","nodeType":"ElementaryTypeName","src":"29881:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29858:43:150"},"returnParameters":{"id":101315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101316,"src":"29925:4:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":101313,"name":"bool","nodeType":"ElementaryTypeName","src":"29925:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29924:6:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":101326,"nodeType":"FunctionDefinition","src":"29986:95:150","nodes":[],"documentation":{"id":101317,"nodeType":"StructuredDocumentation","src":"29937:44:150","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"29995:13:150","parameters":{"id":101322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101319,"mutability":"mutable","name":"json","nameLocation":"30025:4:150","nodeType":"VariableDeclaration","scope":101326,"src":"30009:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101318,"name":"string","nodeType":"ElementaryTypeName","src":"30009:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101321,"mutability":"mutable","name":"key","nameLocation":"30047:3:150","nodeType":"VariableDeclaration","scope":101326,"src":"30031:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101320,"name":"string","nodeType":"ElementaryTypeName","src":"30031:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30008:43:150"},"returnParameters":{"id":101325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101326,"src":"30075:4:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":101323,"name":"bool","nodeType":"ElementaryTypeName","src":"30075:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30074:6:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":101336,"nodeType":"FunctionDefinition","src":"30162:101:150","nodes":[],"documentation":{"id":101327,"nodeType":"StructuredDocumentation","src":"30087:70:150","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"30171:16:150","parameters":{"id":101332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101329,"mutability":"mutable","name":"json","nameLocation":"30204:4:150","nodeType":"VariableDeclaration","scope":101336,"src":"30188:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101328,"name":"string","nodeType":"ElementaryTypeName","src":"30188:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101331,"mutability":"mutable","name":"key","nameLocation":"30226:3:150","nodeType":"VariableDeclaration","scope":101336,"src":"30210:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101330,"name":"string","nodeType":"ElementaryTypeName","src":"30210:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30187:43:150"},"returnParameters":{"id":101335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101336,"src":"30254:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101333,"name":"address","nodeType":"ElementaryTypeName","src":"30254:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30253:9:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101347,"nodeType":"FunctionDefinition","src":"30346:139:150","nodes":[],"documentation":{"id":101337,"nodeType":"StructuredDocumentation","src":"30269:72:150","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"30355:21:150","parameters":{"id":101342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101339,"mutability":"mutable","name":"json","nameLocation":"30393:4:150","nodeType":"VariableDeclaration","scope":101347,"src":"30377:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101338,"name":"string","nodeType":"ElementaryTypeName","src":"30377:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101341,"mutability":"mutable","name":"key","nameLocation":"30415:3:150","nodeType":"VariableDeclaration","scope":101347,"src":"30399:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101340,"name":"string","nodeType":"ElementaryTypeName","src":"30399:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30376:43:150"},"returnParameters":{"id":101346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101347,"src":"30467:16:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":101343,"name":"address","nodeType":"ElementaryTypeName","src":"30467:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":101344,"nodeType":"ArrayTypeName","src":"30467:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"30466:18:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101357,"nodeType":"FunctionDefinition","src":"30563:95:150","nodes":[],"documentation":{"id":101348,"nodeType":"StructuredDocumentation","src":"30491:67:150","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"30572:13:150","parameters":{"id":101353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101350,"mutability":"mutable","name":"json","nameLocation":"30602:4:150","nodeType":"VariableDeclaration","scope":101357,"src":"30586:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101349,"name":"string","nodeType":"ElementaryTypeName","src":"30586:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101352,"mutability":"mutable","name":"key","nameLocation":"30624:3:150","nodeType":"VariableDeclaration","scope":101357,"src":"30608:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101351,"name":"string","nodeType":"ElementaryTypeName","src":"30608:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30585:43:150"},"returnParameters":{"id":101356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101357,"src":"30652:4:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":101354,"name":"bool","nodeType":"ElementaryTypeName","src":"30652:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30651:6:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101368,"nodeType":"FunctionDefinition","src":"30738:109:150","nodes":[],"documentation":{"id":101358,"nodeType":"StructuredDocumentation","src":"30664:69:150","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"30747:18:150","parameters":{"id":101363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101360,"mutability":"mutable","name":"json","nameLocation":"30782:4:150","nodeType":"VariableDeclaration","scope":101368,"src":"30766:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101359,"name":"string","nodeType":"ElementaryTypeName","src":"30766:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101362,"mutability":"mutable","name":"key","nameLocation":"30804:3:150","nodeType":"VariableDeclaration","scope":101368,"src":"30788:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101361,"name":"string","nodeType":"ElementaryTypeName","src":"30788:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30765:43:150"},"returnParameters":{"id":101367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101368,"src":"30832:13:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":101364,"name":"bool","nodeType":"ElementaryTypeName","src":"30832:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":101365,"nodeType":"ArrayTypeName","src":"30832:6:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"30831:15:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101378,"nodeType":"FunctionDefinition","src":"30926:104:150","nodes":[],"documentation":{"id":101369,"nodeType":"StructuredDocumentation","src":"30853:68:150","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"30935:14:150","parameters":{"id":101374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101371,"mutability":"mutable","name":"json","nameLocation":"30966:4:150","nodeType":"VariableDeclaration","scope":101378,"src":"30950:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101370,"name":"string","nodeType":"ElementaryTypeName","src":"30950:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101373,"mutability":"mutable","name":"key","nameLocation":"30988:3:150","nodeType":"VariableDeclaration","scope":101378,"src":"30972:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101372,"name":"string","nodeType":"ElementaryTypeName","src":"30972:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30949:43:150"},"returnParameters":{"id":101377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101378,"src":"31016:12:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":101375,"name":"bytes","nodeType":"ElementaryTypeName","src":"31016:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31015:14:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101388,"nodeType":"FunctionDefinition","src":"31111:101:150","nodes":[],"documentation":{"id":101379,"nodeType":"StructuredDocumentation","src":"31036:70:150","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"31120:16:150","parameters":{"id":101384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101381,"mutability":"mutable","name":"json","nameLocation":"31153:4:150","nodeType":"VariableDeclaration","scope":101388,"src":"31137:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101380,"name":"string","nodeType":"ElementaryTypeName","src":"31137:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101383,"mutability":"mutable","name":"key","nameLocation":"31175:3:150","nodeType":"VariableDeclaration","scope":101388,"src":"31159:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101382,"name":"string","nodeType":"ElementaryTypeName","src":"31159:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31136:43:150"},"returnParameters":{"id":101387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101388,"src":"31203:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":101385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31203:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31202:9:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101399,"nodeType":"FunctionDefinition","src":"31295:139:150","nodes":[],"documentation":{"id":101389,"nodeType":"StructuredDocumentation","src":"31218:72:150","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"31304:21:150","parameters":{"id":101394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101391,"mutability":"mutable","name":"json","nameLocation":"31342:4:150","nodeType":"VariableDeclaration","scope":101399,"src":"31326:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101390,"name":"string","nodeType":"ElementaryTypeName","src":"31326:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101393,"mutability":"mutable","name":"key","nameLocation":"31364:3:150","nodeType":"VariableDeclaration","scope":101399,"src":"31348:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101392,"name":"string","nodeType":"ElementaryTypeName","src":"31348:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31325:43:150"},"returnParameters":{"id":101398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101399,"src":"31416:16:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":101395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31416:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":101396,"nodeType":"ArrayTypeName","src":"31416:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"31415:18:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101410,"nodeType":"FunctionDefinition","src":"31515:111:150","nodes":[],"documentation":{"id":101400,"nodeType":"StructuredDocumentation","src":"31440:70:150","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"31524:19:150","parameters":{"id":101405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101402,"mutability":"mutable","name":"json","nameLocation":"31560:4:150","nodeType":"VariableDeclaration","scope":101410,"src":"31544:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101401,"name":"string","nodeType":"ElementaryTypeName","src":"31544:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101404,"mutability":"mutable","name":"key","nameLocation":"31582:3:150","nodeType":"VariableDeclaration","scope":101410,"src":"31566:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101403,"name":"string","nodeType":"ElementaryTypeName","src":"31566:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31543:43:150"},"returnParameters":{"id":101409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101410,"src":"31610:14:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":101406,"name":"bytes","nodeType":"ElementaryTypeName","src":"31610:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":101407,"nodeType":"ArrayTypeName","src":"31610:7:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"31609:16:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101420,"nodeType":"FunctionDefinition","src":"31706:96:150","nodes":[],"documentation":{"id":101411,"nodeType":"StructuredDocumentation","src":"31632:69:150","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"31715:12:150","parameters":{"id":101416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101413,"mutability":"mutable","name":"json","nameLocation":"31744:4:150","nodeType":"VariableDeclaration","scope":101420,"src":"31728:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101412,"name":"string","nodeType":"ElementaryTypeName","src":"31728:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101415,"mutability":"mutable","name":"key","nameLocation":"31766:3:150","nodeType":"VariableDeclaration","scope":101420,"src":"31750:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101414,"name":"string","nodeType":"ElementaryTypeName","src":"31750:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31727:43:150"},"returnParameters":{"id":101419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101420,"src":"31794:6:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":101417,"name":"int256","nodeType":"ElementaryTypeName","src":"31794:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31793:8:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101431,"nodeType":"FunctionDefinition","src":"31884:110:150","nodes":[],"documentation":{"id":101421,"nodeType":"StructuredDocumentation","src":"31808:71:150","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"31893:17:150","parameters":{"id":101426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101423,"mutability":"mutable","name":"json","nameLocation":"31927:4:150","nodeType":"VariableDeclaration","scope":101431,"src":"31911:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101422,"name":"string","nodeType":"ElementaryTypeName","src":"31911:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101425,"mutability":"mutable","name":"key","nameLocation":"31949:3:150","nodeType":"VariableDeclaration","scope":101431,"src":"31933:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101424,"name":"string","nodeType":"ElementaryTypeName","src":"31933:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31910:43:150"},"returnParameters":{"id":101430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101431,"src":"31977:15:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":101427,"name":"int256","nodeType":"ElementaryTypeName","src":"31977:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":101428,"nodeType":"ArrayTypeName","src":"31977:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"31976:17:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101442,"nodeType":"FunctionDefinition","src":"32059:111:150","nodes":[],"documentation":{"id":101432,"nodeType":"StructuredDocumentation","src":"32000:54:150","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"32068:13:150","parameters":{"id":101437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101434,"mutability":"mutable","name":"json","nameLocation":"32098:4:150","nodeType":"VariableDeclaration","scope":101442,"src":"32082:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101433,"name":"string","nodeType":"ElementaryTypeName","src":"32082:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101436,"mutability":"mutable","name":"key","nameLocation":"32120:3:150","nodeType":"VariableDeclaration","scope":101442,"src":"32104:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101435,"name":"string","nodeType":"ElementaryTypeName","src":"32104:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32081:43:150"},"returnParameters":{"id":101441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101440,"mutability":"mutable","name":"keys","nameLocation":"32164:4:150","nodeType":"VariableDeclaration","scope":101442,"src":"32148:20:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":101438,"name":"string","nodeType":"ElementaryTypeName","src":"32148:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":101439,"nodeType":"ArrayTypeName","src":"32148:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32147:22:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101452,"nodeType":"FunctionDefinition","src":"32250:106:150","nodes":[],"documentation":{"id":101443,"nodeType":"StructuredDocumentation","src":"32176:69:150","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"32259:15:150","parameters":{"id":101448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101445,"mutability":"mutable","name":"json","nameLocation":"32291:4:150","nodeType":"VariableDeclaration","scope":101452,"src":"32275:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101444,"name":"string","nodeType":"ElementaryTypeName","src":"32275:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101447,"mutability":"mutable","name":"key","nameLocation":"32313:3:150","nodeType":"VariableDeclaration","scope":101452,"src":"32297:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101446,"name":"string","nodeType":"ElementaryTypeName","src":"32297:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32274:43:150"},"returnParameters":{"id":101451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101452,"src":"32341:13:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101449,"name":"string","nodeType":"ElementaryTypeName","src":"32341:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32340:15:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101463,"nodeType":"FunctionDefinition","src":"32438:113:150","nodes":[],"documentation":{"id":101453,"nodeType":"StructuredDocumentation","src":"32362:71:150","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"32447:20:150","parameters":{"id":101458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101455,"mutability":"mutable","name":"json","nameLocation":"32484:4:150","nodeType":"VariableDeclaration","scope":101463,"src":"32468:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101454,"name":"string","nodeType":"ElementaryTypeName","src":"32468:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101457,"mutability":"mutable","name":"key","nameLocation":"32506:3:150","nodeType":"VariableDeclaration","scope":101463,"src":"32490:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101456,"name":"string","nodeType":"ElementaryTypeName","src":"32490:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32467:43:150"},"returnParameters":{"id":101462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101463,"src":"32534:15:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":101459,"name":"string","nodeType":"ElementaryTypeName","src":"32534:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":101460,"nodeType":"ArrayTypeName","src":"32534:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32533:17:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101473,"nodeType":"FunctionDefinition","src":"32632:98:150","nodes":[],"documentation":{"id":101464,"nodeType":"StructuredDocumentation","src":"32557:70:150","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"32641:13:150","parameters":{"id":101469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101466,"mutability":"mutable","name":"json","nameLocation":"32671:4:150","nodeType":"VariableDeclaration","scope":101473,"src":"32655:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101465,"name":"string","nodeType":"ElementaryTypeName","src":"32655:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101468,"mutability":"mutable","name":"key","nameLocation":"32693:3:150","nodeType":"VariableDeclaration","scope":101473,"src":"32677:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101467,"name":"string","nodeType":"ElementaryTypeName","src":"32677:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32654:43:150"},"returnParameters":{"id":101472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101473,"src":"32721:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101470,"name":"uint256","nodeType":"ElementaryTypeName","src":"32721:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32720:9:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101484,"nodeType":"FunctionDefinition","src":"32813:112:150","nodes":[],"documentation":{"id":101474,"nodeType":"StructuredDocumentation","src":"32736:72:150","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"32822:18:150","parameters":{"id":101479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101476,"mutability":"mutable","name":"json","nameLocation":"32857:4:150","nodeType":"VariableDeclaration","scope":101484,"src":"32841:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101475,"name":"string","nodeType":"ElementaryTypeName","src":"32841:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101478,"mutability":"mutable","name":"key","nameLocation":"32879:3:150","nodeType":"VariableDeclaration","scope":101484,"src":"32863:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101477,"name":"string","nodeType":"ElementaryTypeName","src":"32863:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32840:43:150"},"returnParameters":{"id":101483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101484,"src":"32907:16:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":101480,"name":"uint256","nodeType":"ElementaryTypeName","src":"32907:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":101481,"nodeType":"ArrayTypeName","src":"32907:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"32906:18:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101492,"nodeType":"FunctionDefinition","src":"32966:93:150","nodes":[],"documentation":{"id":101485,"nodeType":"StructuredDocumentation","src":"32931:30:150","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"32975:9:150","parameters":{"id":101488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101487,"mutability":"mutable","name":"json","nameLocation":"33001:4:150","nodeType":"VariableDeclaration","scope":101492,"src":"32985:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101486,"name":"string","nodeType":"ElementaryTypeName","src":"32985:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32984:22:150"},"returnParameters":{"id":101491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101490,"mutability":"mutable","name":"abiEncodedData","nameLocation":"33043:14:150","nodeType":"VariableDeclaration","scope":101492,"src":"33030:27:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":101489,"name":"bytes","nodeType":"ElementaryTypeName","src":"33030:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33029:29:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101502,"nodeType":"FunctionDefinition","src":"33109:114:150","nodes":[],"documentation":{"id":101493,"nodeType":"StructuredDocumentation","src":"33065:39:150","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"33118:9:150","parameters":{"id":101498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101495,"mutability":"mutable","name":"json","nameLocation":"33144:4:150","nodeType":"VariableDeclaration","scope":101502,"src":"33128:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101494,"name":"string","nodeType":"ElementaryTypeName","src":"33128:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101497,"mutability":"mutable","name":"key","nameLocation":"33166:3:150","nodeType":"VariableDeclaration","scope":101502,"src":"33150:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101496,"name":"string","nodeType":"ElementaryTypeName","src":"33150:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33127:43:150"},"returnParameters":{"id":101501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101500,"mutability":"mutable","name":"abiEncodedData","nameLocation":"33207:14:150","nodeType":"VariableDeclaration","scope":101502,"src":"33194:27:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":101499,"name":"bytes","nodeType":"ElementaryTypeName","src":"33194:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33193:29:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101514,"nodeType":"FunctionDefinition","src":"33258:148:150","nodes":[],"documentation":{"id":101503,"nodeType":"StructuredDocumentation","src":"33229:24:150","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"33267:16:150","parameters":{"id":101510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101505,"mutability":"mutable","name":"objectKey","nameLocation":"33300:9:150","nodeType":"VariableDeclaration","scope":101514,"src":"33284:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101504,"name":"string","nodeType":"ElementaryTypeName","src":"33284:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101507,"mutability":"mutable","name":"valueKey","nameLocation":"33327:8:150","nodeType":"VariableDeclaration","scope":101514,"src":"33311:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101506,"name":"string","nodeType":"ElementaryTypeName","src":"33311:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101509,"mutability":"mutable","name":"value","nameLocation":"33345:5:150","nodeType":"VariableDeclaration","scope":101514,"src":"33337:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101508,"name":"address","nodeType":"ElementaryTypeName","src":"33337:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33283:68:150"},"returnParameters":{"id":101513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101512,"mutability":"mutable","name":"json","nameLocation":"33400:4:150","nodeType":"VariableDeclaration","scope":101514,"src":"33386:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101511,"name":"string","nodeType":"ElementaryTypeName","src":"33386:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33385:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101527,"nodeType":"FunctionDefinition","src":"33441:160:150","nodes":[],"documentation":{"id":101515,"nodeType":"StructuredDocumentation","src":"33412:24:150","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"33450:16:150","parameters":{"id":101523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101517,"mutability":"mutable","name":"objectKey","nameLocation":"33483:9:150","nodeType":"VariableDeclaration","scope":101527,"src":"33467:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101516,"name":"string","nodeType":"ElementaryTypeName","src":"33467:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101519,"mutability":"mutable","name":"valueKey","nameLocation":"33510:8:150","nodeType":"VariableDeclaration","scope":101527,"src":"33494:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101518,"name":"string","nodeType":"ElementaryTypeName","src":"33494:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101522,"mutability":"mutable","name":"values","nameLocation":"33539:6:150","nodeType":"VariableDeclaration","scope":101527,"src":"33520:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":101520,"name":"address","nodeType":"ElementaryTypeName","src":"33520:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":101521,"nodeType":"ArrayTypeName","src":"33520:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"33466:80:150"},"returnParameters":{"id":101526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101525,"mutability":"mutable","name":"json","nameLocation":"33595:4:150","nodeType":"VariableDeclaration","scope":101527,"src":"33581:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101524,"name":"string","nodeType":"ElementaryTypeName","src":"33581:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33580:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101539,"nodeType":"FunctionDefinition","src":"33636:142:150","nodes":[],"documentation":{"id":101528,"nodeType":"StructuredDocumentation","src":"33607:24:150","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"33645:13:150","parameters":{"id":101535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101530,"mutability":"mutable","name":"objectKey","nameLocation":"33675:9:150","nodeType":"VariableDeclaration","scope":101539,"src":"33659:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101529,"name":"string","nodeType":"ElementaryTypeName","src":"33659:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101532,"mutability":"mutable","name":"valueKey","nameLocation":"33702:8:150","nodeType":"VariableDeclaration","scope":101539,"src":"33686:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101531,"name":"string","nodeType":"ElementaryTypeName","src":"33686:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101534,"mutability":"mutable","name":"value","nameLocation":"33717:5:150","nodeType":"VariableDeclaration","scope":101539,"src":"33712:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":101533,"name":"bool","nodeType":"ElementaryTypeName","src":"33712:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33658:65:150"},"returnParameters":{"id":101538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101537,"mutability":"mutable","name":"json","nameLocation":"33772:4:150","nodeType":"VariableDeclaration","scope":101539,"src":"33758:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101536,"name":"string","nodeType":"ElementaryTypeName","src":"33758:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33757:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101552,"nodeType":"FunctionDefinition","src":"33813:154:150","nodes":[],"documentation":{"id":101540,"nodeType":"StructuredDocumentation","src":"33784:24:150","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"33822:13:150","parameters":{"id":101548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101542,"mutability":"mutable","name":"objectKey","nameLocation":"33852:9:150","nodeType":"VariableDeclaration","scope":101552,"src":"33836:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101541,"name":"string","nodeType":"ElementaryTypeName","src":"33836:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101544,"mutability":"mutable","name":"valueKey","nameLocation":"33879:8:150","nodeType":"VariableDeclaration","scope":101552,"src":"33863:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101543,"name":"string","nodeType":"ElementaryTypeName","src":"33863:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101547,"mutability":"mutable","name":"values","nameLocation":"33905:6:150","nodeType":"VariableDeclaration","scope":101552,"src":"33889:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":101545,"name":"bool","nodeType":"ElementaryTypeName","src":"33889:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":101546,"nodeType":"ArrayTypeName","src":"33889:6:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"33835:77:150"},"returnParameters":{"id":101551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101550,"mutability":"mutable","name":"json","nameLocation":"33961:4:150","nodeType":"VariableDeclaration","scope":101552,"src":"33947:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101549,"name":"string","nodeType":"ElementaryTypeName","src":"33947:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33946:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101564,"nodeType":"FunctionDefinition","src":"34002:148:150","nodes":[],"documentation":{"id":101553,"nodeType":"StructuredDocumentation","src":"33973:24:150","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"34011:16:150","parameters":{"id":101560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101555,"mutability":"mutable","name":"objectKey","nameLocation":"34044:9:150","nodeType":"VariableDeclaration","scope":101564,"src":"34028:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101554,"name":"string","nodeType":"ElementaryTypeName","src":"34028:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101557,"mutability":"mutable","name":"valueKey","nameLocation":"34071:8:150","nodeType":"VariableDeclaration","scope":101564,"src":"34055:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101556,"name":"string","nodeType":"ElementaryTypeName","src":"34055:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101559,"mutability":"mutable","name":"value","nameLocation":"34089:5:150","nodeType":"VariableDeclaration","scope":101564,"src":"34081:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":101558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34081:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"34027:68:150"},"returnParameters":{"id":101563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101562,"mutability":"mutable","name":"json","nameLocation":"34144:4:150","nodeType":"VariableDeclaration","scope":101564,"src":"34130:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101561,"name":"string","nodeType":"ElementaryTypeName","src":"34130:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34129:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101577,"nodeType":"FunctionDefinition","src":"34185:160:150","nodes":[],"documentation":{"id":101565,"nodeType":"StructuredDocumentation","src":"34156:24:150","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"34194:16:150","parameters":{"id":101573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101567,"mutability":"mutable","name":"objectKey","nameLocation":"34227:9:150","nodeType":"VariableDeclaration","scope":101577,"src":"34211:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101566,"name":"string","nodeType":"ElementaryTypeName","src":"34211:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101569,"mutability":"mutable","name":"valueKey","nameLocation":"34254:8:150","nodeType":"VariableDeclaration","scope":101577,"src":"34238:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101568,"name":"string","nodeType":"ElementaryTypeName","src":"34238:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101572,"mutability":"mutable","name":"values","nameLocation":"34283:6:150","nodeType":"VariableDeclaration","scope":101577,"src":"34264:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":101570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34264:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":101571,"nodeType":"ArrayTypeName","src":"34264:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"34210:80:150"},"returnParameters":{"id":101576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101575,"mutability":"mutable","name":"json","nameLocation":"34339:4:150","nodeType":"VariableDeclaration","scope":101577,"src":"34325:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101574,"name":"string","nodeType":"ElementaryTypeName","src":"34325:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34324:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101589,"nodeType":"FunctionDefinition","src":"34380:153:150","nodes":[],"documentation":{"id":101578,"nodeType":"StructuredDocumentation","src":"34351:24:150","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"34389:14:150","parameters":{"id":101585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101580,"mutability":"mutable","name":"objectKey","nameLocation":"34420:9:150","nodeType":"VariableDeclaration","scope":101589,"src":"34404:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101579,"name":"string","nodeType":"ElementaryTypeName","src":"34404:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101582,"mutability":"mutable","name":"valueKey","nameLocation":"34447:8:150","nodeType":"VariableDeclaration","scope":101589,"src":"34431:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101581,"name":"string","nodeType":"ElementaryTypeName","src":"34431:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101584,"mutability":"mutable","name":"value","nameLocation":"34472:5:150","nodeType":"VariableDeclaration","scope":101589,"src":"34457:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":101583,"name":"bytes","nodeType":"ElementaryTypeName","src":"34457:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34403:75:150"},"returnParameters":{"id":101588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101587,"mutability":"mutable","name":"json","nameLocation":"34527:4:150","nodeType":"VariableDeclaration","scope":101589,"src":"34513:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101586,"name":"string","nodeType":"ElementaryTypeName","src":"34513:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34512:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101602,"nodeType":"FunctionDefinition","src":"34568:156:150","nodes":[],"documentation":{"id":101590,"nodeType":"StructuredDocumentation","src":"34539:24:150","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"34577:14:150","parameters":{"id":101598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101592,"mutability":"mutable","name":"objectKey","nameLocation":"34608:9:150","nodeType":"VariableDeclaration","scope":101602,"src":"34592:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101591,"name":"string","nodeType":"ElementaryTypeName","src":"34592:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101594,"mutability":"mutable","name":"valueKey","nameLocation":"34635:8:150","nodeType":"VariableDeclaration","scope":101602,"src":"34619:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101593,"name":"string","nodeType":"ElementaryTypeName","src":"34619:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101597,"mutability":"mutable","name":"values","nameLocation":"34662:6:150","nodeType":"VariableDeclaration","scope":101602,"src":"34645:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":101595,"name":"bytes","nodeType":"ElementaryTypeName","src":"34645:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":101596,"nodeType":"ArrayTypeName","src":"34645:7:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"34591:78:150"},"returnParameters":{"id":101601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101600,"mutability":"mutable","name":"json","nameLocation":"34718:4:150","nodeType":"VariableDeclaration","scope":101602,"src":"34704:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101599,"name":"string","nodeType":"ElementaryTypeName","src":"34704:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34703:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101614,"nodeType":"FunctionDefinition","src":"34759:143:150","nodes":[],"documentation":{"id":101603,"nodeType":"StructuredDocumentation","src":"34730:24:150","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"34768:12:150","parameters":{"id":101610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101605,"mutability":"mutable","name":"objectKey","nameLocation":"34797:9:150","nodeType":"VariableDeclaration","scope":101614,"src":"34781:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101604,"name":"string","nodeType":"ElementaryTypeName","src":"34781:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101607,"mutability":"mutable","name":"valueKey","nameLocation":"34824:8:150","nodeType":"VariableDeclaration","scope":101614,"src":"34808:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101606,"name":"string","nodeType":"ElementaryTypeName","src":"34808:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101609,"mutability":"mutable","name":"value","nameLocation":"34841:5:150","nodeType":"VariableDeclaration","scope":101614,"src":"34834:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":101608,"name":"int256","nodeType":"ElementaryTypeName","src":"34834:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34780:67:150"},"returnParameters":{"id":101613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101612,"mutability":"mutable","name":"json","nameLocation":"34896:4:150","nodeType":"VariableDeclaration","scope":101614,"src":"34882:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101611,"name":"string","nodeType":"ElementaryTypeName","src":"34882:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34881:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101627,"nodeType":"FunctionDefinition","src":"34937:155:150","nodes":[],"documentation":{"id":101615,"nodeType":"StructuredDocumentation","src":"34908:24:150","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"34946:12:150","parameters":{"id":101623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101617,"mutability":"mutable","name":"objectKey","nameLocation":"34975:9:150","nodeType":"VariableDeclaration","scope":101627,"src":"34959:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101616,"name":"string","nodeType":"ElementaryTypeName","src":"34959:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101619,"mutability":"mutable","name":"valueKey","nameLocation":"35002:8:150","nodeType":"VariableDeclaration","scope":101627,"src":"34986:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101618,"name":"string","nodeType":"ElementaryTypeName","src":"34986:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101622,"mutability":"mutable","name":"values","nameLocation":"35030:6:150","nodeType":"VariableDeclaration","scope":101627,"src":"35012:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":101620,"name":"int256","nodeType":"ElementaryTypeName","src":"35012:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":101621,"nodeType":"ArrayTypeName","src":"35012:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"34958:79:150"},"returnParameters":{"id":101626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101625,"mutability":"mutable","name":"json","nameLocation":"35086:4:150","nodeType":"VariableDeclaration","scope":101627,"src":"35072:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101624,"name":"string","nodeType":"ElementaryTypeName","src":"35072:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35071:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101637,"nodeType":"FunctionDefinition","src":"35289:111:150","nodes":[],"documentation":{"id":101628,"nodeType":"StructuredDocumentation","src":"35098:186:150","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"35298:13:150","parameters":{"id":101633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101630,"mutability":"mutable","name":"objectKey","nameLocation":"35328:9:150","nodeType":"VariableDeclaration","scope":101637,"src":"35312:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101629,"name":"string","nodeType":"ElementaryTypeName","src":"35312:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101632,"mutability":"mutable","name":"value","nameLocation":"35355:5:150","nodeType":"VariableDeclaration","scope":101637,"src":"35339:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101631,"name":"string","nodeType":"ElementaryTypeName","src":"35339:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35311:50:150"},"returnParameters":{"id":101636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101635,"mutability":"mutable","name":"json","nameLocation":"35394:4:150","nodeType":"VariableDeclaration","scope":101637,"src":"35380:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101634,"name":"string","nodeType":"ElementaryTypeName","src":"35380:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35379:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101649,"nodeType":"FunctionDefinition","src":"35435:155:150","nodes":[],"documentation":{"id":101638,"nodeType":"StructuredDocumentation","src":"35406:24:150","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"35444:15:150","parameters":{"id":101645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101640,"mutability":"mutable","name":"objectKey","nameLocation":"35476:9:150","nodeType":"VariableDeclaration","scope":101649,"src":"35460:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101639,"name":"string","nodeType":"ElementaryTypeName","src":"35460:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101642,"mutability":"mutable","name":"valueKey","nameLocation":"35503:8:150","nodeType":"VariableDeclaration","scope":101649,"src":"35487:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101641,"name":"string","nodeType":"ElementaryTypeName","src":"35487:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101644,"mutability":"mutable","name":"value","nameLocation":"35529:5:150","nodeType":"VariableDeclaration","scope":101649,"src":"35513:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101643,"name":"string","nodeType":"ElementaryTypeName","src":"35513:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35459:76:150"},"returnParameters":{"id":101648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101647,"mutability":"mutable","name":"json","nameLocation":"35584:4:150","nodeType":"VariableDeclaration","scope":101649,"src":"35570:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101646,"name":"string","nodeType":"ElementaryTypeName","src":"35570:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35569:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101662,"nodeType":"FunctionDefinition","src":"35625:158:150","nodes":[],"documentation":{"id":101650,"nodeType":"StructuredDocumentation","src":"35596:24:150","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"35634:15:150","parameters":{"id":101658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101652,"mutability":"mutable","name":"objectKey","nameLocation":"35666:9:150","nodeType":"VariableDeclaration","scope":101662,"src":"35650:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101651,"name":"string","nodeType":"ElementaryTypeName","src":"35650:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101654,"mutability":"mutable","name":"valueKey","nameLocation":"35693:8:150","nodeType":"VariableDeclaration","scope":101662,"src":"35677:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101653,"name":"string","nodeType":"ElementaryTypeName","src":"35677:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101657,"mutability":"mutable","name":"values","nameLocation":"35721:6:150","nodeType":"VariableDeclaration","scope":101662,"src":"35703:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":101655,"name":"string","nodeType":"ElementaryTypeName","src":"35703:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":101656,"nodeType":"ArrayTypeName","src":"35703:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"35649:79:150"},"returnParameters":{"id":101661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101660,"mutability":"mutable","name":"json","nameLocation":"35777:4:150","nodeType":"VariableDeclaration","scope":101662,"src":"35763:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101659,"name":"string","nodeType":"ElementaryTypeName","src":"35763:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35762:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101674,"nodeType":"FunctionDefinition","src":"35818:150:150","nodes":[],"documentation":{"id":101663,"nodeType":"StructuredDocumentation","src":"35789:24:150","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"35827:18:150","parameters":{"id":101670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101665,"mutability":"mutable","name":"objectKey","nameLocation":"35862:9:150","nodeType":"VariableDeclaration","scope":101674,"src":"35846:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101664,"name":"string","nodeType":"ElementaryTypeName","src":"35846:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101667,"mutability":"mutable","name":"valueKey","nameLocation":"35889:8:150","nodeType":"VariableDeclaration","scope":101674,"src":"35873:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101666,"name":"string","nodeType":"ElementaryTypeName","src":"35873:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101669,"mutability":"mutable","name":"value","nameLocation":"35907:5:150","nodeType":"VariableDeclaration","scope":101674,"src":"35899:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101668,"name":"uint256","nodeType":"ElementaryTypeName","src":"35899:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35845:68:150"},"returnParameters":{"id":101673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101672,"mutability":"mutable","name":"json","nameLocation":"35962:4:150","nodeType":"VariableDeclaration","scope":101674,"src":"35948:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101671,"name":"string","nodeType":"ElementaryTypeName","src":"35948:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35947:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101686,"nodeType":"FunctionDefinition","src":"36003:145:150","nodes":[],"documentation":{"id":101675,"nodeType":"StructuredDocumentation","src":"35974:24:150","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"36012:13:150","parameters":{"id":101682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101677,"mutability":"mutable","name":"objectKey","nameLocation":"36042:9:150","nodeType":"VariableDeclaration","scope":101686,"src":"36026:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101676,"name":"string","nodeType":"ElementaryTypeName","src":"36026:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101679,"mutability":"mutable","name":"valueKey","nameLocation":"36069:8:150","nodeType":"VariableDeclaration","scope":101686,"src":"36053:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101678,"name":"string","nodeType":"ElementaryTypeName","src":"36053:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101681,"mutability":"mutable","name":"value","nameLocation":"36087:5:150","nodeType":"VariableDeclaration","scope":101686,"src":"36079:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101680,"name":"uint256","nodeType":"ElementaryTypeName","src":"36079:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36025:68:150"},"returnParameters":{"id":101685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101684,"mutability":"mutable","name":"json","nameLocation":"36142:4:150","nodeType":"VariableDeclaration","scope":101686,"src":"36128:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101683,"name":"string","nodeType":"ElementaryTypeName","src":"36128:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36127:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101699,"nodeType":"FunctionDefinition","src":"36183:157:150","nodes":[],"documentation":{"id":101687,"nodeType":"StructuredDocumentation","src":"36154:24:150","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"36192:13:150","parameters":{"id":101695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101689,"mutability":"mutable","name":"objectKey","nameLocation":"36222:9:150","nodeType":"VariableDeclaration","scope":101699,"src":"36206:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101688,"name":"string","nodeType":"ElementaryTypeName","src":"36206:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101691,"mutability":"mutable","name":"valueKey","nameLocation":"36249:8:150","nodeType":"VariableDeclaration","scope":101699,"src":"36233:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101690,"name":"string","nodeType":"ElementaryTypeName","src":"36233:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101694,"mutability":"mutable","name":"values","nameLocation":"36278:6:150","nodeType":"VariableDeclaration","scope":101699,"src":"36259:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":101692,"name":"uint256","nodeType":"ElementaryTypeName","src":"36259:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":101693,"nodeType":"ArrayTypeName","src":"36259:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"36205:80:150"},"returnParameters":{"id":101698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101697,"mutability":"mutable","name":"json","nameLocation":"36334:4:150","nodeType":"VariableDeclaration","scope":101699,"src":"36320:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101696,"name":"string","nodeType":"ElementaryTypeName","src":"36320:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36319:20:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101707,"nodeType":"FunctionDefinition","src":"36440:72:150","nodes":[],"documentation":{"id":101700,"nodeType":"StructuredDocumentation","src":"36346:89:150","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"36449:9:150","parameters":{"id":101705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101702,"mutability":"mutable","name":"json","nameLocation":"36475:4:150","nodeType":"VariableDeclaration","scope":101707,"src":"36459:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101701,"name":"string","nodeType":"ElementaryTypeName","src":"36459:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101704,"mutability":"mutable","name":"path","nameLocation":"36497:4:150","nodeType":"VariableDeclaration","scope":101707,"src":"36481:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101703,"name":"string","nodeType":"ElementaryTypeName","src":"36481:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36458:44:150"},"returnParameters":{"id":101706,"nodeType":"ParameterList","parameters":[],"src":"36511:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101717,"nodeType":"FunctionDefinition","src":"36738:98:150","nodes":[],"documentation":{"id":101708,"nodeType":"StructuredDocumentation","src":"36518:215:150","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"36747:9:150","parameters":{"id":101715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101710,"mutability":"mutable","name":"json","nameLocation":"36773:4:150","nodeType":"VariableDeclaration","scope":101717,"src":"36757:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101709,"name":"string","nodeType":"ElementaryTypeName","src":"36757:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101712,"mutability":"mutable","name":"path","nameLocation":"36795:4:150","nodeType":"VariableDeclaration","scope":101717,"src":"36779:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101711,"name":"string","nodeType":"ElementaryTypeName","src":"36779:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101714,"mutability":"mutable","name":"valueKey","nameLocation":"36817:8:150","nodeType":"VariableDeclaration","scope":101717,"src":"36801:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101713,"name":"string","nodeType":"ElementaryTypeName","src":"36801:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36756:70:150"},"returnParameters":{"id":101716,"nodeType":"ParameterList","parameters":[],"src":"36835:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101721,"nodeType":"FunctionDefinition","src":"37375:30:150","nodes":[],"documentation":{"id":101718,"nodeType":"StructuredDocumentation","src":"36878:492:150","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"37384:9:150","parameters":{"id":101719,"nodeType":"ParameterList","parameters":[],"src":"37393:2:150"},"returnParameters":{"id":101720,"nodeType":"ParameterList","parameters":[],"src":"37404:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101727,"nodeType":"FunctionDefinition","src":"37575:44:150","nodes":[],"documentation":{"id":101722,"nodeType":"StructuredDocumentation","src":"37411:159:150","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"37584:9:150","parameters":{"id":101725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101724,"mutability":"mutable","name":"signer","nameLocation":"37602:6:150","nodeType":"VariableDeclaration","scope":101727,"src":"37594:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101723,"name":"address","nodeType":"ElementaryTypeName","src":"37594:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37593:16:150"},"returnParameters":{"id":101726,"nodeType":"ParameterList","parameters":[],"src":"37618:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101733,"nodeType":"FunctionDefinition","src":"37793:48:150","nodes":[],"documentation":{"id":101728,"nodeType":"StructuredDocumentation","src":"37625:163:150","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"37802:9:150","parameters":{"id":101731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101730,"mutability":"mutable","name":"privateKey","nameLocation":"37820:10:150","nodeType":"VariableDeclaration","scope":101733,"src":"37812:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101729,"name":"uint256","nodeType":"ElementaryTypeName","src":"37812:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37811:20:150"},"returnParameters":{"id":101732,"nodeType":"ParameterList","parameters":[],"src":"37840:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101737,"nodeType":"FunctionDefinition","src":"38351:35:150","nodes":[],"documentation":{"id":101734,"nodeType":"StructuredDocumentation","src":"37847:499:150","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"38360:14:150","parameters":{"id":101735,"nodeType":"ParameterList","parameters":[],"src":"38374:2:150"},"returnParameters":{"id":101736,"nodeType":"ParameterList","parameters":[],"src":"38385:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101743,"nodeType":"FunctionDefinition","src":"38548:49:150","nodes":[],"documentation":{"id":101738,"nodeType":"StructuredDocumentation","src":"38392:151:150","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"38557:14:150","parameters":{"id":101741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101740,"mutability":"mutable","name":"signer","nameLocation":"38580:6:150","nodeType":"VariableDeclaration","scope":101743,"src":"38572:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101739,"name":"address","nodeType":"ElementaryTypeName","src":"38572:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"38571:16:150"},"returnParameters":{"id":101742,"nodeType":"ParameterList","parameters":[],"src":"38596:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101749,"nodeType":"FunctionDefinition","src":"38763:53:150","nodes":[],"documentation":{"id":101744,"nodeType":"StructuredDocumentation","src":"38603:155:150","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"38772:14:150","parameters":{"id":101747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101746,"mutability":"mutable","name":"privateKey","nameLocation":"38795:10:150","nodeType":"VariableDeclaration","scope":101749,"src":"38787:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101745,"name":"uint256","nodeType":"ElementaryTypeName","src":"38787:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38786:20:150"},"returnParameters":{"id":101748,"nodeType":"ParameterList","parameters":[],"src":"38815:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101753,"nodeType":"FunctionDefinition","src":"38869:34:150","nodes":[],"documentation":{"id":101750,"nodeType":"StructuredDocumentation","src":"38822:42:150","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"38878:13:150","parameters":{"id":101751,"nodeType":"ParameterList","parameters":[],"src":"38891:2:150"},"returnParameters":{"id":101752,"nodeType":"ParameterList","parameters":[],"src":"38902:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":101763,"nodeType":"FunctionDefinition","src":"39152:93:150","nodes":[],"documentation":{"id":101754,"nodeType":"StructuredDocumentation","src":"38942:205:150","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"39161:7:150","parameters":{"id":101759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101756,"mutability":"mutable","name":"input","nameLocation":"39185:5:150","nodeType":"VariableDeclaration","scope":101763,"src":"39169:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101755,"name":"string","nodeType":"ElementaryTypeName","src":"39169:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101758,"mutability":"mutable","name":"key","nameLocation":"39208:3:150","nodeType":"VariableDeclaration","scope":101763,"src":"39192:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101757,"name":"string","nodeType":"ElementaryTypeName","src":"39192:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39168:44:150"},"returnParameters":{"id":101762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101763,"src":"39236:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101760,"name":"uint256","nodeType":"ElementaryTypeName","src":"39236:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39235:9:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101771,"nodeType":"FunctionDefinition","src":"39304:100:150","nodes":[],"documentation":{"id":101764,"nodeType":"StructuredDocumentation","src":"39251:48:150","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"39313:12:150","parameters":{"id":101767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101766,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39342:16:150","nodeType":"VariableDeclaration","scope":101771,"src":"39326:32:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101765,"name":"string","nodeType":"ElementaryTypeName","src":"39326:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39325:34:150"},"returnParameters":{"id":101770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101769,"mutability":"mutable","name":"parsedValue","nameLocation":"39391:11:150","nodeType":"VariableDeclaration","scope":101771,"src":"39383:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101768,"name":"address","nodeType":"ElementaryTypeName","src":"39383:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"39382:21:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101779,"nodeType":"FunctionDefinition","src":"39459:94:150","nodes":[],"documentation":{"id":101772,"nodeType":"StructuredDocumentation","src":"39410:44:150","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"39468:9:150","parameters":{"id":101775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101774,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39494:16:150","nodeType":"VariableDeclaration","scope":101779,"src":"39478:32:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101773,"name":"string","nodeType":"ElementaryTypeName","src":"39478:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39477:34:150"},"returnParameters":{"id":101778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101777,"mutability":"mutable","name":"parsedValue","nameLocation":"39540:11:150","nodeType":"VariableDeclaration","scope":101779,"src":"39535:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":101776,"name":"bool","nodeType":"ElementaryTypeName","src":"39535:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"39534:18:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101787,"nodeType":"FunctionDefinition","src":"39607:103:150","nodes":[],"documentation":{"id":101780,"nodeType":"StructuredDocumentation","src":"39559:43:150","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"39616:10:150","parameters":{"id":101783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101782,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39643:16:150","nodeType":"VariableDeclaration","scope":101787,"src":"39627:32:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101781,"name":"string","nodeType":"ElementaryTypeName","src":"39627:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39626:34:150"},"returnParameters":{"id":101786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101785,"mutability":"mutable","name":"parsedValue","nameLocation":"39697:11:150","nodeType":"VariableDeclaration","scope":101787,"src":"39684:24:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":101784,"name":"bytes","nodeType":"ElementaryTypeName","src":"39684:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39683:26:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101795,"nodeType":"FunctionDefinition","src":"39768:100:150","nodes":[],"documentation":{"id":101788,"nodeType":"StructuredDocumentation","src":"39716:47:150","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"39777:12:150","parameters":{"id":101791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101790,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39806:16:150","nodeType":"VariableDeclaration","scope":101795,"src":"39790:32:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101789,"name":"string","nodeType":"ElementaryTypeName","src":"39790:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39789:34:150"},"returnParameters":{"id":101794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101793,"mutability":"mutable","name":"parsedValue","nameLocation":"39855:11:150","nodeType":"VariableDeclaration","scope":101795,"src":"39847:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":101792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"39847:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"39846:21:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101803,"nodeType":"FunctionDefinition","src":"39925:95:150","nodes":[],"documentation":{"id":101796,"nodeType":"StructuredDocumentation","src":"39874:46:150","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"39934:8:150","parameters":{"id":101799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101798,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39959:16:150","nodeType":"VariableDeclaration","scope":101803,"src":"39943:32:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101797,"name":"string","nodeType":"ElementaryTypeName","src":"39943:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39942:34:150"},"returnParameters":{"id":101802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101801,"mutability":"mutable","name":"parsedValue","nameLocation":"40007:11:150","nodeType":"VariableDeclaration","scope":101803,"src":"40000:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":101800,"name":"int256","nodeType":"ElementaryTypeName","src":"40000:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"39999:20:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101811,"nodeType":"FunctionDefinition","src":"40078:97:150","nodes":[],"documentation":{"id":101804,"nodeType":"StructuredDocumentation","src":"40026:47:150","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"40087:9:150","parameters":{"id":101807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101806,"mutability":"mutable","name":"stringifiedValue","nameLocation":"40113:16:150","nodeType":"VariableDeclaration","scope":101811,"src":"40097:32:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101805,"name":"string","nodeType":"ElementaryTypeName","src":"40097:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40096:34:150"},"returnParameters":{"id":101810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101809,"mutability":"mutable","name":"parsedValue","nameLocation":"40162:11:150","nodeType":"VariableDeclaration","scope":101811,"src":"40154:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101808,"name":"uint256","nodeType":"ElementaryTypeName","src":"40154:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40153:21:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101823,"nodeType":"FunctionDefinition","src":"40253:151:150","nodes":[],"documentation":{"id":101812,"nodeType":"StructuredDocumentation","src":"40181:67:150","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"40262:7:150","parameters":{"id":101819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101814,"mutability":"mutable","name":"input","nameLocation":"40286:5:150","nodeType":"VariableDeclaration","scope":101823,"src":"40270:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101813,"name":"string","nodeType":"ElementaryTypeName","src":"40270:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101816,"mutability":"mutable","name":"from","nameLocation":"40309:4:150","nodeType":"VariableDeclaration","scope":101823,"src":"40293:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101815,"name":"string","nodeType":"ElementaryTypeName","src":"40293:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101818,"mutability":"mutable","name":"to","nameLocation":"40331:2:150","nodeType":"VariableDeclaration","scope":101823,"src":"40315:18:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101817,"name":"string","nodeType":"ElementaryTypeName","src":"40315:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40269:65:150"},"returnParameters":{"id":101822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101821,"mutability":"mutable","name":"output","nameLocation":"40396:6:150","nodeType":"VariableDeclaration","scope":101823,"src":"40382:20:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101820,"name":"string","nodeType":"ElementaryTypeName","src":"40382:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40381:22:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101834,"nodeType":"FunctionDefinition","src":"40497:113:150","nodes":[],"documentation":{"id":101824,"nodeType":"StructuredDocumentation","src":"40410:82:150","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"40506:5:150","parameters":{"id":101829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101826,"mutability":"mutable","name":"input","nameLocation":"40528:5:150","nodeType":"VariableDeclaration","scope":101834,"src":"40512:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101825,"name":"string","nodeType":"ElementaryTypeName","src":"40512:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101828,"mutability":"mutable","name":"delimiter","nameLocation":"40551:9:150","nodeType":"VariableDeclaration","scope":101834,"src":"40535:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101827,"name":"string","nodeType":"ElementaryTypeName","src":"40535:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40511:50:150"},"returnParameters":{"id":101833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101832,"mutability":"mutable","name":"outputs","nameLocation":"40601:7:150","nodeType":"VariableDeclaration","scope":101834,"src":"40585:23:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":101830,"name":"string","nodeType":"ElementaryTypeName","src":"40585:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":101831,"nodeType":"ArrayTypeName","src":"40585:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"40584:25:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101842,"nodeType":"FunctionDefinition","src":"40672:89:150","nodes":[],"documentation":{"id":101835,"nodeType":"StructuredDocumentation","src":"40616:51:150","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"40681:11:150","parameters":{"id":101838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101837,"mutability":"mutable","name":"input","nameLocation":"40709:5:150","nodeType":"VariableDeclaration","scope":101842,"src":"40693:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101836,"name":"string","nodeType":"ElementaryTypeName","src":"40693:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40692:23:150"},"returnParameters":{"id":101841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101840,"mutability":"mutable","name":"output","nameLocation":"40753:6:150","nodeType":"VariableDeclaration","scope":101842,"src":"40739:20:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101839,"name":"string","nodeType":"ElementaryTypeName","src":"40739:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40738:22:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101850,"nodeType":"FunctionDefinition","src":"40815:88:150","nodes":[],"documentation":{"id":101843,"nodeType":"StructuredDocumentation","src":"40767:43:150","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"40824:8:150","parameters":{"id":101846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101845,"mutability":"mutable","name":"value","nameLocation":"40841:5:150","nodeType":"VariableDeclaration","scope":101850,"src":"40833:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101844,"name":"address","nodeType":"ElementaryTypeName","src":"40833:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40832:15:150"},"returnParameters":{"id":101849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101848,"mutability":"mutable","name":"stringifiedValue","nameLocation":"40885:16:150","nodeType":"VariableDeclaration","scope":101850,"src":"40871:30:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101847,"name":"string","nodeType":"ElementaryTypeName","src":"40871:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40870:32:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101858,"nodeType":"FunctionDefinition","src":"40957:95:150","nodes":[],"documentation":{"id":101851,"nodeType":"StructuredDocumentation","src":"40909:43:150","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"40966:8:150","parameters":{"id":101854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101853,"mutability":"mutable","name":"value","nameLocation":"40990:5:150","nodeType":"VariableDeclaration","scope":101858,"src":"40975:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":101852,"name":"bytes","nodeType":"ElementaryTypeName","src":"40975:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40974:22:150"},"returnParameters":{"id":101857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101856,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41034:16:150","nodeType":"VariableDeclaration","scope":101858,"src":"41020:30:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101855,"name":"string","nodeType":"ElementaryTypeName","src":"41020:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41019:32:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101866,"nodeType":"FunctionDefinition","src":"41106:88:150","nodes":[],"documentation":{"id":101859,"nodeType":"StructuredDocumentation","src":"41058:43:150","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41115:8:150","parameters":{"id":101862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101861,"mutability":"mutable","name":"value","nameLocation":"41132:5:150","nodeType":"VariableDeclaration","scope":101866,"src":"41124:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":101860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"41124:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"41123:15:150"},"returnParameters":{"id":101865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101864,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41176:16:150","nodeType":"VariableDeclaration","scope":101866,"src":"41162:30:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101863,"name":"string","nodeType":"ElementaryTypeName","src":"41162:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41161:32:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101874,"nodeType":"FunctionDefinition","src":"41248:85:150","nodes":[],"documentation":{"id":101867,"nodeType":"StructuredDocumentation","src":"41200:43:150","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41257:8:150","parameters":{"id":101870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101869,"mutability":"mutable","name":"value","nameLocation":"41271:5:150","nodeType":"VariableDeclaration","scope":101874,"src":"41266:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":101868,"name":"bool","nodeType":"ElementaryTypeName","src":"41266:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41265:12:150"},"returnParameters":{"id":101873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101872,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41315:16:150","nodeType":"VariableDeclaration","scope":101874,"src":"41301:30:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101871,"name":"string","nodeType":"ElementaryTypeName","src":"41301:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41300:32:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101882,"nodeType":"FunctionDefinition","src":"41387:88:150","nodes":[],"documentation":{"id":101875,"nodeType":"StructuredDocumentation","src":"41339:43:150","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41396:8:150","parameters":{"id":101878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101877,"mutability":"mutable","name":"value","nameLocation":"41413:5:150","nodeType":"VariableDeclaration","scope":101882,"src":"41405:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101876,"name":"uint256","nodeType":"ElementaryTypeName","src":"41405:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41404:15:150"},"returnParameters":{"id":101881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101880,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41457:16:150","nodeType":"VariableDeclaration","scope":101882,"src":"41443:30:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101879,"name":"string","nodeType":"ElementaryTypeName","src":"41443:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41442:32:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101890,"nodeType":"FunctionDefinition","src":"41529:87:150","nodes":[],"documentation":{"id":101883,"nodeType":"StructuredDocumentation","src":"41481:43:150","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41538:8:150","parameters":{"id":101886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101885,"mutability":"mutable","name":"value","nameLocation":"41554:5:150","nodeType":"VariableDeclaration","scope":101890,"src":"41547:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":101884,"name":"int256","nodeType":"ElementaryTypeName","src":"41547:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"41546:14:150"},"returnParameters":{"id":101889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101888,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41598:16:150","nodeType":"VariableDeclaration","scope":101890,"src":"41584:30:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101887,"name":"string","nodeType":"ElementaryTypeName","src":"41584:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41583:32:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101898,"nodeType":"FunctionDefinition","src":"41678:89:150","nodes":[],"documentation":{"id":101891,"nodeType":"StructuredDocumentation","src":"41622:51:150","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"41687:11:150","parameters":{"id":101894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101893,"mutability":"mutable","name":"input","nameLocation":"41715:5:150","nodeType":"VariableDeclaration","scope":101898,"src":"41699:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101892,"name":"string","nodeType":"ElementaryTypeName","src":"41699:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41698:23:150"},"returnParameters":{"id":101897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101896,"mutability":"mutable","name":"output","nameLocation":"41759:6:150","nodeType":"VariableDeclaration","scope":101898,"src":"41745:20:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101895,"name":"string","nodeType":"ElementaryTypeName","src":"41745:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41744:22:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101906,"nodeType":"FunctionDefinition","src":"41850:82:150","nodes":[],"documentation":{"id":101899,"nodeType":"StructuredDocumentation","src":"41773:72:150","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"41859:4:150","parameters":{"id":101902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101901,"mutability":"mutable","name":"input","nameLocation":"41880:5:150","nodeType":"VariableDeclaration","scope":101906,"src":"41864:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101900,"name":"string","nodeType":"ElementaryTypeName","src":"41864:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41863:23:150"},"returnParameters":{"id":101905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101904,"mutability":"mutable","name":"output","nameLocation":"41924:6:150","nodeType":"VariableDeclaration","scope":101906,"src":"41910:20:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101903,"name":"string","nodeType":"ElementaryTypeName","src":"41910:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41909:22:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101918,"nodeType":"FunctionDefinition","src":"42127:113:150","nodes":[],"documentation":{"id":101907,"nodeType":"StructuredDocumentation","src":"41972:150:150","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"42136:24:150","parameters":{"id":101916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101909,"mutability":"mutable","name":"left","nameLocation":"42169:4:150","nodeType":"VariableDeclaration","scope":101918,"src":"42161:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101908,"name":"uint256","nodeType":"ElementaryTypeName","src":"42161:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101911,"mutability":"mutable","name":"right","nameLocation":"42183:5:150","nodeType":"VariableDeclaration","scope":101918,"src":"42175:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101910,"name":"uint256","nodeType":"ElementaryTypeName","src":"42175:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101913,"mutability":"mutable","name":"maxDelta","nameLocation":"42198:8:150","nodeType":"VariableDeclaration","scope":101918,"src":"42190:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101912,"name":"uint256","nodeType":"ElementaryTypeName","src":"42190:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101915,"mutability":"mutable","name":"decimals","nameLocation":"42216:8:150","nodeType":"VariableDeclaration","scope":101918,"src":"42208:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101914,"name":"uint256","nodeType":"ElementaryTypeName","src":"42208:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42160:65:150"},"returnParameters":{"id":101917,"nodeType":"ParameterList","parameters":[],"src":"42239:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101932,"nodeType":"FunctionDefinition","src":"42455:182:150","nodes":[],"documentation":{"id":101919,"nodeType":"StructuredDocumentation","src":"42246:204:150","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"42464:24:150","parameters":{"id":101930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101921,"mutability":"mutable","name":"left","nameLocation":"42506:4:150","nodeType":"VariableDeclaration","scope":101932,"src":"42498:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101920,"name":"uint256","nodeType":"ElementaryTypeName","src":"42498:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101923,"mutability":"mutable","name":"right","nameLocation":"42528:5:150","nodeType":"VariableDeclaration","scope":101932,"src":"42520:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101922,"name":"uint256","nodeType":"ElementaryTypeName","src":"42520:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101925,"mutability":"mutable","name":"maxDelta","nameLocation":"42551:8:150","nodeType":"VariableDeclaration","scope":101932,"src":"42543:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101924,"name":"uint256","nodeType":"ElementaryTypeName","src":"42543:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101927,"mutability":"mutable","name":"decimals","nameLocation":"42577:8:150","nodeType":"VariableDeclaration","scope":101932,"src":"42569:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101926,"name":"uint256","nodeType":"ElementaryTypeName","src":"42569:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101929,"mutability":"mutable","name":"error","nameLocation":"42611:5:150","nodeType":"VariableDeclaration","scope":101932,"src":"42595:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101928,"name":"string","nodeType":"ElementaryTypeName","src":"42595:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42488:134:150"},"returnParameters":{"id":101931,"nodeType":"ParameterList","parameters":[],"src":"42636:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101944,"nodeType":"FunctionDefinition","src":"42797:111:150","nodes":[],"documentation":{"id":101933,"nodeType":"StructuredDocumentation","src":"42643:149:150","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"42806:24:150","parameters":{"id":101942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101935,"mutability":"mutable","name":"left","nameLocation":"42838:4:150","nodeType":"VariableDeclaration","scope":101944,"src":"42831:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":101934,"name":"int256","nodeType":"ElementaryTypeName","src":"42831:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":101937,"mutability":"mutable","name":"right","nameLocation":"42851:5:150","nodeType":"VariableDeclaration","scope":101944,"src":"42844:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":101936,"name":"int256","nodeType":"ElementaryTypeName","src":"42844:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":101939,"mutability":"mutable","name":"maxDelta","nameLocation":"42866:8:150","nodeType":"VariableDeclaration","scope":101944,"src":"42858:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101938,"name":"uint256","nodeType":"ElementaryTypeName","src":"42858:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101941,"mutability":"mutable","name":"decimals","nameLocation":"42884:8:150","nodeType":"VariableDeclaration","scope":101944,"src":"42876:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101940,"name":"uint256","nodeType":"ElementaryTypeName","src":"42876:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42830:63:150"},"returnParameters":{"id":101943,"nodeType":"ParameterList","parameters":[],"src":"42907:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101958,"nodeType":"FunctionDefinition","src":"43122:180:150","nodes":[],"documentation":{"id":101945,"nodeType":"StructuredDocumentation","src":"42914:203:150","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"43131:24:150","parameters":{"id":101956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101947,"mutability":"mutable","name":"left","nameLocation":"43172:4:150","nodeType":"VariableDeclaration","scope":101958,"src":"43165:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":101946,"name":"int256","nodeType":"ElementaryTypeName","src":"43165:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":101949,"mutability":"mutable","name":"right","nameLocation":"43193:5:150","nodeType":"VariableDeclaration","scope":101958,"src":"43186:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":101948,"name":"int256","nodeType":"ElementaryTypeName","src":"43186:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":101951,"mutability":"mutable","name":"maxDelta","nameLocation":"43216:8:150","nodeType":"VariableDeclaration","scope":101958,"src":"43208:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101950,"name":"uint256","nodeType":"ElementaryTypeName","src":"43208:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101953,"mutability":"mutable","name":"decimals","nameLocation":"43242:8:150","nodeType":"VariableDeclaration","scope":101958,"src":"43234:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101952,"name":"uint256","nodeType":"ElementaryTypeName","src":"43234:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101955,"mutability":"mutable","name":"error","nameLocation":"43276:5:150","nodeType":"VariableDeclaration","scope":101958,"src":"43260:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101954,"name":"string","nodeType":"ElementaryTypeName","src":"43260:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43155:132:150"},"returnParameters":{"id":101957,"nodeType":"ParameterList","parameters":[],"src":"43301:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101968,"nodeType":"FunctionDefinition","src":"43406:88:150","nodes":[],"documentation":{"id":101959,"nodeType":"StructuredDocumentation","src":"43308:93:150","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"43415:17:150","parameters":{"id":101966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101961,"mutability":"mutable","name":"left","nameLocation":"43441:4:150","nodeType":"VariableDeclaration","scope":101968,"src":"43433:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101960,"name":"uint256","nodeType":"ElementaryTypeName","src":"43433:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101963,"mutability":"mutable","name":"right","nameLocation":"43455:5:150","nodeType":"VariableDeclaration","scope":101968,"src":"43447:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101962,"name":"uint256","nodeType":"ElementaryTypeName","src":"43447:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101965,"mutability":"mutable","name":"maxDelta","nameLocation":"43470:8:150","nodeType":"VariableDeclaration","scope":101968,"src":"43462:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101964,"name":"uint256","nodeType":"ElementaryTypeName","src":"43462:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43432:47:150"},"returnParameters":{"id":101967,"nodeType":"ParameterList","parameters":[],"src":"43493:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101980,"nodeType":"FunctionDefinition","src":"43660:111:150","nodes":[],"documentation":{"id":101969,"nodeType":"StructuredDocumentation","src":"43500:155:150","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"43669:17:150","parameters":{"id":101978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101971,"mutability":"mutable","name":"left","nameLocation":"43695:4:150","nodeType":"VariableDeclaration","scope":101980,"src":"43687:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101970,"name":"uint256","nodeType":"ElementaryTypeName","src":"43687:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101973,"mutability":"mutable","name":"right","nameLocation":"43709:5:150","nodeType":"VariableDeclaration","scope":101980,"src":"43701:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101972,"name":"uint256","nodeType":"ElementaryTypeName","src":"43701:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101975,"mutability":"mutable","name":"maxDelta","nameLocation":"43724:8:150","nodeType":"VariableDeclaration","scope":101980,"src":"43716:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101974,"name":"uint256","nodeType":"ElementaryTypeName","src":"43716:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101977,"mutability":"mutable","name":"error","nameLocation":"43750:5:150","nodeType":"VariableDeclaration","scope":101980,"src":"43734:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101976,"name":"string","nodeType":"ElementaryTypeName","src":"43734:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43686:70:150"},"returnParameters":{"id":101979,"nodeType":"ParameterList","parameters":[],"src":"43770:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":101990,"nodeType":"FunctionDefinition","src":"43874:86:150","nodes":[],"documentation":{"id":101981,"nodeType":"StructuredDocumentation","src":"43777:92:150","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"43883:17:150","parameters":{"id":101988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101983,"mutability":"mutable","name":"left","nameLocation":"43908:4:150","nodeType":"VariableDeclaration","scope":101990,"src":"43901:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":101982,"name":"int256","nodeType":"ElementaryTypeName","src":"43901:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":101985,"mutability":"mutable","name":"right","nameLocation":"43921:5:150","nodeType":"VariableDeclaration","scope":101990,"src":"43914:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":101984,"name":"int256","nodeType":"ElementaryTypeName","src":"43914:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":101987,"mutability":"mutable","name":"maxDelta","nameLocation":"43936:8:150","nodeType":"VariableDeclaration","scope":101990,"src":"43928:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101986,"name":"uint256","nodeType":"ElementaryTypeName","src":"43928:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43900:45:150"},"returnParameters":{"id":101989,"nodeType":"ParameterList","parameters":[],"src":"43959:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102002,"nodeType":"FunctionDefinition","src":"44125:109:150","nodes":[],"documentation":{"id":101991,"nodeType":"StructuredDocumentation","src":"43966:154:150","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"44134:17:150","parameters":{"id":102000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101993,"mutability":"mutable","name":"left","nameLocation":"44159:4:150","nodeType":"VariableDeclaration","scope":102002,"src":"44152:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":101992,"name":"int256","nodeType":"ElementaryTypeName","src":"44152:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":101995,"mutability":"mutable","name":"right","nameLocation":"44172:5:150","nodeType":"VariableDeclaration","scope":102002,"src":"44165:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":101994,"name":"int256","nodeType":"ElementaryTypeName","src":"44165:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":101997,"mutability":"mutable","name":"maxDelta","nameLocation":"44187:8:150","nodeType":"VariableDeclaration","scope":102002,"src":"44179:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101996,"name":"uint256","nodeType":"ElementaryTypeName","src":"44179:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101999,"mutability":"mutable","name":"error","nameLocation":"44213:5:150","nodeType":"VariableDeclaration","scope":102002,"src":"44197:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":101998,"name":"string","nodeType":"ElementaryTypeName","src":"44197:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44151:68:150"},"returnParameters":{"id":102001,"nodeType":"ParameterList","parameters":[],"src":"44233:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102014,"nodeType":"FunctionDefinition","src":"44505:136:150","nodes":[],"documentation":{"id":102003,"nodeType":"StructuredDocumentation","src":"44240:260:150","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"44514:24:150","parameters":{"id":102012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102005,"mutability":"mutable","name":"left","nameLocation":"44547:4:150","nodeType":"VariableDeclaration","scope":102014,"src":"44539:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102004,"name":"uint256","nodeType":"ElementaryTypeName","src":"44539:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102007,"mutability":"mutable","name":"right","nameLocation":"44561:5:150","nodeType":"VariableDeclaration","scope":102014,"src":"44553:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102006,"name":"uint256","nodeType":"ElementaryTypeName","src":"44553:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102009,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"44576:15:150","nodeType":"VariableDeclaration","scope":102014,"src":"44568:23:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102008,"name":"uint256","nodeType":"ElementaryTypeName","src":"44568:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102011,"mutability":"mutable","name":"decimals","nameLocation":"44601:8:150","nodeType":"VariableDeclaration","scope":102014,"src":"44593:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102010,"name":"uint256","nodeType":"ElementaryTypeName","src":"44593:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44538:72:150"},"returnParameters":{"id":102013,"nodeType":"ParameterList","parameters":[],"src":"44640:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102028,"nodeType":"FunctionDefinition","src":"44966:189:150","nodes":[],"documentation":{"id":102015,"nodeType":"StructuredDocumentation","src":"44647:314:150","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"44975:24:150","parameters":{"id":102026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102017,"mutability":"mutable","name":"left","nameLocation":"45017:4:150","nodeType":"VariableDeclaration","scope":102028,"src":"45009:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102016,"name":"uint256","nodeType":"ElementaryTypeName","src":"45009:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102019,"mutability":"mutable","name":"right","nameLocation":"45039:5:150","nodeType":"VariableDeclaration","scope":102028,"src":"45031:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102018,"name":"uint256","nodeType":"ElementaryTypeName","src":"45031:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102021,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"45062:15:150","nodeType":"VariableDeclaration","scope":102028,"src":"45054:23:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102020,"name":"uint256","nodeType":"ElementaryTypeName","src":"45054:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102023,"mutability":"mutable","name":"decimals","nameLocation":"45095:8:150","nodeType":"VariableDeclaration","scope":102028,"src":"45087:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102022,"name":"uint256","nodeType":"ElementaryTypeName","src":"45087:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102025,"mutability":"mutable","name":"error","nameLocation":"45129:5:150","nodeType":"VariableDeclaration","scope":102028,"src":"45113:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102024,"name":"string","nodeType":"ElementaryTypeName","src":"45113:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44999:141:150"},"returnParameters":{"id":102027,"nodeType":"ParameterList","parameters":[],"src":"45154:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102040,"nodeType":"FunctionDefinition","src":"45425:134:150","nodes":[],"documentation":{"id":102029,"nodeType":"StructuredDocumentation","src":"45161:259:150","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"45434:24:150","parameters":{"id":102038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102031,"mutability":"mutable","name":"left","nameLocation":"45466:4:150","nodeType":"VariableDeclaration","scope":102040,"src":"45459:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102030,"name":"int256","nodeType":"ElementaryTypeName","src":"45459:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102033,"mutability":"mutable","name":"right","nameLocation":"45479:5:150","nodeType":"VariableDeclaration","scope":102040,"src":"45472:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102032,"name":"int256","nodeType":"ElementaryTypeName","src":"45472:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102035,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"45494:15:150","nodeType":"VariableDeclaration","scope":102040,"src":"45486:23:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102034,"name":"uint256","nodeType":"ElementaryTypeName","src":"45486:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102037,"mutability":"mutable","name":"decimals","nameLocation":"45519:8:150","nodeType":"VariableDeclaration","scope":102040,"src":"45511:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102036,"name":"uint256","nodeType":"ElementaryTypeName","src":"45511:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45458:70:150"},"returnParameters":{"id":102039,"nodeType":"ParameterList","parameters":[],"src":"45558:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102054,"nodeType":"FunctionDefinition","src":"45883:187:150","nodes":[],"documentation":{"id":102041,"nodeType":"StructuredDocumentation","src":"45565:313:150","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"45892:24:150","parameters":{"id":102052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102043,"mutability":"mutable","name":"left","nameLocation":"45933:4:150","nodeType":"VariableDeclaration","scope":102054,"src":"45926:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102042,"name":"int256","nodeType":"ElementaryTypeName","src":"45926:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102045,"mutability":"mutable","name":"right","nameLocation":"45954:5:150","nodeType":"VariableDeclaration","scope":102054,"src":"45947:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102044,"name":"int256","nodeType":"ElementaryTypeName","src":"45947:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102047,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"45977:15:150","nodeType":"VariableDeclaration","scope":102054,"src":"45969:23:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102046,"name":"uint256","nodeType":"ElementaryTypeName","src":"45969:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102049,"mutability":"mutable","name":"decimals","nameLocation":"46010:8:150","nodeType":"VariableDeclaration","scope":102054,"src":"46002:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102048,"name":"uint256","nodeType":"ElementaryTypeName","src":"46002:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102051,"mutability":"mutable","name":"error","nameLocation":"46044:5:150","nodeType":"VariableDeclaration","scope":102054,"src":"46028:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102050,"name":"string","nodeType":"ElementaryTypeName","src":"46028:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45916:139:150"},"returnParameters":{"id":102053,"nodeType":"ParameterList","parameters":[],"src":"46069:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102064,"nodeType":"FunctionDefinition","src":"46284:95:150","nodes":[],"documentation":{"id":102055,"nodeType":"StructuredDocumentation","src":"46076:203:150","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"46293:17:150","parameters":{"id":102062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102057,"mutability":"mutable","name":"left","nameLocation":"46319:4:150","nodeType":"VariableDeclaration","scope":102064,"src":"46311:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102056,"name":"uint256","nodeType":"ElementaryTypeName","src":"46311:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102059,"mutability":"mutable","name":"right","nameLocation":"46333:5:150","nodeType":"VariableDeclaration","scope":102064,"src":"46325:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102058,"name":"uint256","nodeType":"ElementaryTypeName","src":"46325:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102061,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"46348:15:150","nodeType":"VariableDeclaration","scope":102064,"src":"46340:23:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102060,"name":"uint256","nodeType":"ElementaryTypeName","src":"46340:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46310:54:150"},"returnParameters":{"id":102063,"nodeType":"ParameterList","parameters":[],"src":"46378:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102076,"nodeType":"FunctionDefinition","src":"46655:134:150","nodes":[],"documentation":{"id":102065,"nodeType":"StructuredDocumentation","src":"46385:265:150","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"46664:17:150","parameters":{"id":102074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102067,"mutability":"mutable","name":"left","nameLocation":"46690:4:150","nodeType":"VariableDeclaration","scope":102076,"src":"46682:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102066,"name":"uint256","nodeType":"ElementaryTypeName","src":"46682:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102069,"mutability":"mutable","name":"right","nameLocation":"46704:5:150","nodeType":"VariableDeclaration","scope":102076,"src":"46696:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102068,"name":"uint256","nodeType":"ElementaryTypeName","src":"46696:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102071,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"46719:15:150","nodeType":"VariableDeclaration","scope":102076,"src":"46711:23:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102070,"name":"uint256","nodeType":"ElementaryTypeName","src":"46711:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102073,"mutability":"mutable","name":"error","nameLocation":"46752:5:150","nodeType":"VariableDeclaration","scope":102076,"src":"46736:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102072,"name":"string","nodeType":"ElementaryTypeName","src":"46736:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46681:77:150"},"returnParameters":{"id":102075,"nodeType":"ParameterList","parameters":[],"src":"46788:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102086,"nodeType":"FunctionDefinition","src":"47002:93:150","nodes":[],"documentation":{"id":102077,"nodeType":"StructuredDocumentation","src":"46795:202:150","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"47011:17:150","parameters":{"id":102084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102079,"mutability":"mutable","name":"left","nameLocation":"47036:4:150","nodeType":"VariableDeclaration","scope":102086,"src":"47029:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102078,"name":"int256","nodeType":"ElementaryTypeName","src":"47029:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102081,"mutability":"mutable","name":"right","nameLocation":"47049:5:150","nodeType":"VariableDeclaration","scope":102086,"src":"47042:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102080,"name":"int256","nodeType":"ElementaryTypeName","src":"47042:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102083,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47064:15:150","nodeType":"VariableDeclaration","scope":102086,"src":"47056:23:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102082,"name":"uint256","nodeType":"ElementaryTypeName","src":"47056:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47028:52:150"},"returnParameters":{"id":102085,"nodeType":"ParameterList","parameters":[],"src":"47094:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102098,"nodeType":"FunctionDefinition","src":"47370:132:150","nodes":[],"documentation":{"id":102087,"nodeType":"StructuredDocumentation","src":"47101:264:150","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"47379:17:150","parameters":{"id":102096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102089,"mutability":"mutable","name":"left","nameLocation":"47404:4:150","nodeType":"VariableDeclaration","scope":102098,"src":"47397:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102088,"name":"int256","nodeType":"ElementaryTypeName","src":"47397:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102091,"mutability":"mutable","name":"right","nameLocation":"47417:5:150","nodeType":"VariableDeclaration","scope":102098,"src":"47410:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102090,"name":"int256","nodeType":"ElementaryTypeName","src":"47410:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102093,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47432:15:150","nodeType":"VariableDeclaration","scope":102098,"src":"47424:23:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102092,"name":"uint256","nodeType":"ElementaryTypeName","src":"47424:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102095,"mutability":"mutable","name":"error","nameLocation":"47465:5:150","nodeType":"VariableDeclaration","scope":102098,"src":"47449:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102094,"name":"string","nodeType":"ElementaryTypeName","src":"47449:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47396:75:150"},"returnParameters":{"id":102097,"nodeType":"ParameterList","parameters":[],"src":"47501:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102108,"nodeType":"FunctionDefinition","src":"47611:86:150","nodes":[],"documentation":{"id":102099,"nodeType":"StructuredDocumentation","src":"47508:98:150","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"47620:15:150","parameters":{"id":102106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102101,"mutability":"mutable","name":"left","nameLocation":"47644:4:150","nodeType":"VariableDeclaration","scope":102108,"src":"47636:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102100,"name":"uint256","nodeType":"ElementaryTypeName","src":"47636:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102103,"mutability":"mutable","name":"right","nameLocation":"47658:5:150","nodeType":"VariableDeclaration","scope":102108,"src":"47650:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102102,"name":"uint256","nodeType":"ElementaryTypeName","src":"47650:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102105,"mutability":"mutable","name":"decimals","nameLocation":"47673:8:150","nodeType":"VariableDeclaration","scope":102108,"src":"47665:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102104,"name":"uint256","nodeType":"ElementaryTypeName","src":"47665:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47635:47:150"},"returnParameters":{"id":102107,"nodeType":"ParameterList","parameters":[],"src":"47696:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102120,"nodeType":"FunctionDefinition","src":"47868:109:150","nodes":[],"documentation":{"id":102109,"nodeType":"StructuredDocumentation","src":"47703:160:150","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"47877:15:150","parameters":{"id":102118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102111,"mutability":"mutable","name":"left","nameLocation":"47901:4:150","nodeType":"VariableDeclaration","scope":102120,"src":"47893:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102110,"name":"uint256","nodeType":"ElementaryTypeName","src":"47893:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102113,"mutability":"mutable","name":"right","nameLocation":"47915:5:150","nodeType":"VariableDeclaration","scope":102120,"src":"47907:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102112,"name":"uint256","nodeType":"ElementaryTypeName","src":"47907:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102115,"mutability":"mutable","name":"decimals","nameLocation":"47930:8:150","nodeType":"VariableDeclaration","scope":102120,"src":"47922:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102114,"name":"uint256","nodeType":"ElementaryTypeName","src":"47922:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102117,"mutability":"mutable","name":"error","nameLocation":"47956:5:150","nodeType":"VariableDeclaration","scope":102120,"src":"47940:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102116,"name":"string","nodeType":"ElementaryTypeName","src":"47940:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47892:70:150"},"returnParameters":{"id":102119,"nodeType":"ParameterList","parameters":[],"src":"47976:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102130,"nodeType":"FunctionDefinition","src":"48085:84:150","nodes":[],"documentation":{"id":102121,"nodeType":"StructuredDocumentation","src":"47983:97:150","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"48094:15:150","parameters":{"id":102128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102123,"mutability":"mutable","name":"left","nameLocation":"48117:4:150","nodeType":"VariableDeclaration","scope":102130,"src":"48110:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102122,"name":"int256","nodeType":"ElementaryTypeName","src":"48110:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102125,"mutability":"mutable","name":"right","nameLocation":"48130:5:150","nodeType":"VariableDeclaration","scope":102130,"src":"48123:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102124,"name":"int256","nodeType":"ElementaryTypeName","src":"48123:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102127,"mutability":"mutable","name":"decimals","nameLocation":"48145:8:150","nodeType":"VariableDeclaration","scope":102130,"src":"48137:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102126,"name":"uint256","nodeType":"ElementaryTypeName","src":"48137:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48109:45:150"},"returnParameters":{"id":102129,"nodeType":"ParameterList","parameters":[],"src":"48168:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102142,"nodeType":"FunctionDefinition","src":"48339:107:150","nodes":[],"documentation":{"id":102131,"nodeType":"StructuredDocumentation","src":"48175:159:150","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"48348:15:150","parameters":{"id":102140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102133,"mutability":"mutable","name":"left","nameLocation":"48371:4:150","nodeType":"VariableDeclaration","scope":102142,"src":"48364:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102132,"name":"int256","nodeType":"ElementaryTypeName","src":"48364:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102135,"mutability":"mutable","name":"right","nameLocation":"48384:5:150","nodeType":"VariableDeclaration","scope":102142,"src":"48377:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102134,"name":"int256","nodeType":"ElementaryTypeName","src":"48377:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102137,"mutability":"mutable","name":"decimals","nameLocation":"48399:8:150","nodeType":"VariableDeclaration","scope":102142,"src":"48391:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102136,"name":"uint256","nodeType":"ElementaryTypeName","src":"48391:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102139,"mutability":"mutable","name":"error","nameLocation":"48425:5:150","nodeType":"VariableDeclaration","scope":102142,"src":"48409:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102138,"name":"string","nodeType":"ElementaryTypeName","src":"48409:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48363:68:150"},"returnParameters":{"id":102141,"nodeType":"ParameterList","parameters":[],"src":"48445:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102150,"nodeType":"FunctionDefinition","src":"48502:55:150","nodes":[],"documentation":{"id":102143,"nodeType":"StructuredDocumentation","src":"48452:45:150","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48511:8:150","parameters":{"id":102148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102145,"mutability":"mutable","name":"left","nameLocation":"48525:4:150","nodeType":"VariableDeclaration","scope":102150,"src":"48520:9:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":102144,"name":"bool","nodeType":"ElementaryTypeName","src":"48520:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":102147,"mutability":"mutable","name":"right","nameLocation":"48536:5:150","nodeType":"VariableDeclaration","scope":102150,"src":"48531:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":102146,"name":"bool","nodeType":"ElementaryTypeName","src":"48531:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48519:23:150"},"returnParameters":{"id":102149,"nodeType":"ParameterList","parameters":[],"src":"48556:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102160,"nodeType":"FunctionDefinition","src":"48670:78:150","nodes":[],"documentation":{"id":102151,"nodeType":"StructuredDocumentation","src":"48563:102:150","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48679:8:150","parameters":{"id":102158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102153,"mutability":"mutable","name":"left","nameLocation":"48693:4:150","nodeType":"VariableDeclaration","scope":102160,"src":"48688:9:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":102152,"name":"bool","nodeType":"ElementaryTypeName","src":"48688:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":102155,"mutability":"mutable","name":"right","nameLocation":"48704:5:150","nodeType":"VariableDeclaration","scope":102160,"src":"48699:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":102154,"name":"bool","nodeType":"ElementaryTypeName","src":"48699:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":102157,"mutability":"mutable","name":"error","nameLocation":"48727:5:150","nodeType":"VariableDeclaration","scope":102160,"src":"48711:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102156,"name":"string","nodeType":"ElementaryTypeName","src":"48711:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48687:46:150"},"returnParameters":{"id":102159,"nodeType":"ParameterList","parameters":[],"src":"48747:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102168,"nodeType":"FunctionDefinition","src":"48806:77:150","nodes":[],"documentation":{"id":102161,"nodeType":"StructuredDocumentation","src":"48754:47:150","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48815:8:150","parameters":{"id":102166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102163,"mutability":"mutable","name":"left","nameLocation":"48840:4:150","nodeType":"VariableDeclaration","scope":102168,"src":"48824:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102162,"name":"string","nodeType":"ElementaryTypeName","src":"48824:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":102165,"mutability":"mutable","name":"right","nameLocation":"48862:5:150","nodeType":"VariableDeclaration","scope":102168,"src":"48846:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102164,"name":"string","nodeType":"ElementaryTypeName","src":"48846:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48823:45:150"},"returnParameters":{"id":102167,"nodeType":"ParameterList","parameters":[],"src":"48882:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102178,"nodeType":"FunctionDefinition","src":"48998:100:150","nodes":[],"documentation":{"id":102169,"nodeType":"StructuredDocumentation","src":"48889:104:150","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49007:8:150","parameters":{"id":102176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102171,"mutability":"mutable","name":"left","nameLocation":"49032:4:150","nodeType":"VariableDeclaration","scope":102178,"src":"49016:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102170,"name":"string","nodeType":"ElementaryTypeName","src":"49016:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":102173,"mutability":"mutable","name":"right","nameLocation":"49054:5:150","nodeType":"VariableDeclaration","scope":102178,"src":"49038:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102172,"name":"string","nodeType":"ElementaryTypeName","src":"49038:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":102175,"mutability":"mutable","name":"error","nameLocation":"49077:5:150","nodeType":"VariableDeclaration","scope":102178,"src":"49061:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102174,"name":"string","nodeType":"ElementaryTypeName","src":"49061:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49015:68:150"},"returnParameters":{"id":102177,"nodeType":"ParameterList","parameters":[],"src":"49097:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102186,"nodeType":"FunctionDefinition","src":"49155:75:150","nodes":[],"documentation":{"id":102179,"nodeType":"StructuredDocumentation","src":"49104:46:150","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49164:8:150","parameters":{"id":102184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102181,"mutability":"mutable","name":"left","nameLocation":"49188:4:150","nodeType":"VariableDeclaration","scope":102186,"src":"49173:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":102180,"name":"bytes","nodeType":"ElementaryTypeName","src":"49173:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":102183,"mutability":"mutable","name":"right","nameLocation":"49209:5:150","nodeType":"VariableDeclaration","scope":102186,"src":"49194:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":102182,"name":"bytes","nodeType":"ElementaryTypeName","src":"49194:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49172:43:150"},"returnParameters":{"id":102185,"nodeType":"ParameterList","parameters":[],"src":"49229:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102196,"nodeType":"FunctionDefinition","src":"49344:98:150","nodes":[],"documentation":{"id":102187,"nodeType":"StructuredDocumentation","src":"49236:103:150","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49353:8:150","parameters":{"id":102194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102189,"mutability":"mutable","name":"left","nameLocation":"49377:4:150","nodeType":"VariableDeclaration","scope":102196,"src":"49362:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":102188,"name":"bytes","nodeType":"ElementaryTypeName","src":"49362:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":102191,"mutability":"mutable","name":"right","nameLocation":"49398:5:150","nodeType":"VariableDeclaration","scope":102196,"src":"49383:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":102190,"name":"bytes","nodeType":"ElementaryTypeName","src":"49383:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":102193,"mutability":"mutable","name":"error","nameLocation":"49421:5:150","nodeType":"VariableDeclaration","scope":102196,"src":"49405:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102192,"name":"string","nodeType":"ElementaryTypeName","src":"49405:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49361:66:150"},"returnParameters":{"id":102195,"nodeType":"ParameterList","parameters":[],"src":"49441:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102206,"nodeType":"FunctionDefinition","src":"49508:77:150","nodes":[],"documentation":{"id":102197,"nodeType":"StructuredDocumentation","src":"49448:55:150","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49517:8:150","parameters":{"id":102204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102200,"mutability":"mutable","name":"left","nameLocation":"49542:4:150","nodeType":"VariableDeclaration","scope":102206,"src":"49526:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":102198,"name":"bool","nodeType":"ElementaryTypeName","src":"49526:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":102199,"nodeType":"ArrayTypeName","src":"49526:6:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":102203,"mutability":"mutable","name":"right","nameLocation":"49564:5:150","nodeType":"VariableDeclaration","scope":102206,"src":"49548:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":102201,"name":"bool","nodeType":"ElementaryTypeName","src":"49548:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":102202,"nodeType":"ArrayTypeName","src":"49548:6:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"49525:45:150"},"returnParameters":{"id":102205,"nodeType":"ParameterList","parameters":[],"src":"49584:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102218,"nodeType":"FunctionDefinition","src":"49708:100:150","nodes":[],"documentation":{"id":102207,"nodeType":"StructuredDocumentation","src":"49591:112:150","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49717:8:150","parameters":{"id":102216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102210,"mutability":"mutable","name":"left","nameLocation":"49742:4:150","nodeType":"VariableDeclaration","scope":102218,"src":"49726:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":102208,"name":"bool","nodeType":"ElementaryTypeName","src":"49726:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":102209,"nodeType":"ArrayTypeName","src":"49726:6:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":102213,"mutability":"mutable","name":"right","nameLocation":"49764:5:150","nodeType":"VariableDeclaration","scope":102218,"src":"49748:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":102211,"name":"bool","nodeType":"ElementaryTypeName","src":"49748:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":102212,"nodeType":"ArrayTypeName","src":"49748:6:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":102215,"mutability":"mutable","name":"error","nameLocation":"49787:5:150","nodeType":"VariableDeclaration","scope":102218,"src":"49771:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102214,"name":"string","nodeType":"ElementaryTypeName","src":"49771:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49725:68:150"},"returnParameters":{"id":102217,"nodeType":"ParameterList","parameters":[],"src":"49807:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102228,"nodeType":"FunctionDefinition","src":"49876:83:150","nodes":[],"documentation":{"id":102219,"nodeType":"StructuredDocumentation","src":"49814:57:150","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49885:8:150","parameters":{"id":102226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102222,"mutability":"mutable","name":"left","nameLocation":"49913:4:150","nodeType":"VariableDeclaration","scope":102228,"src":"49894:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":102220,"name":"uint256","nodeType":"ElementaryTypeName","src":"49894:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":102221,"nodeType":"ArrayTypeName","src":"49894:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":102225,"mutability":"mutable","name":"right","nameLocation":"49938:5:150","nodeType":"VariableDeclaration","scope":102228,"src":"49919:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":102223,"name":"uint256","nodeType":"ElementaryTypeName","src":"49919:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":102224,"nodeType":"ArrayTypeName","src":"49919:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"49893:51:150"},"returnParameters":{"id":102227,"nodeType":"ParameterList","parameters":[],"src":"49958:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102240,"nodeType":"FunctionDefinition","src":"50085:106:150","nodes":[],"documentation":{"id":102229,"nodeType":"StructuredDocumentation","src":"49965:115:150","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50094:8:150","parameters":{"id":102238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102232,"mutability":"mutable","name":"left","nameLocation":"50122:4:150","nodeType":"VariableDeclaration","scope":102240,"src":"50103:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":102230,"name":"uint256","nodeType":"ElementaryTypeName","src":"50103:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":102231,"nodeType":"ArrayTypeName","src":"50103:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":102235,"mutability":"mutable","name":"right","nameLocation":"50147:5:150","nodeType":"VariableDeclaration","scope":102240,"src":"50128:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":102233,"name":"uint256","nodeType":"ElementaryTypeName","src":"50128:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":102234,"nodeType":"ArrayTypeName","src":"50128:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":102237,"mutability":"mutable","name":"error","nameLocation":"50170:5:150","nodeType":"VariableDeclaration","scope":102240,"src":"50154:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102236,"name":"string","nodeType":"ElementaryTypeName","src":"50154:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50102:74:150"},"returnParameters":{"id":102239,"nodeType":"ParameterList","parameters":[],"src":"50190:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102250,"nodeType":"FunctionDefinition","src":"50259:81:150","nodes":[],"documentation":{"id":102241,"nodeType":"StructuredDocumentation","src":"50197:57:150","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50268:8:150","parameters":{"id":102248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102244,"mutability":"mutable","name":"left","nameLocation":"50295:4:150","nodeType":"VariableDeclaration","scope":102250,"src":"50277:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":102242,"name":"int256","nodeType":"ElementaryTypeName","src":"50277:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":102243,"nodeType":"ArrayTypeName","src":"50277:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":102247,"mutability":"mutable","name":"right","nameLocation":"50319:5:150","nodeType":"VariableDeclaration","scope":102250,"src":"50301:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":102245,"name":"int256","nodeType":"ElementaryTypeName","src":"50301:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":102246,"nodeType":"ArrayTypeName","src":"50301:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"50276:49:150"},"returnParameters":{"id":102249,"nodeType":"ParameterList","parameters":[],"src":"50339:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102262,"nodeType":"FunctionDefinition","src":"50465:104:150","nodes":[],"documentation":{"id":102251,"nodeType":"StructuredDocumentation","src":"50346:114:150","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50474:8:150","parameters":{"id":102260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102254,"mutability":"mutable","name":"left","nameLocation":"50501:4:150","nodeType":"VariableDeclaration","scope":102262,"src":"50483:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":102252,"name":"int256","nodeType":"ElementaryTypeName","src":"50483:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":102253,"nodeType":"ArrayTypeName","src":"50483:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":102257,"mutability":"mutable","name":"right","nameLocation":"50525:5:150","nodeType":"VariableDeclaration","scope":102262,"src":"50507:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":102255,"name":"int256","nodeType":"ElementaryTypeName","src":"50507:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":102256,"nodeType":"ArrayTypeName","src":"50507:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":102259,"mutability":"mutable","name":"error","nameLocation":"50548:5:150","nodeType":"VariableDeclaration","scope":102262,"src":"50532:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102258,"name":"string","nodeType":"ElementaryTypeName","src":"50532:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50482:72:150"},"returnParameters":{"id":102261,"nodeType":"ParameterList","parameters":[],"src":"50568:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102270,"nodeType":"FunctionDefinition","src":"50628:61:150","nodes":[],"documentation":{"id":102263,"nodeType":"StructuredDocumentation","src":"50575:48:150","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50637:8:150","parameters":{"id":102268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102265,"mutability":"mutable","name":"left","nameLocation":"50654:4:150","nodeType":"VariableDeclaration","scope":102270,"src":"50646:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102264,"name":"uint256","nodeType":"ElementaryTypeName","src":"50646:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102267,"mutability":"mutable","name":"right","nameLocation":"50668:5:150","nodeType":"VariableDeclaration","scope":102270,"src":"50660:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102266,"name":"uint256","nodeType":"ElementaryTypeName","src":"50660:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50645:29:150"},"returnParameters":{"id":102269,"nodeType":"ParameterList","parameters":[],"src":"50688:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102280,"nodeType":"FunctionDefinition","src":"50758:83:150","nodes":[],"documentation":{"id":102271,"nodeType":"StructuredDocumentation","src":"50695:58:150","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50767:8:150","parameters":{"id":102278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102274,"mutability":"mutable","name":"left","nameLocation":"50795:4:150","nodeType":"VariableDeclaration","scope":102280,"src":"50776:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":102272,"name":"address","nodeType":"ElementaryTypeName","src":"50776:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":102273,"nodeType":"ArrayTypeName","src":"50776:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":102277,"mutability":"mutable","name":"right","nameLocation":"50820:5:150","nodeType":"VariableDeclaration","scope":102280,"src":"50801:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":102275,"name":"address","nodeType":"ElementaryTypeName","src":"50801:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":102276,"nodeType":"ArrayTypeName","src":"50801:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"50775:51:150"},"returnParameters":{"id":102279,"nodeType":"ParameterList","parameters":[],"src":"50840:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102292,"nodeType":"FunctionDefinition","src":"50967:106:150","nodes":[],"documentation":{"id":102281,"nodeType":"StructuredDocumentation","src":"50847:115:150","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50976:8:150","parameters":{"id":102290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102284,"mutability":"mutable","name":"left","nameLocation":"51004:4:150","nodeType":"VariableDeclaration","scope":102292,"src":"50985:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":102282,"name":"address","nodeType":"ElementaryTypeName","src":"50985:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":102283,"nodeType":"ArrayTypeName","src":"50985:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":102287,"mutability":"mutable","name":"right","nameLocation":"51029:5:150","nodeType":"VariableDeclaration","scope":102292,"src":"51010:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":102285,"name":"address","nodeType":"ElementaryTypeName","src":"51010:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":102286,"nodeType":"ArrayTypeName","src":"51010:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":102289,"mutability":"mutable","name":"error","nameLocation":"51052:5:150","nodeType":"VariableDeclaration","scope":102292,"src":"51036:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102288,"name":"string","nodeType":"ElementaryTypeName","src":"51036:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50984:74:150"},"returnParameters":{"id":102291,"nodeType":"ParameterList","parameters":[],"src":"51072:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102302,"nodeType":"FunctionDefinition","src":"51142:83:150","nodes":[],"documentation":{"id":102293,"nodeType":"StructuredDocumentation","src":"51079:58:150","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51151:8:150","parameters":{"id":102300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102296,"mutability":"mutable","name":"left","nameLocation":"51179:4:150","nodeType":"VariableDeclaration","scope":102302,"src":"51160:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":102294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51160:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":102295,"nodeType":"ArrayTypeName","src":"51160:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":102299,"mutability":"mutable","name":"right","nameLocation":"51204:5:150","nodeType":"VariableDeclaration","scope":102302,"src":"51185:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":102297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51185:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":102298,"nodeType":"ArrayTypeName","src":"51185:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"51159:51:150"},"returnParameters":{"id":102301,"nodeType":"ParameterList","parameters":[],"src":"51224:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102314,"nodeType":"FunctionDefinition","src":"51351:106:150","nodes":[],"documentation":{"id":102303,"nodeType":"StructuredDocumentation","src":"51231:115:150","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51360:8:150","parameters":{"id":102312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102306,"mutability":"mutable","name":"left","nameLocation":"51388:4:150","nodeType":"VariableDeclaration","scope":102314,"src":"51369:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":102304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51369:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":102305,"nodeType":"ArrayTypeName","src":"51369:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":102309,"mutability":"mutable","name":"right","nameLocation":"51413:5:150","nodeType":"VariableDeclaration","scope":102314,"src":"51394:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":102307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51394:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":102308,"nodeType":"ArrayTypeName","src":"51394:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":102311,"mutability":"mutable","name":"error","nameLocation":"51436:5:150","nodeType":"VariableDeclaration","scope":102314,"src":"51420:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102310,"name":"string","nodeType":"ElementaryTypeName","src":"51420:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51368:74:150"},"returnParameters":{"id":102313,"nodeType":"ParameterList","parameters":[],"src":"51456:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102324,"nodeType":"FunctionDefinition","src":"51525:81:150","nodes":[],"documentation":{"id":102315,"nodeType":"StructuredDocumentation","src":"51463:57:150","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51534:8:150","parameters":{"id":102322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102318,"mutability":"mutable","name":"left","nameLocation":"51561:4:150","nodeType":"VariableDeclaration","scope":102324,"src":"51543:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":102316,"name":"string","nodeType":"ElementaryTypeName","src":"51543:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":102317,"nodeType":"ArrayTypeName","src":"51543:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":102321,"mutability":"mutable","name":"right","nameLocation":"51585:5:150","nodeType":"VariableDeclaration","scope":102324,"src":"51567:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":102319,"name":"string","nodeType":"ElementaryTypeName","src":"51567:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":102320,"nodeType":"ArrayTypeName","src":"51567:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"51542:49:150"},"returnParameters":{"id":102323,"nodeType":"ParameterList","parameters":[],"src":"51605:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102336,"nodeType":"FunctionDefinition","src":"51731:104:150","nodes":[],"documentation":{"id":102325,"nodeType":"StructuredDocumentation","src":"51612:114:150","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51740:8:150","parameters":{"id":102334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102328,"mutability":"mutable","name":"left","nameLocation":"51767:4:150","nodeType":"VariableDeclaration","scope":102336,"src":"51749:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":102326,"name":"string","nodeType":"ElementaryTypeName","src":"51749:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":102327,"nodeType":"ArrayTypeName","src":"51749:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":102331,"mutability":"mutable","name":"right","nameLocation":"51791:5:150","nodeType":"VariableDeclaration","scope":102336,"src":"51773:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":102329,"name":"string","nodeType":"ElementaryTypeName","src":"51773:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":102330,"nodeType":"ArrayTypeName","src":"51773:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":102333,"mutability":"mutable","name":"error","nameLocation":"51814:5:150","nodeType":"VariableDeclaration","scope":102336,"src":"51798:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102332,"name":"string","nodeType":"ElementaryTypeName","src":"51798:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51748:72:150"},"returnParameters":{"id":102335,"nodeType":"ParameterList","parameters":[],"src":"51834:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102346,"nodeType":"FunctionDefinition","src":"51902:79:150","nodes":[],"documentation":{"id":102337,"nodeType":"StructuredDocumentation","src":"51841:56:150","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51911:8:150","parameters":{"id":102344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102340,"mutability":"mutable","name":"left","nameLocation":"51937:4:150","nodeType":"VariableDeclaration","scope":102346,"src":"51920:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":102338,"name":"bytes","nodeType":"ElementaryTypeName","src":"51920:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":102339,"nodeType":"ArrayTypeName","src":"51920:7:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":102343,"mutability":"mutable","name":"right","nameLocation":"51960:5:150","nodeType":"VariableDeclaration","scope":102346,"src":"51943:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":102341,"name":"bytes","nodeType":"ElementaryTypeName","src":"51943:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":102342,"nodeType":"ArrayTypeName","src":"51943:7:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"51919:47:150"},"returnParameters":{"id":102345,"nodeType":"ParameterList","parameters":[],"src":"51980:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102358,"nodeType":"FunctionDefinition","src":"52105:102:150","nodes":[],"documentation":{"id":102347,"nodeType":"StructuredDocumentation","src":"51987:113:150","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52114:8:150","parameters":{"id":102356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102350,"mutability":"mutable","name":"left","nameLocation":"52140:4:150","nodeType":"VariableDeclaration","scope":102358,"src":"52123:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":102348,"name":"bytes","nodeType":"ElementaryTypeName","src":"52123:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":102349,"nodeType":"ArrayTypeName","src":"52123:7:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":102353,"mutability":"mutable","name":"right","nameLocation":"52163:5:150","nodeType":"VariableDeclaration","scope":102358,"src":"52146:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":102351,"name":"bytes","nodeType":"ElementaryTypeName","src":"52146:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":102352,"nodeType":"ArrayTypeName","src":"52146:7:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":102355,"mutability":"mutable","name":"error","nameLocation":"52186:5:150","nodeType":"VariableDeclaration","scope":102358,"src":"52170:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102354,"name":"string","nodeType":"ElementaryTypeName","src":"52170:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52122:70:150"},"returnParameters":{"id":102357,"nodeType":"ParameterList","parameters":[],"src":"52206:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102368,"nodeType":"FunctionDefinition","src":"52323:84:150","nodes":[],"documentation":{"id":102359,"nodeType":"StructuredDocumentation","src":"52213:105:150","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52332:8:150","parameters":{"id":102366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102361,"mutability":"mutable","name":"left","nameLocation":"52349:4:150","nodeType":"VariableDeclaration","scope":102368,"src":"52341:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102360,"name":"uint256","nodeType":"ElementaryTypeName","src":"52341:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102363,"mutability":"mutable","name":"right","nameLocation":"52363:5:150","nodeType":"VariableDeclaration","scope":102368,"src":"52355:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102362,"name":"uint256","nodeType":"ElementaryTypeName","src":"52355:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102365,"mutability":"mutable","name":"error","nameLocation":"52386:5:150","nodeType":"VariableDeclaration","scope":102368,"src":"52370:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102364,"name":"string","nodeType":"ElementaryTypeName","src":"52370:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52340:52:150"},"returnParameters":{"id":102367,"nodeType":"ParameterList","parameters":[],"src":"52406:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102376,"nodeType":"FunctionDefinition","src":"52465:59:150","nodes":[],"documentation":{"id":102369,"nodeType":"StructuredDocumentation","src":"52413:47:150","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52474:8:150","parameters":{"id":102374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102371,"mutability":"mutable","name":"left","nameLocation":"52490:4:150","nodeType":"VariableDeclaration","scope":102376,"src":"52483:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102370,"name":"int256","nodeType":"ElementaryTypeName","src":"52483:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102373,"mutability":"mutable","name":"right","nameLocation":"52503:5:150","nodeType":"VariableDeclaration","scope":102376,"src":"52496:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102372,"name":"int256","nodeType":"ElementaryTypeName","src":"52496:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"52482:27:150"},"returnParameters":{"id":102375,"nodeType":"ParameterList","parameters":[],"src":"52523:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102386,"nodeType":"FunctionDefinition","src":"52639:82:150","nodes":[],"documentation":{"id":102377,"nodeType":"StructuredDocumentation","src":"52530:104:150","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52648:8:150","parameters":{"id":102384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102379,"mutability":"mutable","name":"left","nameLocation":"52664:4:150","nodeType":"VariableDeclaration","scope":102386,"src":"52657:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102378,"name":"int256","nodeType":"ElementaryTypeName","src":"52657:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102381,"mutability":"mutable","name":"right","nameLocation":"52677:5:150","nodeType":"VariableDeclaration","scope":102386,"src":"52670:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102380,"name":"int256","nodeType":"ElementaryTypeName","src":"52670:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102383,"mutability":"mutable","name":"error","nameLocation":"52700:5:150","nodeType":"VariableDeclaration","scope":102386,"src":"52684:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102382,"name":"string","nodeType":"ElementaryTypeName","src":"52684:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52656:50:150"},"returnParameters":{"id":102385,"nodeType":"ParameterList","parameters":[],"src":"52720:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102394,"nodeType":"FunctionDefinition","src":"52780:61:150","nodes":[],"documentation":{"id":102387,"nodeType":"StructuredDocumentation","src":"52727:48:150","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52789:8:150","parameters":{"id":102392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102389,"mutability":"mutable","name":"left","nameLocation":"52806:4:150","nodeType":"VariableDeclaration","scope":102394,"src":"52798:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102388,"name":"address","nodeType":"ElementaryTypeName","src":"52798:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":102391,"mutability":"mutable","name":"right","nameLocation":"52820:5:150","nodeType":"VariableDeclaration","scope":102394,"src":"52812:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102390,"name":"address","nodeType":"ElementaryTypeName","src":"52812:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"52797:29:150"},"returnParameters":{"id":102393,"nodeType":"ParameterList","parameters":[],"src":"52840:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102404,"nodeType":"FunctionDefinition","src":"52957:84:150","nodes":[],"documentation":{"id":102395,"nodeType":"StructuredDocumentation","src":"52847:105:150","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52966:8:150","parameters":{"id":102402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102397,"mutability":"mutable","name":"left","nameLocation":"52983:4:150","nodeType":"VariableDeclaration","scope":102404,"src":"52975:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102396,"name":"address","nodeType":"ElementaryTypeName","src":"52975:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":102399,"mutability":"mutable","name":"right","nameLocation":"52997:5:150","nodeType":"VariableDeclaration","scope":102404,"src":"52989:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102398,"name":"address","nodeType":"ElementaryTypeName","src":"52989:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":102401,"mutability":"mutable","name":"error","nameLocation":"53020:5:150","nodeType":"VariableDeclaration","scope":102404,"src":"53004:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102400,"name":"string","nodeType":"ElementaryTypeName","src":"53004:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52974:52:150"},"returnParameters":{"id":102403,"nodeType":"ParameterList","parameters":[],"src":"53040:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102412,"nodeType":"FunctionDefinition","src":"53100:61:150","nodes":[],"documentation":{"id":102405,"nodeType":"StructuredDocumentation","src":"53047:48:150","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53109:8:150","parameters":{"id":102410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102407,"mutability":"mutable","name":"left","nameLocation":"53126:4:150","nodeType":"VariableDeclaration","scope":102412,"src":"53118:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":102406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53118:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":102409,"mutability":"mutable","name":"right","nameLocation":"53140:5:150","nodeType":"VariableDeclaration","scope":102412,"src":"53132:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":102408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53132:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"53117:29:150"},"returnParameters":{"id":102411,"nodeType":"ParameterList","parameters":[],"src":"53160:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102422,"nodeType":"FunctionDefinition","src":"53277:84:150","nodes":[],"documentation":{"id":102413,"nodeType":"StructuredDocumentation","src":"53167:105:150","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53286:8:150","parameters":{"id":102420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102415,"mutability":"mutable","name":"left","nameLocation":"53303:4:150","nodeType":"VariableDeclaration","scope":102422,"src":"53295:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":102414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53295:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":102417,"mutability":"mutable","name":"right","nameLocation":"53317:5:150","nodeType":"VariableDeclaration","scope":102422,"src":"53309:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":102416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53309:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":102419,"mutability":"mutable","name":"error","nameLocation":"53340:5:150","nodeType":"VariableDeclaration","scope":102422,"src":"53324:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102418,"name":"string","nodeType":"ElementaryTypeName","src":"53324:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53294:52:150"},"returnParameters":{"id":102421,"nodeType":"ParameterList","parameters":[],"src":"53360:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102428,"nodeType":"FunctionDefinition","src":"53418:51:150","nodes":[],"documentation":{"id":102423,"nodeType":"StructuredDocumentation","src":"53367:46:150","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"53427:11:150","parameters":{"id":102426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102425,"mutability":"mutable","name":"condition","nameLocation":"53444:9:150","nodeType":"VariableDeclaration","scope":102428,"src":"53439:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":102424,"name":"bool","nodeType":"ElementaryTypeName","src":"53439:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"53438:16:150"},"returnParameters":{"id":102427,"nodeType":"ParameterList","parameters":[],"src":"53468:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102436,"nodeType":"FunctionDefinition","src":"53583:74:150","nodes":[],"documentation":{"id":102429,"nodeType":"StructuredDocumentation","src":"53475:103:150","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"53592:11:150","parameters":{"id":102434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102431,"mutability":"mutable","name":"condition","nameLocation":"53609:9:150","nodeType":"VariableDeclaration","scope":102436,"src":"53604:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":102430,"name":"bool","nodeType":"ElementaryTypeName","src":"53604:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":102433,"mutability":"mutable","name":"error","nameLocation":"53636:5:150","nodeType":"VariableDeclaration","scope":102436,"src":"53620:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102432,"name":"string","nodeType":"ElementaryTypeName","src":"53620:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53603:39:150"},"returnParameters":{"id":102435,"nodeType":"ParameterList","parameters":[],"src":"53656:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102446,"nodeType":"FunctionDefinition","src":"53818:86:150","nodes":[],"documentation":{"id":102437,"nodeType":"StructuredDocumentation","src":"53663:150:150","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"53827:15:150","parameters":{"id":102444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102439,"mutability":"mutable","name":"left","nameLocation":"53851:4:150","nodeType":"VariableDeclaration","scope":102446,"src":"53843:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102438,"name":"uint256","nodeType":"ElementaryTypeName","src":"53843:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102441,"mutability":"mutable","name":"right","nameLocation":"53865:5:150","nodeType":"VariableDeclaration","scope":102446,"src":"53857:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102440,"name":"uint256","nodeType":"ElementaryTypeName","src":"53857:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102443,"mutability":"mutable","name":"decimals","nameLocation":"53880:8:150","nodeType":"VariableDeclaration","scope":102446,"src":"53872:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102442,"name":"uint256","nodeType":"ElementaryTypeName","src":"53872:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53842:47:150"},"returnParameters":{"id":102445,"nodeType":"ParameterList","parameters":[],"src":"53903:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102458,"nodeType":"FunctionDefinition","src":"54119:109:150","nodes":[],"documentation":{"id":102447,"nodeType":"StructuredDocumentation","src":"53910:204:150","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54128:15:150","parameters":{"id":102456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102449,"mutability":"mutable","name":"left","nameLocation":"54152:4:150","nodeType":"VariableDeclaration","scope":102458,"src":"54144:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102448,"name":"uint256","nodeType":"ElementaryTypeName","src":"54144:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102451,"mutability":"mutable","name":"right","nameLocation":"54166:5:150","nodeType":"VariableDeclaration","scope":102458,"src":"54158:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102450,"name":"uint256","nodeType":"ElementaryTypeName","src":"54158:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102453,"mutability":"mutable","name":"decimals","nameLocation":"54181:8:150","nodeType":"VariableDeclaration","scope":102458,"src":"54173:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102452,"name":"uint256","nodeType":"ElementaryTypeName","src":"54173:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102455,"mutability":"mutable","name":"error","nameLocation":"54207:5:150","nodeType":"VariableDeclaration","scope":102458,"src":"54191:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102454,"name":"string","nodeType":"ElementaryTypeName","src":"54191:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54143:70:150"},"returnParameters":{"id":102457,"nodeType":"ParameterList","parameters":[],"src":"54227:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102468,"nodeType":"FunctionDefinition","src":"54388:84:150","nodes":[],"documentation":{"id":102459,"nodeType":"StructuredDocumentation","src":"54234:149:150","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54397:15:150","parameters":{"id":102466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102461,"mutability":"mutable","name":"left","nameLocation":"54420:4:150","nodeType":"VariableDeclaration","scope":102468,"src":"54413:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102460,"name":"int256","nodeType":"ElementaryTypeName","src":"54413:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102463,"mutability":"mutable","name":"right","nameLocation":"54433:5:150","nodeType":"VariableDeclaration","scope":102468,"src":"54426:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102462,"name":"int256","nodeType":"ElementaryTypeName","src":"54426:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102465,"mutability":"mutable","name":"decimals","nameLocation":"54448:8:150","nodeType":"VariableDeclaration","scope":102468,"src":"54440:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102464,"name":"uint256","nodeType":"ElementaryTypeName","src":"54440:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54412:45:150"},"returnParameters":{"id":102467,"nodeType":"ParameterList","parameters":[],"src":"54471:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102480,"nodeType":"FunctionDefinition","src":"54686:107:150","nodes":[],"documentation":{"id":102469,"nodeType":"StructuredDocumentation","src":"54478:203:150","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54695:15:150","parameters":{"id":102478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102471,"mutability":"mutable","name":"left","nameLocation":"54718:4:150","nodeType":"VariableDeclaration","scope":102480,"src":"54711:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102470,"name":"int256","nodeType":"ElementaryTypeName","src":"54711:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102473,"mutability":"mutable","name":"right","nameLocation":"54731:5:150","nodeType":"VariableDeclaration","scope":102480,"src":"54724:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102472,"name":"int256","nodeType":"ElementaryTypeName","src":"54724:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102475,"mutability":"mutable","name":"decimals","nameLocation":"54746:8:150","nodeType":"VariableDeclaration","scope":102480,"src":"54738:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102474,"name":"uint256","nodeType":"ElementaryTypeName","src":"54738:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102477,"mutability":"mutable","name":"error","nameLocation":"54772:5:150","nodeType":"VariableDeclaration","scope":102480,"src":"54756:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102476,"name":"string","nodeType":"ElementaryTypeName","src":"54756:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54710:68:150"},"returnParameters":{"id":102479,"nodeType":"ParameterList","parameters":[],"src":"54792:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102488,"nodeType":"FunctionDefinition","src":"54897:61:150","nodes":[],"documentation":{"id":102481,"nodeType":"StructuredDocumentation","src":"54799:93:150","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"54906:8:150","parameters":{"id":102486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102483,"mutability":"mutable","name":"left","nameLocation":"54923:4:150","nodeType":"VariableDeclaration","scope":102488,"src":"54915:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102482,"name":"uint256","nodeType":"ElementaryTypeName","src":"54915:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102485,"mutability":"mutable","name":"right","nameLocation":"54937:5:150","nodeType":"VariableDeclaration","scope":102488,"src":"54929:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102484,"name":"uint256","nodeType":"ElementaryTypeName","src":"54929:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54914:29:150"},"returnParameters":{"id":102487,"nodeType":"ParameterList","parameters":[],"src":"54957:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102498,"nodeType":"FunctionDefinition","src":"55124:84:150","nodes":[],"documentation":{"id":102489,"nodeType":"StructuredDocumentation","src":"54964:155:150","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55133:8:150","parameters":{"id":102496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102491,"mutability":"mutable","name":"left","nameLocation":"55150:4:150","nodeType":"VariableDeclaration","scope":102498,"src":"55142:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102490,"name":"uint256","nodeType":"ElementaryTypeName","src":"55142:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102493,"mutability":"mutable","name":"right","nameLocation":"55164:5:150","nodeType":"VariableDeclaration","scope":102498,"src":"55156:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102492,"name":"uint256","nodeType":"ElementaryTypeName","src":"55156:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102495,"mutability":"mutable","name":"error","nameLocation":"55187:5:150","nodeType":"VariableDeclaration","scope":102498,"src":"55171:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102494,"name":"string","nodeType":"ElementaryTypeName","src":"55171:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55141:52:150"},"returnParameters":{"id":102497,"nodeType":"ParameterList","parameters":[],"src":"55207:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102506,"nodeType":"FunctionDefinition","src":"55311:59:150","nodes":[],"documentation":{"id":102499,"nodeType":"StructuredDocumentation","src":"55214:92:150","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55320:8:150","parameters":{"id":102504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102501,"mutability":"mutable","name":"left","nameLocation":"55336:4:150","nodeType":"VariableDeclaration","scope":102506,"src":"55329:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102500,"name":"int256","nodeType":"ElementaryTypeName","src":"55329:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102503,"mutability":"mutable","name":"right","nameLocation":"55349:5:150","nodeType":"VariableDeclaration","scope":102506,"src":"55342:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102502,"name":"int256","nodeType":"ElementaryTypeName","src":"55342:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"55328:27:150"},"returnParameters":{"id":102505,"nodeType":"ParameterList","parameters":[],"src":"55369:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102516,"nodeType":"FunctionDefinition","src":"55535:82:150","nodes":[],"documentation":{"id":102507,"nodeType":"StructuredDocumentation","src":"55376:154:150","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55544:8:150","parameters":{"id":102514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102509,"mutability":"mutable","name":"left","nameLocation":"55560:4:150","nodeType":"VariableDeclaration","scope":102516,"src":"55553:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102508,"name":"int256","nodeType":"ElementaryTypeName","src":"55553:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102511,"mutability":"mutable","name":"right","nameLocation":"55573:5:150","nodeType":"VariableDeclaration","scope":102516,"src":"55566:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102510,"name":"int256","nodeType":"ElementaryTypeName","src":"55566:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102513,"mutability":"mutable","name":"error","nameLocation":"55596:5:150","nodeType":"VariableDeclaration","scope":102516,"src":"55580:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102512,"name":"string","nodeType":"ElementaryTypeName","src":"55580:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55552:50:150"},"returnParameters":{"id":102515,"nodeType":"ParameterList","parameters":[],"src":"55616:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102526,"nodeType":"FunctionDefinition","src":"55766:86:150","nodes":[],"documentation":{"id":102517,"nodeType":"StructuredDocumentation","src":"55623:138:150","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"55775:15:150","parameters":{"id":102524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102519,"mutability":"mutable","name":"left","nameLocation":"55799:4:150","nodeType":"VariableDeclaration","scope":102526,"src":"55791:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102518,"name":"uint256","nodeType":"ElementaryTypeName","src":"55791:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102521,"mutability":"mutable","name":"right","nameLocation":"55813:5:150","nodeType":"VariableDeclaration","scope":102526,"src":"55805:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102520,"name":"uint256","nodeType":"ElementaryTypeName","src":"55805:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102523,"mutability":"mutable","name":"decimals","nameLocation":"55828:8:150","nodeType":"VariableDeclaration","scope":102526,"src":"55820:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102522,"name":"uint256","nodeType":"ElementaryTypeName","src":"55820:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55790:47:150"},"returnParameters":{"id":102525,"nodeType":"ParameterList","parameters":[],"src":"55851:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102538,"nodeType":"FunctionDefinition","src":"56055:109:150","nodes":[],"documentation":{"id":102527,"nodeType":"StructuredDocumentation","src":"55858:192:150","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56064:15:150","parameters":{"id":102536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102529,"mutability":"mutable","name":"left","nameLocation":"56088:4:150","nodeType":"VariableDeclaration","scope":102538,"src":"56080:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102528,"name":"uint256","nodeType":"ElementaryTypeName","src":"56080:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102531,"mutability":"mutable","name":"right","nameLocation":"56102:5:150","nodeType":"VariableDeclaration","scope":102538,"src":"56094:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102530,"name":"uint256","nodeType":"ElementaryTypeName","src":"56094:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102533,"mutability":"mutable","name":"decimals","nameLocation":"56117:8:150","nodeType":"VariableDeclaration","scope":102538,"src":"56109:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102532,"name":"uint256","nodeType":"ElementaryTypeName","src":"56109:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102535,"mutability":"mutable","name":"error","nameLocation":"56143:5:150","nodeType":"VariableDeclaration","scope":102538,"src":"56127:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102534,"name":"string","nodeType":"ElementaryTypeName","src":"56127:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56079:70:150"},"returnParameters":{"id":102537,"nodeType":"ParameterList","parameters":[],"src":"56163:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102548,"nodeType":"FunctionDefinition","src":"56312:84:150","nodes":[],"documentation":{"id":102539,"nodeType":"StructuredDocumentation","src":"56170:137:150","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56321:15:150","parameters":{"id":102546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102541,"mutability":"mutable","name":"left","nameLocation":"56344:4:150","nodeType":"VariableDeclaration","scope":102548,"src":"56337:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102540,"name":"int256","nodeType":"ElementaryTypeName","src":"56337:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102543,"mutability":"mutable","name":"right","nameLocation":"56357:5:150","nodeType":"VariableDeclaration","scope":102548,"src":"56350:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102542,"name":"int256","nodeType":"ElementaryTypeName","src":"56350:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102545,"mutability":"mutable","name":"decimals","nameLocation":"56372:8:150","nodeType":"VariableDeclaration","scope":102548,"src":"56364:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102544,"name":"uint256","nodeType":"ElementaryTypeName","src":"56364:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56336:45:150"},"returnParameters":{"id":102547,"nodeType":"ParameterList","parameters":[],"src":"56395:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102560,"nodeType":"FunctionDefinition","src":"56598:107:150","nodes":[],"documentation":{"id":102549,"nodeType":"StructuredDocumentation","src":"56402:191:150","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56607:15:150","parameters":{"id":102558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102551,"mutability":"mutable","name":"left","nameLocation":"56630:4:150","nodeType":"VariableDeclaration","scope":102560,"src":"56623:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102550,"name":"int256","nodeType":"ElementaryTypeName","src":"56623:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102553,"mutability":"mutable","name":"right","nameLocation":"56643:5:150","nodeType":"VariableDeclaration","scope":102560,"src":"56636:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102552,"name":"int256","nodeType":"ElementaryTypeName","src":"56636:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102555,"mutability":"mutable","name":"decimals","nameLocation":"56658:8:150","nodeType":"VariableDeclaration","scope":102560,"src":"56650:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102554,"name":"uint256","nodeType":"ElementaryTypeName","src":"56650:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102557,"mutability":"mutable","name":"error","nameLocation":"56684:5:150","nodeType":"VariableDeclaration","scope":102560,"src":"56668:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102556,"name":"string","nodeType":"ElementaryTypeName","src":"56668:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56622:68:150"},"returnParameters":{"id":102559,"nodeType":"ParameterList","parameters":[],"src":"56704:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102568,"nodeType":"FunctionDefinition","src":"56797:61:150","nodes":[],"documentation":{"id":102561,"nodeType":"StructuredDocumentation","src":"56711:81:150","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"56806:8:150","parameters":{"id":102566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102563,"mutability":"mutable","name":"left","nameLocation":"56823:4:150","nodeType":"VariableDeclaration","scope":102568,"src":"56815:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102562,"name":"uint256","nodeType":"ElementaryTypeName","src":"56815:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102565,"mutability":"mutable","name":"right","nameLocation":"56837:5:150","nodeType":"VariableDeclaration","scope":102568,"src":"56829:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102564,"name":"uint256","nodeType":"ElementaryTypeName","src":"56829:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56814:29:150"},"returnParameters":{"id":102567,"nodeType":"ParameterList","parameters":[],"src":"56857:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102578,"nodeType":"FunctionDefinition","src":"57012:84:150","nodes":[],"documentation":{"id":102569,"nodeType":"StructuredDocumentation","src":"56864:143:150","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57021:8:150","parameters":{"id":102576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102571,"mutability":"mutable","name":"left","nameLocation":"57038:4:150","nodeType":"VariableDeclaration","scope":102578,"src":"57030:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102570,"name":"uint256","nodeType":"ElementaryTypeName","src":"57030:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102573,"mutability":"mutable","name":"right","nameLocation":"57052:5:150","nodeType":"VariableDeclaration","scope":102578,"src":"57044:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102572,"name":"uint256","nodeType":"ElementaryTypeName","src":"57044:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102575,"mutability":"mutable","name":"error","nameLocation":"57075:5:150","nodeType":"VariableDeclaration","scope":102578,"src":"57059:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102574,"name":"string","nodeType":"ElementaryTypeName","src":"57059:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57029:52:150"},"returnParameters":{"id":102577,"nodeType":"ParameterList","parameters":[],"src":"57095:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102586,"nodeType":"FunctionDefinition","src":"57187:59:150","nodes":[],"documentation":{"id":102579,"nodeType":"StructuredDocumentation","src":"57102:80:150","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57196:8:150","parameters":{"id":102584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102581,"mutability":"mutable","name":"left","nameLocation":"57212:4:150","nodeType":"VariableDeclaration","scope":102586,"src":"57205:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102580,"name":"int256","nodeType":"ElementaryTypeName","src":"57205:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102583,"mutability":"mutable","name":"right","nameLocation":"57225:5:150","nodeType":"VariableDeclaration","scope":102586,"src":"57218:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102582,"name":"int256","nodeType":"ElementaryTypeName","src":"57218:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"57204:27:150"},"returnParameters":{"id":102585,"nodeType":"ParameterList","parameters":[],"src":"57245:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102596,"nodeType":"FunctionDefinition","src":"57399:82:150","nodes":[],"documentation":{"id":102587,"nodeType":"StructuredDocumentation","src":"57252:142:150","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57408:8:150","parameters":{"id":102594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102589,"mutability":"mutable","name":"left","nameLocation":"57424:4:150","nodeType":"VariableDeclaration","scope":102596,"src":"57417:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102588,"name":"int256","nodeType":"ElementaryTypeName","src":"57417:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102591,"mutability":"mutable","name":"right","nameLocation":"57437:5:150","nodeType":"VariableDeclaration","scope":102596,"src":"57430:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102590,"name":"int256","nodeType":"ElementaryTypeName","src":"57430:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102593,"mutability":"mutable","name":"error","nameLocation":"57460:5:150","nodeType":"VariableDeclaration","scope":102596,"src":"57444:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102592,"name":"string","nodeType":"ElementaryTypeName","src":"57444:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57416:50:150"},"returnParameters":{"id":102595,"nodeType":"ParameterList","parameters":[],"src":"57480:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102606,"nodeType":"FunctionDefinition","src":"57639:86:150","nodes":[],"documentation":{"id":102597,"nodeType":"StructuredDocumentation","src":"57487:147:150","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"57648:15:150","parameters":{"id":102604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102599,"mutability":"mutable","name":"left","nameLocation":"57672:4:150","nodeType":"VariableDeclaration","scope":102606,"src":"57664:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102598,"name":"uint256","nodeType":"ElementaryTypeName","src":"57664:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102601,"mutability":"mutable","name":"right","nameLocation":"57686:5:150","nodeType":"VariableDeclaration","scope":102606,"src":"57678:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102600,"name":"uint256","nodeType":"ElementaryTypeName","src":"57678:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102603,"mutability":"mutable","name":"decimals","nameLocation":"57701:8:150","nodeType":"VariableDeclaration","scope":102606,"src":"57693:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102602,"name":"uint256","nodeType":"ElementaryTypeName","src":"57693:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57663:47:150"},"returnParameters":{"id":102605,"nodeType":"ParameterList","parameters":[],"src":"57724:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102618,"nodeType":"FunctionDefinition","src":"57937:109:150","nodes":[],"documentation":{"id":102607,"nodeType":"StructuredDocumentation","src":"57731:201:150","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"57946:15:150","parameters":{"id":102616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102609,"mutability":"mutable","name":"left","nameLocation":"57970:4:150","nodeType":"VariableDeclaration","scope":102618,"src":"57962:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102608,"name":"uint256","nodeType":"ElementaryTypeName","src":"57962:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102611,"mutability":"mutable","name":"right","nameLocation":"57984:5:150","nodeType":"VariableDeclaration","scope":102618,"src":"57976:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102610,"name":"uint256","nodeType":"ElementaryTypeName","src":"57976:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102613,"mutability":"mutable","name":"decimals","nameLocation":"57999:8:150","nodeType":"VariableDeclaration","scope":102618,"src":"57991:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102612,"name":"uint256","nodeType":"ElementaryTypeName","src":"57991:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102615,"mutability":"mutable","name":"error","nameLocation":"58025:5:150","nodeType":"VariableDeclaration","scope":102618,"src":"58009:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102614,"name":"string","nodeType":"ElementaryTypeName","src":"58009:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57961:70:150"},"returnParameters":{"id":102617,"nodeType":"ParameterList","parameters":[],"src":"58045:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102628,"nodeType":"FunctionDefinition","src":"58203:84:150","nodes":[],"documentation":{"id":102619,"nodeType":"StructuredDocumentation","src":"58052:146:150","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"58212:15:150","parameters":{"id":102626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102621,"mutability":"mutable","name":"left","nameLocation":"58235:4:150","nodeType":"VariableDeclaration","scope":102628,"src":"58228:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102620,"name":"int256","nodeType":"ElementaryTypeName","src":"58228:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102623,"mutability":"mutable","name":"right","nameLocation":"58248:5:150","nodeType":"VariableDeclaration","scope":102628,"src":"58241:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102622,"name":"int256","nodeType":"ElementaryTypeName","src":"58241:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102625,"mutability":"mutable","name":"decimals","nameLocation":"58263:8:150","nodeType":"VariableDeclaration","scope":102628,"src":"58255:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102624,"name":"uint256","nodeType":"ElementaryTypeName","src":"58255:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58227:45:150"},"returnParameters":{"id":102627,"nodeType":"ParameterList","parameters":[],"src":"58286:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102640,"nodeType":"FunctionDefinition","src":"58498:107:150","nodes":[],"documentation":{"id":102629,"nodeType":"StructuredDocumentation","src":"58293:200:150","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"58507:15:150","parameters":{"id":102638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102631,"mutability":"mutable","name":"left","nameLocation":"58530:4:150","nodeType":"VariableDeclaration","scope":102640,"src":"58523:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102630,"name":"int256","nodeType":"ElementaryTypeName","src":"58523:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102633,"mutability":"mutable","name":"right","nameLocation":"58543:5:150","nodeType":"VariableDeclaration","scope":102640,"src":"58536:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102632,"name":"int256","nodeType":"ElementaryTypeName","src":"58536:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102635,"mutability":"mutable","name":"decimals","nameLocation":"58558:8:150","nodeType":"VariableDeclaration","scope":102640,"src":"58550:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102634,"name":"uint256","nodeType":"ElementaryTypeName","src":"58550:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102637,"mutability":"mutable","name":"error","nameLocation":"58584:5:150","nodeType":"VariableDeclaration","scope":102640,"src":"58568:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102636,"name":"string","nodeType":"ElementaryTypeName","src":"58568:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58522:68:150"},"returnParameters":{"id":102639,"nodeType":"ParameterList","parameters":[],"src":"58604:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102648,"nodeType":"FunctionDefinition","src":"58706:61:150","nodes":[],"documentation":{"id":102641,"nodeType":"StructuredDocumentation","src":"58611:90:150","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"58715:8:150","parameters":{"id":102646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102643,"mutability":"mutable","name":"left","nameLocation":"58732:4:150","nodeType":"VariableDeclaration","scope":102648,"src":"58724:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102642,"name":"uint256","nodeType":"ElementaryTypeName","src":"58724:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102645,"mutability":"mutable","name":"right","nameLocation":"58746:5:150","nodeType":"VariableDeclaration","scope":102648,"src":"58738:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102644,"name":"uint256","nodeType":"ElementaryTypeName","src":"58738:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58723:29:150"},"returnParameters":{"id":102647,"nodeType":"ParameterList","parameters":[],"src":"58766:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102658,"nodeType":"FunctionDefinition","src":"58930:84:150","nodes":[],"documentation":{"id":102649,"nodeType":"StructuredDocumentation","src":"58773:152:150","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"58939:8:150","parameters":{"id":102656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102651,"mutability":"mutable","name":"left","nameLocation":"58956:4:150","nodeType":"VariableDeclaration","scope":102658,"src":"58948:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102650,"name":"uint256","nodeType":"ElementaryTypeName","src":"58948:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102653,"mutability":"mutable","name":"right","nameLocation":"58970:5:150","nodeType":"VariableDeclaration","scope":102658,"src":"58962:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102652,"name":"uint256","nodeType":"ElementaryTypeName","src":"58962:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102655,"mutability":"mutable","name":"error","nameLocation":"58993:5:150","nodeType":"VariableDeclaration","scope":102658,"src":"58977:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102654,"name":"string","nodeType":"ElementaryTypeName","src":"58977:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58947:52:150"},"returnParameters":{"id":102657,"nodeType":"ParameterList","parameters":[],"src":"59013:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102666,"nodeType":"FunctionDefinition","src":"59114:59:150","nodes":[],"documentation":{"id":102659,"nodeType":"StructuredDocumentation","src":"59020:89:150","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"59123:8:150","parameters":{"id":102664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102661,"mutability":"mutable","name":"left","nameLocation":"59139:4:150","nodeType":"VariableDeclaration","scope":102666,"src":"59132:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102660,"name":"int256","nodeType":"ElementaryTypeName","src":"59132:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102663,"mutability":"mutable","name":"right","nameLocation":"59152:5:150","nodeType":"VariableDeclaration","scope":102666,"src":"59145:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102662,"name":"int256","nodeType":"ElementaryTypeName","src":"59145:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59131:27:150"},"returnParameters":{"id":102665,"nodeType":"ParameterList","parameters":[],"src":"59172:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102676,"nodeType":"FunctionDefinition","src":"59335:82:150","nodes":[],"documentation":{"id":102667,"nodeType":"StructuredDocumentation","src":"59179:151:150","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"59344:8:150","parameters":{"id":102674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102669,"mutability":"mutable","name":"left","nameLocation":"59360:4:150","nodeType":"VariableDeclaration","scope":102676,"src":"59353:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102668,"name":"int256","nodeType":"ElementaryTypeName","src":"59353:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102671,"mutability":"mutable","name":"right","nameLocation":"59373:5:150","nodeType":"VariableDeclaration","scope":102676,"src":"59366:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102670,"name":"int256","nodeType":"ElementaryTypeName","src":"59366:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102673,"mutability":"mutable","name":"error","nameLocation":"59396:5:150","nodeType":"VariableDeclaration","scope":102676,"src":"59380:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102672,"name":"string","nodeType":"ElementaryTypeName","src":"59380:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59352:50:150"},"returnParameters":{"id":102675,"nodeType":"ParameterList","parameters":[],"src":"59416:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102686,"nodeType":"FunctionDefinition","src":"59563:86:150","nodes":[],"documentation":{"id":102677,"nodeType":"StructuredDocumentation","src":"59423:135:150","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"59572:15:150","parameters":{"id":102684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102679,"mutability":"mutable","name":"left","nameLocation":"59596:4:150","nodeType":"VariableDeclaration","scope":102686,"src":"59588:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102678,"name":"uint256","nodeType":"ElementaryTypeName","src":"59588:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102681,"mutability":"mutable","name":"right","nameLocation":"59610:5:150","nodeType":"VariableDeclaration","scope":102686,"src":"59602:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102680,"name":"uint256","nodeType":"ElementaryTypeName","src":"59602:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102683,"mutability":"mutable","name":"decimals","nameLocation":"59625:8:150","nodeType":"VariableDeclaration","scope":102686,"src":"59617:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102682,"name":"uint256","nodeType":"ElementaryTypeName","src":"59617:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59587:47:150"},"returnParameters":{"id":102685,"nodeType":"ParameterList","parameters":[],"src":"59648:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102698,"nodeType":"FunctionDefinition","src":"59849:109:150","nodes":[],"documentation":{"id":102687,"nodeType":"StructuredDocumentation","src":"59655:189:150","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"59858:15:150","parameters":{"id":102696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102689,"mutability":"mutable","name":"left","nameLocation":"59882:4:150","nodeType":"VariableDeclaration","scope":102698,"src":"59874:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102688,"name":"uint256","nodeType":"ElementaryTypeName","src":"59874:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102691,"mutability":"mutable","name":"right","nameLocation":"59896:5:150","nodeType":"VariableDeclaration","scope":102698,"src":"59888:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102690,"name":"uint256","nodeType":"ElementaryTypeName","src":"59888:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102693,"mutability":"mutable","name":"decimals","nameLocation":"59911:8:150","nodeType":"VariableDeclaration","scope":102698,"src":"59903:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102692,"name":"uint256","nodeType":"ElementaryTypeName","src":"59903:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102695,"mutability":"mutable","name":"error","nameLocation":"59937:5:150","nodeType":"VariableDeclaration","scope":102698,"src":"59921:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102694,"name":"string","nodeType":"ElementaryTypeName","src":"59921:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59873:70:150"},"returnParameters":{"id":102697,"nodeType":"ParameterList","parameters":[],"src":"59957:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102708,"nodeType":"FunctionDefinition","src":"60103:84:150","nodes":[],"documentation":{"id":102699,"nodeType":"StructuredDocumentation","src":"59964:134:150","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"60112:15:150","parameters":{"id":102706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102701,"mutability":"mutable","name":"left","nameLocation":"60135:4:150","nodeType":"VariableDeclaration","scope":102708,"src":"60128:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102700,"name":"int256","nodeType":"ElementaryTypeName","src":"60128:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102703,"mutability":"mutable","name":"right","nameLocation":"60148:5:150","nodeType":"VariableDeclaration","scope":102708,"src":"60141:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102702,"name":"int256","nodeType":"ElementaryTypeName","src":"60141:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102705,"mutability":"mutable","name":"decimals","nameLocation":"60163:8:150","nodeType":"VariableDeclaration","scope":102708,"src":"60155:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102704,"name":"uint256","nodeType":"ElementaryTypeName","src":"60155:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60127:45:150"},"returnParameters":{"id":102707,"nodeType":"ParameterList","parameters":[],"src":"60186:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102720,"nodeType":"FunctionDefinition","src":"60386:107:150","nodes":[],"documentation":{"id":102709,"nodeType":"StructuredDocumentation","src":"60193:188:150","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"60395:15:150","parameters":{"id":102718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102711,"mutability":"mutable","name":"left","nameLocation":"60418:4:150","nodeType":"VariableDeclaration","scope":102720,"src":"60411:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102710,"name":"int256","nodeType":"ElementaryTypeName","src":"60411:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102713,"mutability":"mutable","name":"right","nameLocation":"60431:5:150","nodeType":"VariableDeclaration","scope":102720,"src":"60424:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102712,"name":"int256","nodeType":"ElementaryTypeName","src":"60424:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102715,"mutability":"mutable","name":"decimals","nameLocation":"60446:8:150","nodeType":"VariableDeclaration","scope":102720,"src":"60438:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102714,"name":"uint256","nodeType":"ElementaryTypeName","src":"60438:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102717,"mutability":"mutable","name":"error","nameLocation":"60472:5:150","nodeType":"VariableDeclaration","scope":102720,"src":"60456:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102716,"name":"string","nodeType":"ElementaryTypeName","src":"60456:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60410:68:150"},"returnParameters":{"id":102719,"nodeType":"ParameterList","parameters":[],"src":"60492:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102728,"nodeType":"FunctionDefinition","src":"60582:61:150","nodes":[],"documentation":{"id":102721,"nodeType":"StructuredDocumentation","src":"60499:78:150","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"60591:8:150","parameters":{"id":102726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102723,"mutability":"mutable","name":"left","nameLocation":"60608:4:150","nodeType":"VariableDeclaration","scope":102728,"src":"60600:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102722,"name":"uint256","nodeType":"ElementaryTypeName","src":"60600:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102725,"mutability":"mutable","name":"right","nameLocation":"60622:5:150","nodeType":"VariableDeclaration","scope":102728,"src":"60614:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102724,"name":"uint256","nodeType":"ElementaryTypeName","src":"60614:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60599:29:150"},"returnParameters":{"id":102727,"nodeType":"ParameterList","parameters":[],"src":"60642:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102738,"nodeType":"FunctionDefinition","src":"60794:84:150","nodes":[],"documentation":{"id":102729,"nodeType":"StructuredDocumentation","src":"60649:140:150","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"60803:8:150","parameters":{"id":102736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102731,"mutability":"mutable","name":"left","nameLocation":"60820:4:150","nodeType":"VariableDeclaration","scope":102738,"src":"60812:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102730,"name":"uint256","nodeType":"ElementaryTypeName","src":"60812:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102733,"mutability":"mutable","name":"right","nameLocation":"60834:5:150","nodeType":"VariableDeclaration","scope":102738,"src":"60826:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102732,"name":"uint256","nodeType":"ElementaryTypeName","src":"60826:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102735,"mutability":"mutable","name":"error","nameLocation":"60857:5:150","nodeType":"VariableDeclaration","scope":102738,"src":"60841:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102734,"name":"string","nodeType":"ElementaryTypeName","src":"60841:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60811:52:150"},"returnParameters":{"id":102737,"nodeType":"ParameterList","parameters":[],"src":"60877:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102746,"nodeType":"FunctionDefinition","src":"60966:59:150","nodes":[],"documentation":{"id":102739,"nodeType":"StructuredDocumentation","src":"60884:77:150","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"60975:8:150","parameters":{"id":102744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102741,"mutability":"mutable","name":"left","nameLocation":"60991:4:150","nodeType":"VariableDeclaration","scope":102746,"src":"60984:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102740,"name":"int256","nodeType":"ElementaryTypeName","src":"60984:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102743,"mutability":"mutable","name":"right","nameLocation":"61004:5:150","nodeType":"VariableDeclaration","scope":102746,"src":"60997:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102742,"name":"int256","nodeType":"ElementaryTypeName","src":"60997:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"60983:27:150"},"returnParameters":{"id":102745,"nodeType":"ParameterList","parameters":[],"src":"61024:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102756,"nodeType":"FunctionDefinition","src":"61175:82:150","nodes":[],"documentation":{"id":102747,"nodeType":"StructuredDocumentation","src":"61031:139:150","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"61184:8:150","parameters":{"id":102754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102749,"mutability":"mutable","name":"left","nameLocation":"61200:4:150","nodeType":"VariableDeclaration","scope":102756,"src":"61193:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102748,"name":"int256","nodeType":"ElementaryTypeName","src":"61193:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102751,"mutability":"mutable","name":"right","nameLocation":"61213:5:150","nodeType":"VariableDeclaration","scope":102756,"src":"61206:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102750,"name":"int256","nodeType":"ElementaryTypeName","src":"61206:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102753,"mutability":"mutable","name":"error","nameLocation":"61236:5:150","nodeType":"VariableDeclaration","scope":102756,"src":"61220:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102752,"name":"string","nodeType":"ElementaryTypeName","src":"61220:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61192:50:150"},"returnParameters":{"id":102755,"nodeType":"ParameterList","parameters":[],"src":"61256:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102766,"nodeType":"FunctionDefinition","src":"61370:89:150","nodes":[],"documentation":{"id":102757,"nodeType":"StructuredDocumentation","src":"61263:102:150","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"61379:18:150","parameters":{"id":102764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102759,"mutability":"mutable","name":"left","nameLocation":"61406:4:150","nodeType":"VariableDeclaration","scope":102766,"src":"61398:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102758,"name":"uint256","nodeType":"ElementaryTypeName","src":"61398:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102761,"mutability":"mutable","name":"right","nameLocation":"61420:5:150","nodeType":"VariableDeclaration","scope":102766,"src":"61412:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102760,"name":"uint256","nodeType":"ElementaryTypeName","src":"61412:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102763,"mutability":"mutable","name":"decimals","nameLocation":"61435:8:150","nodeType":"VariableDeclaration","scope":102766,"src":"61427:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102762,"name":"uint256","nodeType":"ElementaryTypeName","src":"61427:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61397:47:150"},"returnParameters":{"id":102765,"nodeType":"ParameterList","parameters":[],"src":"61458:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102778,"nodeType":"FunctionDefinition","src":"61634:112:150","nodes":[],"documentation":{"id":102767,"nodeType":"StructuredDocumentation","src":"61465:164:150","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"61643:18:150","parameters":{"id":102776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102769,"mutability":"mutable","name":"left","nameLocation":"61670:4:150","nodeType":"VariableDeclaration","scope":102778,"src":"61662:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102768,"name":"uint256","nodeType":"ElementaryTypeName","src":"61662:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102771,"mutability":"mutable","name":"right","nameLocation":"61684:5:150","nodeType":"VariableDeclaration","scope":102778,"src":"61676:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102770,"name":"uint256","nodeType":"ElementaryTypeName","src":"61676:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102773,"mutability":"mutable","name":"decimals","nameLocation":"61699:8:150","nodeType":"VariableDeclaration","scope":102778,"src":"61691:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102772,"name":"uint256","nodeType":"ElementaryTypeName","src":"61691:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102775,"mutability":"mutable","name":"error","nameLocation":"61725:5:150","nodeType":"VariableDeclaration","scope":102778,"src":"61709:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102774,"name":"string","nodeType":"ElementaryTypeName","src":"61709:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61661:70:150"},"returnParameters":{"id":102777,"nodeType":"ParameterList","parameters":[],"src":"61745:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102788,"nodeType":"FunctionDefinition","src":"61858:87:150","nodes":[],"documentation":{"id":102779,"nodeType":"StructuredDocumentation","src":"61752:101:150","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"61867:18:150","parameters":{"id":102786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102781,"mutability":"mutable","name":"left","nameLocation":"61893:4:150","nodeType":"VariableDeclaration","scope":102788,"src":"61886:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102780,"name":"int256","nodeType":"ElementaryTypeName","src":"61886:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102783,"mutability":"mutable","name":"right","nameLocation":"61906:5:150","nodeType":"VariableDeclaration","scope":102788,"src":"61899:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102782,"name":"int256","nodeType":"ElementaryTypeName","src":"61899:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102785,"mutability":"mutable","name":"decimals","nameLocation":"61921:8:150","nodeType":"VariableDeclaration","scope":102788,"src":"61913:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102784,"name":"uint256","nodeType":"ElementaryTypeName","src":"61913:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61885:45:150"},"returnParameters":{"id":102787,"nodeType":"ParameterList","parameters":[],"src":"61944:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102800,"nodeType":"FunctionDefinition","src":"62119:110:150","nodes":[],"documentation":{"id":102789,"nodeType":"StructuredDocumentation","src":"61951:163:150","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"62128:18:150","parameters":{"id":102798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102791,"mutability":"mutable","name":"left","nameLocation":"62154:4:150","nodeType":"VariableDeclaration","scope":102800,"src":"62147:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102790,"name":"int256","nodeType":"ElementaryTypeName","src":"62147:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102793,"mutability":"mutable","name":"right","nameLocation":"62167:5:150","nodeType":"VariableDeclaration","scope":102800,"src":"62160:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":102792,"name":"int256","nodeType":"ElementaryTypeName","src":"62160:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102795,"mutability":"mutable","name":"decimals","nameLocation":"62182:8:150","nodeType":"VariableDeclaration","scope":102800,"src":"62174:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102794,"name":"uint256","nodeType":"ElementaryTypeName","src":"62174:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102797,"mutability":"mutable","name":"error","nameLocation":"62208:5:150","nodeType":"VariableDeclaration","scope":102800,"src":"62192:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102796,"name":"string","nodeType":"ElementaryTypeName","src":"62192:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62146:68:150"},"returnParameters":{"id":102799,"nodeType":"ParameterList","parameters":[],"src":"62228:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102808,"nodeType":"FunctionDefinition","src":"62289:58:150","nodes":[],"documentation":{"id":102801,"nodeType":"StructuredDocumentation","src":"62235:49:150","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62298:11:150","parameters":{"id":102806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102803,"mutability":"mutable","name":"left","nameLocation":"62315:4:150","nodeType":"VariableDeclaration","scope":102808,"src":"62310:9:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":102802,"name":"bool","nodeType":"ElementaryTypeName","src":"62310:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":102805,"mutability":"mutable","name":"right","nameLocation":"62326:5:150","nodeType":"VariableDeclaration","scope":102808,"src":"62321:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":102804,"name":"bool","nodeType":"ElementaryTypeName","src":"62321:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"62309:23:150"},"returnParameters":{"id":102807,"nodeType":"ParameterList","parameters":[],"src":"62346:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102818,"nodeType":"FunctionDefinition","src":"62464:81:150","nodes":[],"documentation":{"id":102809,"nodeType":"StructuredDocumentation","src":"62353:106:150","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62473:11:150","parameters":{"id":102816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102811,"mutability":"mutable","name":"left","nameLocation":"62490:4:150","nodeType":"VariableDeclaration","scope":102818,"src":"62485:9:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":102810,"name":"bool","nodeType":"ElementaryTypeName","src":"62485:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":102813,"mutability":"mutable","name":"right","nameLocation":"62501:5:150","nodeType":"VariableDeclaration","scope":102818,"src":"62496:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":102812,"name":"bool","nodeType":"ElementaryTypeName","src":"62496:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":102815,"mutability":"mutable","name":"error","nameLocation":"62524:5:150","nodeType":"VariableDeclaration","scope":102818,"src":"62508:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102814,"name":"string","nodeType":"ElementaryTypeName","src":"62508:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62484:46:150"},"returnParameters":{"id":102817,"nodeType":"ParameterList","parameters":[],"src":"62544:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102826,"nodeType":"FunctionDefinition","src":"62607:80:150","nodes":[],"documentation":{"id":102819,"nodeType":"StructuredDocumentation","src":"62551:51:150","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62616:11:150","parameters":{"id":102824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102821,"mutability":"mutable","name":"left","nameLocation":"62644:4:150","nodeType":"VariableDeclaration","scope":102826,"src":"62628:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102820,"name":"string","nodeType":"ElementaryTypeName","src":"62628:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":102823,"mutability":"mutable","name":"right","nameLocation":"62666:5:150","nodeType":"VariableDeclaration","scope":102826,"src":"62650:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102822,"name":"string","nodeType":"ElementaryTypeName","src":"62650:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62627:45:150"},"returnParameters":{"id":102825,"nodeType":"ParameterList","parameters":[],"src":"62686:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102836,"nodeType":"FunctionDefinition","src":"62806:103:150","nodes":[],"documentation":{"id":102827,"nodeType":"StructuredDocumentation","src":"62693:108:150","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62815:11:150","parameters":{"id":102834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102829,"mutability":"mutable","name":"left","nameLocation":"62843:4:150","nodeType":"VariableDeclaration","scope":102836,"src":"62827:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102828,"name":"string","nodeType":"ElementaryTypeName","src":"62827:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":102831,"mutability":"mutable","name":"right","nameLocation":"62865:5:150","nodeType":"VariableDeclaration","scope":102836,"src":"62849:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102830,"name":"string","nodeType":"ElementaryTypeName","src":"62849:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":102833,"mutability":"mutable","name":"error","nameLocation":"62888:5:150","nodeType":"VariableDeclaration","scope":102836,"src":"62872:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102832,"name":"string","nodeType":"ElementaryTypeName","src":"62872:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62826:68:150"},"returnParameters":{"id":102835,"nodeType":"ParameterList","parameters":[],"src":"62908:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102844,"nodeType":"FunctionDefinition","src":"62970:78:150","nodes":[],"documentation":{"id":102837,"nodeType":"StructuredDocumentation","src":"62915:50:150","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62979:11:150","parameters":{"id":102842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102839,"mutability":"mutable","name":"left","nameLocation":"63006:4:150","nodeType":"VariableDeclaration","scope":102844,"src":"62991:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":102838,"name":"bytes","nodeType":"ElementaryTypeName","src":"62991:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":102841,"mutability":"mutable","name":"right","nameLocation":"63027:5:150","nodeType":"VariableDeclaration","scope":102844,"src":"63012:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":102840,"name":"bytes","nodeType":"ElementaryTypeName","src":"63012:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"62990:43:150"},"returnParameters":{"id":102843,"nodeType":"ParameterList","parameters":[],"src":"63047:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102854,"nodeType":"FunctionDefinition","src":"63166:101:150","nodes":[],"documentation":{"id":102845,"nodeType":"StructuredDocumentation","src":"63054:107:150","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63175:11:150","parameters":{"id":102852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102847,"mutability":"mutable","name":"left","nameLocation":"63202:4:150","nodeType":"VariableDeclaration","scope":102854,"src":"63187:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":102846,"name":"bytes","nodeType":"ElementaryTypeName","src":"63187:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":102849,"mutability":"mutable","name":"right","nameLocation":"63223:5:150","nodeType":"VariableDeclaration","scope":102854,"src":"63208:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":102848,"name":"bytes","nodeType":"ElementaryTypeName","src":"63208:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":102851,"mutability":"mutable","name":"error","nameLocation":"63246:5:150","nodeType":"VariableDeclaration","scope":102854,"src":"63230:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102850,"name":"string","nodeType":"ElementaryTypeName","src":"63230:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63186:66:150"},"returnParameters":{"id":102853,"nodeType":"ParameterList","parameters":[],"src":"63266:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102864,"nodeType":"FunctionDefinition","src":"63337:80:150","nodes":[],"documentation":{"id":102855,"nodeType":"StructuredDocumentation","src":"63273:59:150","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63346:11:150","parameters":{"id":102862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102858,"mutability":"mutable","name":"left","nameLocation":"63374:4:150","nodeType":"VariableDeclaration","scope":102864,"src":"63358:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":102856,"name":"bool","nodeType":"ElementaryTypeName","src":"63358:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":102857,"nodeType":"ArrayTypeName","src":"63358:6:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":102861,"mutability":"mutable","name":"right","nameLocation":"63396:5:150","nodeType":"VariableDeclaration","scope":102864,"src":"63380:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":102859,"name":"bool","nodeType":"ElementaryTypeName","src":"63380:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":102860,"nodeType":"ArrayTypeName","src":"63380:6:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"63357:45:150"},"returnParameters":{"id":102863,"nodeType":"ParameterList","parameters":[],"src":"63416:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102876,"nodeType":"FunctionDefinition","src":"63544:103:150","nodes":[],"documentation":{"id":102865,"nodeType":"StructuredDocumentation","src":"63423:116:150","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63553:11:150","parameters":{"id":102874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102868,"mutability":"mutable","name":"left","nameLocation":"63581:4:150","nodeType":"VariableDeclaration","scope":102876,"src":"63565:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":102866,"name":"bool","nodeType":"ElementaryTypeName","src":"63565:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":102867,"nodeType":"ArrayTypeName","src":"63565:6:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":102871,"mutability":"mutable","name":"right","nameLocation":"63603:5:150","nodeType":"VariableDeclaration","scope":102876,"src":"63587:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":102869,"name":"bool","nodeType":"ElementaryTypeName","src":"63587:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":102870,"nodeType":"ArrayTypeName","src":"63587:6:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":102873,"mutability":"mutable","name":"error","nameLocation":"63626:5:150","nodeType":"VariableDeclaration","scope":102876,"src":"63610:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102872,"name":"string","nodeType":"ElementaryTypeName","src":"63610:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63564:68:150"},"returnParameters":{"id":102875,"nodeType":"ParameterList","parameters":[],"src":"63646:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102886,"nodeType":"FunctionDefinition","src":"63720:86:150","nodes":[],"documentation":{"id":102877,"nodeType":"StructuredDocumentation","src":"63653:62:150","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63729:11:150","parameters":{"id":102884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102880,"mutability":"mutable","name":"left","nameLocation":"63760:4:150","nodeType":"VariableDeclaration","scope":102886,"src":"63741:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":102878,"name":"uint256","nodeType":"ElementaryTypeName","src":"63741:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":102879,"nodeType":"ArrayTypeName","src":"63741:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":102883,"mutability":"mutable","name":"right","nameLocation":"63785:5:150","nodeType":"VariableDeclaration","scope":102886,"src":"63766:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":102881,"name":"uint256","nodeType":"ElementaryTypeName","src":"63766:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":102882,"nodeType":"ArrayTypeName","src":"63766:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"63740:51:150"},"returnParameters":{"id":102885,"nodeType":"ParameterList","parameters":[],"src":"63805:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102898,"nodeType":"FunctionDefinition","src":"63936:109:150","nodes":[],"documentation":{"id":102887,"nodeType":"StructuredDocumentation","src":"63812:119:150","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63945:11:150","parameters":{"id":102896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102890,"mutability":"mutable","name":"left","nameLocation":"63976:4:150","nodeType":"VariableDeclaration","scope":102898,"src":"63957:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":102888,"name":"uint256","nodeType":"ElementaryTypeName","src":"63957:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":102889,"nodeType":"ArrayTypeName","src":"63957:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":102893,"mutability":"mutable","name":"right","nameLocation":"64001:5:150","nodeType":"VariableDeclaration","scope":102898,"src":"63982:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":102891,"name":"uint256","nodeType":"ElementaryTypeName","src":"63982:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":102892,"nodeType":"ArrayTypeName","src":"63982:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":102895,"mutability":"mutable","name":"error","nameLocation":"64024:5:150","nodeType":"VariableDeclaration","scope":102898,"src":"64008:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102894,"name":"string","nodeType":"ElementaryTypeName","src":"64008:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63956:74:150"},"returnParameters":{"id":102897,"nodeType":"ParameterList","parameters":[],"src":"64044:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102908,"nodeType":"FunctionDefinition","src":"64117:84:150","nodes":[],"documentation":{"id":102899,"nodeType":"StructuredDocumentation","src":"64051:61:150","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64126:11:150","parameters":{"id":102906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102902,"mutability":"mutable","name":"left","nameLocation":"64156:4:150","nodeType":"VariableDeclaration","scope":102908,"src":"64138:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":102900,"name":"int256","nodeType":"ElementaryTypeName","src":"64138:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":102901,"nodeType":"ArrayTypeName","src":"64138:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":102905,"mutability":"mutable","name":"right","nameLocation":"64180:5:150","nodeType":"VariableDeclaration","scope":102908,"src":"64162:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":102903,"name":"int256","nodeType":"ElementaryTypeName","src":"64162:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":102904,"nodeType":"ArrayTypeName","src":"64162:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"64137:49:150"},"returnParameters":{"id":102907,"nodeType":"ParameterList","parameters":[],"src":"64200:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102920,"nodeType":"FunctionDefinition","src":"64330:107:150","nodes":[],"documentation":{"id":102909,"nodeType":"StructuredDocumentation","src":"64207:118:150","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64339:11:150","parameters":{"id":102918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102912,"mutability":"mutable","name":"left","nameLocation":"64369:4:150","nodeType":"VariableDeclaration","scope":102920,"src":"64351:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":102910,"name":"int256","nodeType":"ElementaryTypeName","src":"64351:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":102911,"nodeType":"ArrayTypeName","src":"64351:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":102915,"mutability":"mutable","name":"right","nameLocation":"64393:5:150","nodeType":"VariableDeclaration","scope":102920,"src":"64375:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":102913,"name":"int256","nodeType":"ElementaryTypeName","src":"64375:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":102914,"nodeType":"ArrayTypeName","src":"64375:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":102917,"mutability":"mutable","name":"error","nameLocation":"64416:5:150","nodeType":"VariableDeclaration","scope":102920,"src":"64400:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102916,"name":"string","nodeType":"ElementaryTypeName","src":"64400:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64350:72:150"},"returnParameters":{"id":102919,"nodeType":"ParameterList","parameters":[],"src":"64436:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102928,"nodeType":"FunctionDefinition","src":"64500:64:150","nodes":[],"documentation":{"id":102921,"nodeType":"StructuredDocumentation","src":"64443:52:150","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64509:11:150","parameters":{"id":102926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102923,"mutability":"mutable","name":"left","nameLocation":"64529:4:150","nodeType":"VariableDeclaration","scope":102928,"src":"64521:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102922,"name":"uint256","nodeType":"ElementaryTypeName","src":"64521:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102925,"mutability":"mutable","name":"right","nameLocation":"64543:5:150","nodeType":"VariableDeclaration","scope":102928,"src":"64535:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102924,"name":"uint256","nodeType":"ElementaryTypeName","src":"64535:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64520:29:150"},"returnParameters":{"id":102927,"nodeType":"ParameterList","parameters":[],"src":"64563:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102938,"nodeType":"FunctionDefinition","src":"64637:86:150","nodes":[],"documentation":{"id":102929,"nodeType":"StructuredDocumentation","src":"64570:62:150","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64646:11:150","parameters":{"id":102936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102932,"mutability":"mutable","name":"left","nameLocation":"64677:4:150","nodeType":"VariableDeclaration","scope":102938,"src":"64658:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":102930,"name":"address","nodeType":"ElementaryTypeName","src":"64658:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":102931,"nodeType":"ArrayTypeName","src":"64658:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":102935,"mutability":"mutable","name":"right","nameLocation":"64702:5:150","nodeType":"VariableDeclaration","scope":102938,"src":"64683:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":102933,"name":"address","nodeType":"ElementaryTypeName","src":"64683:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":102934,"nodeType":"ArrayTypeName","src":"64683:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"64657:51:150"},"returnParameters":{"id":102937,"nodeType":"ParameterList","parameters":[],"src":"64722:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102950,"nodeType":"FunctionDefinition","src":"64853:109:150","nodes":[],"documentation":{"id":102939,"nodeType":"StructuredDocumentation","src":"64729:119:150","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64862:11:150","parameters":{"id":102948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102942,"mutability":"mutable","name":"left","nameLocation":"64893:4:150","nodeType":"VariableDeclaration","scope":102950,"src":"64874:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":102940,"name":"address","nodeType":"ElementaryTypeName","src":"64874:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":102941,"nodeType":"ArrayTypeName","src":"64874:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":102945,"mutability":"mutable","name":"right","nameLocation":"64918:5:150","nodeType":"VariableDeclaration","scope":102950,"src":"64899:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":102943,"name":"address","nodeType":"ElementaryTypeName","src":"64899:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":102944,"nodeType":"ArrayTypeName","src":"64899:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":102947,"mutability":"mutable","name":"error","nameLocation":"64941:5:150","nodeType":"VariableDeclaration","scope":102950,"src":"64925:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102946,"name":"string","nodeType":"ElementaryTypeName","src":"64925:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64873:74:150"},"returnParameters":{"id":102949,"nodeType":"ParameterList","parameters":[],"src":"64961:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102960,"nodeType":"FunctionDefinition","src":"65035:86:150","nodes":[],"documentation":{"id":102951,"nodeType":"StructuredDocumentation","src":"64968:62:150","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65044:11:150","parameters":{"id":102958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102954,"mutability":"mutable","name":"left","nameLocation":"65075:4:150","nodeType":"VariableDeclaration","scope":102960,"src":"65056:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":102952,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65056:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":102953,"nodeType":"ArrayTypeName","src":"65056:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":102957,"mutability":"mutable","name":"right","nameLocation":"65100:5:150","nodeType":"VariableDeclaration","scope":102960,"src":"65081:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":102955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65081:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":102956,"nodeType":"ArrayTypeName","src":"65081:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"65055:51:150"},"returnParameters":{"id":102959,"nodeType":"ParameterList","parameters":[],"src":"65120:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102972,"nodeType":"FunctionDefinition","src":"65251:109:150","nodes":[],"documentation":{"id":102961,"nodeType":"StructuredDocumentation","src":"65127:119:150","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65260:11:150","parameters":{"id":102970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102964,"mutability":"mutable","name":"left","nameLocation":"65291:4:150","nodeType":"VariableDeclaration","scope":102972,"src":"65272:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":102962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65272:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":102963,"nodeType":"ArrayTypeName","src":"65272:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":102967,"mutability":"mutable","name":"right","nameLocation":"65316:5:150","nodeType":"VariableDeclaration","scope":102972,"src":"65297:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":102965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65297:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":102966,"nodeType":"ArrayTypeName","src":"65297:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":102969,"mutability":"mutable","name":"error","nameLocation":"65339:5:150","nodeType":"VariableDeclaration","scope":102972,"src":"65323:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102968,"name":"string","nodeType":"ElementaryTypeName","src":"65323:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65271:74:150"},"returnParameters":{"id":102971,"nodeType":"ParameterList","parameters":[],"src":"65359:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102982,"nodeType":"FunctionDefinition","src":"65432:84:150","nodes":[],"documentation":{"id":102973,"nodeType":"StructuredDocumentation","src":"65366:61:150","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65441:11:150","parameters":{"id":102980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102976,"mutability":"mutable","name":"left","nameLocation":"65471:4:150","nodeType":"VariableDeclaration","scope":102982,"src":"65453:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":102974,"name":"string","nodeType":"ElementaryTypeName","src":"65453:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":102975,"nodeType":"ArrayTypeName","src":"65453:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":102979,"mutability":"mutable","name":"right","nameLocation":"65495:5:150","nodeType":"VariableDeclaration","scope":102982,"src":"65477:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":102977,"name":"string","nodeType":"ElementaryTypeName","src":"65477:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":102978,"nodeType":"ArrayTypeName","src":"65477:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"65452:49:150"},"returnParameters":{"id":102981,"nodeType":"ParameterList","parameters":[],"src":"65515:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":102994,"nodeType":"FunctionDefinition","src":"65645:107:150","nodes":[],"documentation":{"id":102983,"nodeType":"StructuredDocumentation","src":"65522:118:150","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65654:11:150","parameters":{"id":102992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102986,"mutability":"mutable","name":"left","nameLocation":"65684:4:150","nodeType":"VariableDeclaration","scope":102994,"src":"65666:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":102984,"name":"string","nodeType":"ElementaryTypeName","src":"65666:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":102985,"nodeType":"ArrayTypeName","src":"65666:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":102989,"mutability":"mutable","name":"right","nameLocation":"65708:5:150","nodeType":"VariableDeclaration","scope":102994,"src":"65690:23:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":102987,"name":"string","nodeType":"ElementaryTypeName","src":"65690:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":102988,"nodeType":"ArrayTypeName","src":"65690:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":102991,"mutability":"mutable","name":"error","nameLocation":"65731:5:150","nodeType":"VariableDeclaration","scope":102994,"src":"65715:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":102990,"name":"string","nodeType":"ElementaryTypeName","src":"65715:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65665:72:150"},"returnParameters":{"id":102993,"nodeType":"ParameterList","parameters":[],"src":"65751:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103004,"nodeType":"FunctionDefinition","src":"65823:82:150","nodes":[],"documentation":{"id":102995,"nodeType":"StructuredDocumentation","src":"65758:60:150","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65832:11:150","parameters":{"id":103002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102998,"mutability":"mutable","name":"left","nameLocation":"65861:4:150","nodeType":"VariableDeclaration","scope":103004,"src":"65844:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":102996,"name":"bytes","nodeType":"ElementaryTypeName","src":"65844:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":102997,"nodeType":"ArrayTypeName","src":"65844:7:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":103001,"mutability":"mutable","name":"right","nameLocation":"65884:5:150","nodeType":"VariableDeclaration","scope":103004,"src":"65867:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":102999,"name":"bytes","nodeType":"ElementaryTypeName","src":"65867:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":103000,"nodeType":"ArrayTypeName","src":"65867:7:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"65843:47:150"},"returnParameters":{"id":103003,"nodeType":"ParameterList","parameters":[],"src":"65904:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103016,"nodeType":"FunctionDefinition","src":"66033:105:150","nodes":[],"documentation":{"id":103005,"nodeType":"StructuredDocumentation","src":"65911:117:150","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66042:11:150","parameters":{"id":103014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103008,"mutability":"mutable","name":"left","nameLocation":"66071:4:150","nodeType":"VariableDeclaration","scope":103016,"src":"66054:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":103006,"name":"bytes","nodeType":"ElementaryTypeName","src":"66054:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":103007,"nodeType":"ArrayTypeName","src":"66054:7:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":103011,"mutability":"mutable","name":"right","nameLocation":"66094:5:150","nodeType":"VariableDeclaration","scope":103016,"src":"66077:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":103009,"name":"bytes","nodeType":"ElementaryTypeName","src":"66077:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":103010,"nodeType":"ArrayTypeName","src":"66077:7:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":103013,"mutability":"mutable","name":"error","nameLocation":"66117:5:150","nodeType":"VariableDeclaration","scope":103016,"src":"66101:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103012,"name":"string","nodeType":"ElementaryTypeName","src":"66101:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66053:70:150"},"returnParameters":{"id":103015,"nodeType":"ParameterList","parameters":[],"src":"66137:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103026,"nodeType":"FunctionDefinition","src":"66258:87:150","nodes":[],"documentation":{"id":103017,"nodeType":"StructuredDocumentation","src":"66144:109:150","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66267:11:150","parameters":{"id":103024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103019,"mutability":"mutable","name":"left","nameLocation":"66287:4:150","nodeType":"VariableDeclaration","scope":103026,"src":"66279:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103018,"name":"uint256","nodeType":"ElementaryTypeName","src":"66279:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103021,"mutability":"mutable","name":"right","nameLocation":"66301:5:150","nodeType":"VariableDeclaration","scope":103026,"src":"66293:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103020,"name":"uint256","nodeType":"ElementaryTypeName","src":"66293:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103023,"mutability":"mutable","name":"error","nameLocation":"66324:5:150","nodeType":"VariableDeclaration","scope":103026,"src":"66308:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103022,"name":"string","nodeType":"ElementaryTypeName","src":"66308:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66278:52:150"},"returnParameters":{"id":103025,"nodeType":"ParameterList","parameters":[],"src":"66344:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103034,"nodeType":"FunctionDefinition","src":"66407:62:150","nodes":[],"documentation":{"id":103027,"nodeType":"StructuredDocumentation","src":"66351:51:150","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66416:11:150","parameters":{"id":103032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103029,"mutability":"mutable","name":"left","nameLocation":"66435:4:150","nodeType":"VariableDeclaration","scope":103034,"src":"66428:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":103028,"name":"int256","nodeType":"ElementaryTypeName","src":"66428:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":103031,"mutability":"mutable","name":"right","nameLocation":"66448:5:150","nodeType":"VariableDeclaration","scope":103034,"src":"66441:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":103030,"name":"int256","nodeType":"ElementaryTypeName","src":"66441:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"66427:27:150"},"returnParameters":{"id":103033,"nodeType":"ParameterList","parameters":[],"src":"66468:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103044,"nodeType":"FunctionDefinition","src":"66588:85:150","nodes":[],"documentation":{"id":103035,"nodeType":"StructuredDocumentation","src":"66475:108:150","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66597:11:150","parameters":{"id":103042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103037,"mutability":"mutable","name":"left","nameLocation":"66616:4:150","nodeType":"VariableDeclaration","scope":103044,"src":"66609:11:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":103036,"name":"int256","nodeType":"ElementaryTypeName","src":"66609:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":103039,"mutability":"mutable","name":"right","nameLocation":"66629:5:150","nodeType":"VariableDeclaration","scope":103044,"src":"66622:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":103038,"name":"int256","nodeType":"ElementaryTypeName","src":"66622:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":103041,"mutability":"mutable","name":"error","nameLocation":"66652:5:150","nodeType":"VariableDeclaration","scope":103044,"src":"66636:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103040,"name":"string","nodeType":"ElementaryTypeName","src":"66636:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66608:50:150"},"returnParameters":{"id":103043,"nodeType":"ParameterList","parameters":[],"src":"66672:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103052,"nodeType":"FunctionDefinition","src":"66736:64:150","nodes":[],"documentation":{"id":103045,"nodeType":"StructuredDocumentation","src":"66679:52:150","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66745:11:150","parameters":{"id":103050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103047,"mutability":"mutable","name":"left","nameLocation":"66765:4:150","nodeType":"VariableDeclaration","scope":103052,"src":"66757:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103046,"name":"address","nodeType":"ElementaryTypeName","src":"66757:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103049,"mutability":"mutable","name":"right","nameLocation":"66779:5:150","nodeType":"VariableDeclaration","scope":103052,"src":"66771:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103048,"name":"address","nodeType":"ElementaryTypeName","src":"66771:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"66756:29:150"},"returnParameters":{"id":103051,"nodeType":"ParameterList","parameters":[],"src":"66799:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103062,"nodeType":"FunctionDefinition","src":"66920:87:150","nodes":[],"documentation":{"id":103053,"nodeType":"StructuredDocumentation","src":"66806:109:150","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66929:11:150","parameters":{"id":103060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103055,"mutability":"mutable","name":"left","nameLocation":"66949:4:150","nodeType":"VariableDeclaration","scope":103062,"src":"66941:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103054,"name":"address","nodeType":"ElementaryTypeName","src":"66941:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103057,"mutability":"mutable","name":"right","nameLocation":"66963:5:150","nodeType":"VariableDeclaration","scope":103062,"src":"66955:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103056,"name":"address","nodeType":"ElementaryTypeName","src":"66955:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103059,"mutability":"mutable","name":"error","nameLocation":"66986:5:150","nodeType":"VariableDeclaration","scope":103062,"src":"66970:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103058,"name":"string","nodeType":"ElementaryTypeName","src":"66970:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66940:52:150"},"returnParameters":{"id":103061,"nodeType":"ParameterList","parameters":[],"src":"67006:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103070,"nodeType":"FunctionDefinition","src":"67070:64:150","nodes":[],"documentation":{"id":103063,"nodeType":"StructuredDocumentation","src":"67013:52:150","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67079:11:150","parameters":{"id":103068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103065,"mutability":"mutable","name":"left","nameLocation":"67099:4:150","nodeType":"VariableDeclaration","scope":103070,"src":"67091:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67091:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":103067,"mutability":"mutable","name":"right","nameLocation":"67113:5:150","nodeType":"VariableDeclaration","scope":103070,"src":"67105:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67105:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"67090:29:150"},"returnParameters":{"id":103069,"nodeType":"ParameterList","parameters":[],"src":"67133:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103080,"nodeType":"FunctionDefinition","src":"67254:87:150","nodes":[],"documentation":{"id":103071,"nodeType":"StructuredDocumentation","src":"67140:109:150","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67263:11:150","parameters":{"id":103078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103073,"mutability":"mutable","name":"left","nameLocation":"67283:4:150","nodeType":"VariableDeclaration","scope":103080,"src":"67275:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67275:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":103075,"mutability":"mutable","name":"right","nameLocation":"67297:5:150","nodeType":"VariableDeclaration","scope":103080,"src":"67289:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67289:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":103077,"mutability":"mutable","name":"error","nameLocation":"67320:5:150","nodeType":"VariableDeclaration","scope":103080,"src":"67304:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103076,"name":"string","nodeType":"ElementaryTypeName","src":"67304:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67274:52:150"},"returnParameters":{"id":103079,"nodeType":"ParameterList","parameters":[],"src":"67340:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103086,"nodeType":"FunctionDefinition","src":"67397:50:150","nodes":[],"documentation":{"id":103081,"nodeType":"StructuredDocumentation","src":"67347:45:150","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"67406:10:150","parameters":{"id":103084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103083,"mutability":"mutable","name":"condition","nameLocation":"67422:9:150","nodeType":"VariableDeclaration","scope":103086,"src":"67417:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103082,"name":"bool","nodeType":"ElementaryTypeName","src":"67417:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67416:16:150"},"returnParameters":{"id":103085,"nodeType":"ParameterList","parameters":[],"src":"67446:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103094,"nodeType":"FunctionDefinition","src":"67560:73:150","nodes":[],"documentation":{"id":103087,"nodeType":"StructuredDocumentation","src":"67453:102:150","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"67569:10:150","parameters":{"id":103092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103089,"mutability":"mutable","name":"condition","nameLocation":"67585:9:150","nodeType":"VariableDeclaration","scope":103094,"src":"67580:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103088,"name":"bool","nodeType":"ElementaryTypeName","src":"67580:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":103091,"mutability":"mutable","name":"error","nameLocation":"67612:5:150","nodeType":"VariableDeclaration","scope":103094,"src":"67596:21:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103090,"name":"string","nodeType":"ElementaryTypeName","src":"67596:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67579:39:150"},"returnParameters":{"id":103093,"nodeType":"ParameterList","parameters":[],"src":"67632:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103100,"nodeType":"FunctionDefinition","src":"67728:46:150","nodes":[],"documentation":{"id":103095,"nodeType":"StructuredDocumentation","src":"67639:84:150","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"67737:6:150","parameters":{"id":103098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103097,"mutability":"mutable","name":"condition","nameLocation":"67749:9:150","nodeType":"VariableDeclaration","scope":103100,"src":"67744:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103096,"name":"bool","nodeType":"ElementaryTypeName","src":"67744:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67743:16:150"},"returnParameters":{"id":103099,"nodeType":"ParameterList","parameters":[],"src":"67773:0:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103106,"nodeType":"FunctionDefinition","src":"67836:51:150","nodes":[],"documentation":{"id":103101,"nodeType":"StructuredDocumentation","src":"67780:51:150","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"67845:10:150","parameters":{"id":103104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103103,"mutability":"mutable","name":"char","nameLocation":"67872:4:150","nodeType":"VariableDeclaration","scope":103106,"src":"67856:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103102,"name":"string","nodeType":"ElementaryTypeName","src":"67856:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67855:22:150"},"returnParameters":{"id":103105,"nodeType":"ParameterList","parameters":[],"src":"67886:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103114,"nodeType":"FunctionDefinition","src":"67961:63:150","nodes":[],"documentation":{"id":103107,"nodeType":"StructuredDocumentation","src":"67893:63:150","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"67970:10:150","parameters":{"id":103112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103109,"mutability":"mutable","name":"char","nameLocation":"67997:4:150","nodeType":"VariableDeclaration","scope":103114,"src":"67981:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103108,"name":"string","nodeType":"ElementaryTypeName","src":"67981:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103111,"mutability":"mutable","name":"value","nameLocation":"68008:5:150","nodeType":"VariableDeclaration","scope":103114,"src":"68003:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103110,"name":"bool","nodeType":"ElementaryTypeName","src":"68003:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67980:34:150"},"returnParameters":{"id":103113,"nodeType":"ParameterList","parameters":[],"src":"68023:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103122,"nodeType":"FunctionDefinition","src":"68079:85:150","nodes":[],"documentation":{"id":103115,"nodeType":"StructuredDocumentation","src":"68030:44:150","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"68088:6:150","parameters":{"id":103118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103117,"mutability":"mutable","name":"rpcAlias","nameLocation":"68111:8:150","nodeType":"VariableDeclaration","scope":103122,"src":"68095:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103116,"name":"string","nodeType":"ElementaryTypeName","src":"68095:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68094:26:150"},"returnParameters":{"id":103121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103120,"mutability":"mutable","name":"json","nameLocation":"68158:4:150","nodeType":"VariableDeclaration","scope":103122,"src":"68144:18:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":103119,"name":"string","nodeType":"ElementaryTypeName","src":"68144:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68143:20:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":103130,"nodeType":"FunctionDefinition","src":"68229:67:150","nodes":[],"documentation":{"id":103123,"nodeType":"StructuredDocumentation","src":"68170:54:150","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"68238:13:150","parameters":{"id":103124,"nodeType":"ParameterList","parameters":[],"src":"68251:2:150"},"returnParameters":{"id":103129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103128,"mutability":"mutable","name":"urls","nameLocation":"68290:4:150","nodeType":"VariableDeclaration","scope":103130,"src":"68277:17:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$100385_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":103126,"nodeType":"UserDefinedTypeName","pathNode":{"id":103125,"name":"Rpc","nameLocations":["68277:3:150"],"nodeType":"IdentifierPath","referencedDeclaration":100385,"src":"68277:3:150"},"referencedDeclaration":100385,"src":"68277:3:150","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$100385_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":103127,"nodeType":"ArrayTypeName","src":"68277:5:150","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$100385_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"68276:19:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":103139,"nodeType":"FunctionDefinition","src":"68367:67:150","nodes":[],"documentation":{"id":103131,"nodeType":"StructuredDocumentation","src":"68302:60:150","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"68376:7:150","parameters":{"id":103132,"nodeType":"ParameterList","parameters":[],"src":"68383:2:150"},"returnParameters":{"id":103138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103137,"mutability":"mutable","name":"urls","nameLocation":"68428:4:150","nodeType":"VariableDeclaration","scope":103139,"src":"68409:23:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":103133,"name":"string","nodeType":"ElementaryTypeName","src":"68409:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":103135,"length":{"hexValue":"32","id":103134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"68416:1:150","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"68409:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":103136,"nodeType":"ArrayTypeName","src":"68409:11:150","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"68408:25:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":103145,"nodeType":"FunctionDefinition","src":"68515:42:150","nodes":[],"documentation":{"id":103140,"nodeType":"StructuredDocumentation","src":"68440:70:150","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"68524:5:150","parameters":{"id":103143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103142,"mutability":"mutable","name":"duration","nameLocation":"68538:8:150","nodeType":"VariableDeclaration","scope":103145,"src":"68530:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103141,"name":"uint256","nodeType":"ElementaryTypeName","src":"68530:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68529:18:150"},"returnParameters":{"id":103144,"nodeType":"ParameterList","parameters":[],"src":"68556:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103155,"nodeType":"FunctionDefinition","src":"68642:95:150","nodes":[],"documentation":{"id":103146,"nodeType":"StructuredDocumentation","src":"68594:43:150","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"68651:13:150","parameters":{"id":103151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103148,"mutability":"mutable","name":"toml","nameLocation":"68681:4:150","nodeType":"VariableDeclaration","scope":103155,"src":"68665:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103147,"name":"string","nodeType":"ElementaryTypeName","src":"68665:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103150,"mutability":"mutable","name":"key","nameLocation":"68703:3:150","nodeType":"VariableDeclaration","scope":103155,"src":"68687:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103149,"name":"string","nodeType":"ElementaryTypeName","src":"68687:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68664:43:150"},"returnParameters":{"id":103154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103155,"src":"68731:4:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103152,"name":"bool","nodeType":"ElementaryTypeName","src":"68731:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"68730:6:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":103165,"nodeType":"FunctionDefinition","src":"68818:101:150","nodes":[],"documentation":{"id":103156,"nodeType":"StructuredDocumentation","src":"68743:70:150","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"68827:16:150","parameters":{"id":103161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103158,"mutability":"mutable","name":"toml","nameLocation":"68860:4:150","nodeType":"VariableDeclaration","scope":103165,"src":"68844:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103157,"name":"string","nodeType":"ElementaryTypeName","src":"68844:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103160,"mutability":"mutable","name":"key","nameLocation":"68882:3:150","nodeType":"VariableDeclaration","scope":103165,"src":"68866:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103159,"name":"string","nodeType":"ElementaryTypeName","src":"68866:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68843:43:150"},"returnParameters":{"id":103164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103165,"src":"68910:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103162,"name":"address","nodeType":"ElementaryTypeName","src":"68910:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"68909:9:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103176,"nodeType":"FunctionDefinition","src":"69002:139:150","nodes":[],"documentation":{"id":103166,"nodeType":"StructuredDocumentation","src":"68925:72:150","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"69011:21:150","parameters":{"id":103171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103168,"mutability":"mutable","name":"toml","nameLocation":"69049:4:150","nodeType":"VariableDeclaration","scope":103176,"src":"69033:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103167,"name":"string","nodeType":"ElementaryTypeName","src":"69033:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103170,"mutability":"mutable","name":"key","nameLocation":"69071:3:150","nodeType":"VariableDeclaration","scope":103176,"src":"69055:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103169,"name":"string","nodeType":"ElementaryTypeName","src":"69055:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69032:43:150"},"returnParameters":{"id":103175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103176,"src":"69123:16:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":103172,"name":"address","nodeType":"ElementaryTypeName","src":"69123:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":103173,"nodeType":"ArrayTypeName","src":"69123:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"69122:18:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103186,"nodeType":"FunctionDefinition","src":"69219:95:150","nodes":[],"documentation":{"id":103177,"nodeType":"StructuredDocumentation","src":"69147:67:150","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"69228:13:150","parameters":{"id":103182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103179,"mutability":"mutable","name":"toml","nameLocation":"69258:4:150","nodeType":"VariableDeclaration","scope":103186,"src":"69242:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103178,"name":"string","nodeType":"ElementaryTypeName","src":"69242:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103181,"mutability":"mutable","name":"key","nameLocation":"69280:3:150","nodeType":"VariableDeclaration","scope":103186,"src":"69264:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103180,"name":"string","nodeType":"ElementaryTypeName","src":"69264:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69241:43:150"},"returnParameters":{"id":103185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103186,"src":"69308:4:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103183,"name":"bool","nodeType":"ElementaryTypeName","src":"69308:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"69307:6:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103197,"nodeType":"FunctionDefinition","src":"69394:109:150","nodes":[],"documentation":{"id":103187,"nodeType":"StructuredDocumentation","src":"69320:69:150","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"69403:18:150","parameters":{"id":103192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103189,"mutability":"mutable","name":"toml","nameLocation":"69438:4:150","nodeType":"VariableDeclaration","scope":103197,"src":"69422:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103188,"name":"string","nodeType":"ElementaryTypeName","src":"69422:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103191,"mutability":"mutable","name":"key","nameLocation":"69460:3:150","nodeType":"VariableDeclaration","scope":103197,"src":"69444:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103190,"name":"string","nodeType":"ElementaryTypeName","src":"69444:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69421:43:150"},"returnParameters":{"id":103196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103197,"src":"69488:13:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":103193,"name":"bool","nodeType":"ElementaryTypeName","src":"69488:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":103194,"nodeType":"ArrayTypeName","src":"69488:6:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"69487:15:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103207,"nodeType":"FunctionDefinition","src":"69582:104:150","nodes":[],"documentation":{"id":103198,"nodeType":"StructuredDocumentation","src":"69509:68:150","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"69591:14:150","parameters":{"id":103203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103200,"mutability":"mutable","name":"toml","nameLocation":"69622:4:150","nodeType":"VariableDeclaration","scope":103207,"src":"69606:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103199,"name":"string","nodeType":"ElementaryTypeName","src":"69606:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103202,"mutability":"mutable","name":"key","nameLocation":"69644:3:150","nodeType":"VariableDeclaration","scope":103207,"src":"69628:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103201,"name":"string","nodeType":"ElementaryTypeName","src":"69628:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69605:43:150"},"returnParameters":{"id":103206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103207,"src":"69672:12:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":103204,"name":"bytes","nodeType":"ElementaryTypeName","src":"69672:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"69671:14:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103217,"nodeType":"FunctionDefinition","src":"69767:101:150","nodes":[],"documentation":{"id":103208,"nodeType":"StructuredDocumentation","src":"69692:70:150","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"69776:16:150","parameters":{"id":103213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103210,"mutability":"mutable","name":"toml","nameLocation":"69809:4:150","nodeType":"VariableDeclaration","scope":103217,"src":"69793:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103209,"name":"string","nodeType":"ElementaryTypeName","src":"69793:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103212,"mutability":"mutable","name":"key","nameLocation":"69831:3:150","nodeType":"VariableDeclaration","scope":103217,"src":"69815:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103211,"name":"string","nodeType":"ElementaryTypeName","src":"69815:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69792:43:150"},"returnParameters":{"id":103216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103217,"src":"69859:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69859:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"69858:9:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103228,"nodeType":"FunctionDefinition","src":"69951:139:150","nodes":[],"documentation":{"id":103218,"nodeType":"StructuredDocumentation","src":"69874:72:150","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"69960:21:150","parameters":{"id":103223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103220,"mutability":"mutable","name":"toml","nameLocation":"69998:4:150","nodeType":"VariableDeclaration","scope":103228,"src":"69982:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103219,"name":"string","nodeType":"ElementaryTypeName","src":"69982:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103222,"mutability":"mutable","name":"key","nameLocation":"70020:3:150","nodeType":"VariableDeclaration","scope":103228,"src":"70004:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103221,"name":"string","nodeType":"ElementaryTypeName","src":"70004:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69981:43:150"},"returnParameters":{"id":103227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103228,"src":"70072:16:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":103224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70072:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":103225,"nodeType":"ArrayTypeName","src":"70072:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"70071:18:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103239,"nodeType":"FunctionDefinition","src":"70171:111:150","nodes":[],"documentation":{"id":103229,"nodeType":"StructuredDocumentation","src":"70096:70:150","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"70180:19:150","parameters":{"id":103234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103231,"mutability":"mutable","name":"toml","nameLocation":"70216:4:150","nodeType":"VariableDeclaration","scope":103239,"src":"70200:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103230,"name":"string","nodeType":"ElementaryTypeName","src":"70200:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103233,"mutability":"mutable","name":"key","nameLocation":"70238:3:150","nodeType":"VariableDeclaration","scope":103239,"src":"70222:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103232,"name":"string","nodeType":"ElementaryTypeName","src":"70222:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70199:43:150"},"returnParameters":{"id":103238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103239,"src":"70266:14:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":103235,"name":"bytes","nodeType":"ElementaryTypeName","src":"70266:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":103236,"nodeType":"ArrayTypeName","src":"70266:7:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"70265:16:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103249,"nodeType":"FunctionDefinition","src":"70362:96:150","nodes":[],"documentation":{"id":103240,"nodeType":"StructuredDocumentation","src":"70288:69:150","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"70371:12:150","parameters":{"id":103245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103242,"mutability":"mutable","name":"toml","nameLocation":"70400:4:150","nodeType":"VariableDeclaration","scope":103249,"src":"70384:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103241,"name":"string","nodeType":"ElementaryTypeName","src":"70384:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103244,"mutability":"mutable","name":"key","nameLocation":"70422:3:150","nodeType":"VariableDeclaration","scope":103249,"src":"70406:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103243,"name":"string","nodeType":"ElementaryTypeName","src":"70406:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70383:43:150"},"returnParameters":{"id":103248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103249,"src":"70450:6:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":103246,"name":"int256","nodeType":"ElementaryTypeName","src":"70450:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"70449:8:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103260,"nodeType":"FunctionDefinition","src":"70540:110:150","nodes":[],"documentation":{"id":103250,"nodeType":"StructuredDocumentation","src":"70464:71:150","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"70549:17:150","parameters":{"id":103255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103252,"mutability":"mutable","name":"toml","nameLocation":"70583:4:150","nodeType":"VariableDeclaration","scope":103260,"src":"70567:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103251,"name":"string","nodeType":"ElementaryTypeName","src":"70567:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103254,"mutability":"mutable","name":"key","nameLocation":"70605:3:150","nodeType":"VariableDeclaration","scope":103260,"src":"70589:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103253,"name":"string","nodeType":"ElementaryTypeName","src":"70589:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70566:43:150"},"returnParameters":{"id":103259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103260,"src":"70633:15:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":103256,"name":"int256","nodeType":"ElementaryTypeName","src":"70633:6:150","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":103257,"nodeType":"ArrayTypeName","src":"70633:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"70632:17:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103271,"nodeType":"FunctionDefinition","src":"70714:111:150","nodes":[],"documentation":{"id":103261,"nodeType":"StructuredDocumentation","src":"70656:53:150","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"70723:13:150","parameters":{"id":103266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103263,"mutability":"mutable","name":"toml","nameLocation":"70753:4:150","nodeType":"VariableDeclaration","scope":103271,"src":"70737:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103262,"name":"string","nodeType":"ElementaryTypeName","src":"70737:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103265,"mutability":"mutable","name":"key","nameLocation":"70775:3:150","nodeType":"VariableDeclaration","scope":103271,"src":"70759:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103264,"name":"string","nodeType":"ElementaryTypeName","src":"70759:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70736:43:150"},"returnParameters":{"id":103270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103269,"mutability":"mutable","name":"keys","nameLocation":"70819:4:150","nodeType":"VariableDeclaration","scope":103271,"src":"70803:20:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":103267,"name":"string","nodeType":"ElementaryTypeName","src":"70803:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":103268,"nodeType":"ArrayTypeName","src":"70803:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"70802:22:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103281,"nodeType":"FunctionDefinition","src":"70905:106:150","nodes":[],"documentation":{"id":103272,"nodeType":"StructuredDocumentation","src":"70831:69:150","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"70914:15:150","parameters":{"id":103277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103274,"mutability":"mutable","name":"toml","nameLocation":"70946:4:150","nodeType":"VariableDeclaration","scope":103281,"src":"70930:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103273,"name":"string","nodeType":"ElementaryTypeName","src":"70930:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103276,"mutability":"mutable","name":"key","nameLocation":"70968:3:150","nodeType":"VariableDeclaration","scope":103281,"src":"70952:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103275,"name":"string","nodeType":"ElementaryTypeName","src":"70952:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70929:43:150"},"returnParameters":{"id":103280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103281,"src":"70996:13:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":103278,"name":"string","nodeType":"ElementaryTypeName","src":"70996:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70995:15:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103292,"nodeType":"FunctionDefinition","src":"71093:113:150","nodes":[],"documentation":{"id":103282,"nodeType":"StructuredDocumentation","src":"71017:71:150","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"71102:20:150","parameters":{"id":103287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103284,"mutability":"mutable","name":"toml","nameLocation":"71139:4:150","nodeType":"VariableDeclaration","scope":103292,"src":"71123:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103283,"name":"string","nodeType":"ElementaryTypeName","src":"71123:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103286,"mutability":"mutable","name":"key","nameLocation":"71161:3:150","nodeType":"VariableDeclaration","scope":103292,"src":"71145:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103285,"name":"string","nodeType":"ElementaryTypeName","src":"71145:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71122:43:150"},"returnParameters":{"id":103291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103292,"src":"71189:15:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":103288,"name":"string","nodeType":"ElementaryTypeName","src":"71189:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":103289,"nodeType":"ArrayTypeName","src":"71189:8:150","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"71188:17:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103302,"nodeType":"FunctionDefinition","src":"71287:98:150","nodes":[],"documentation":{"id":103293,"nodeType":"StructuredDocumentation","src":"71212:70:150","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"71296:13:150","parameters":{"id":103298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103295,"mutability":"mutable","name":"toml","nameLocation":"71326:4:150","nodeType":"VariableDeclaration","scope":103302,"src":"71310:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103294,"name":"string","nodeType":"ElementaryTypeName","src":"71310:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103297,"mutability":"mutable","name":"key","nameLocation":"71348:3:150","nodeType":"VariableDeclaration","scope":103302,"src":"71332:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103296,"name":"string","nodeType":"ElementaryTypeName","src":"71332:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71309:43:150"},"returnParameters":{"id":103301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103302,"src":"71376:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103299,"name":"uint256","nodeType":"ElementaryTypeName","src":"71376:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71375:9:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103313,"nodeType":"FunctionDefinition","src":"71468:112:150","nodes":[],"documentation":{"id":103303,"nodeType":"StructuredDocumentation","src":"71391:72:150","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"71477:18:150","parameters":{"id":103308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103305,"mutability":"mutable","name":"toml","nameLocation":"71512:4:150","nodeType":"VariableDeclaration","scope":103313,"src":"71496:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103304,"name":"string","nodeType":"ElementaryTypeName","src":"71496:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103307,"mutability":"mutable","name":"key","nameLocation":"71534:3:150","nodeType":"VariableDeclaration","scope":103313,"src":"71518:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103306,"name":"string","nodeType":"ElementaryTypeName","src":"71518:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71495:43:150"},"returnParameters":{"id":103312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103313,"src":"71562:16:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":103309,"name":"uint256","nodeType":"ElementaryTypeName","src":"71562:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":103310,"nodeType":"ArrayTypeName","src":"71562:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"71561:18:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103321,"nodeType":"FunctionDefinition","src":"71620:93:150","nodes":[],"documentation":{"id":103314,"nodeType":"StructuredDocumentation","src":"71586:29:150","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"71629:9:150","parameters":{"id":103317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103316,"mutability":"mutable","name":"toml","nameLocation":"71655:4:150","nodeType":"VariableDeclaration","scope":103321,"src":"71639:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103315,"name":"string","nodeType":"ElementaryTypeName","src":"71639:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71638:22:150"},"returnParameters":{"id":103320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103319,"mutability":"mutable","name":"abiEncodedData","nameLocation":"71697:14:150","nodeType":"VariableDeclaration","scope":103321,"src":"71684:27:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":103318,"name":"bytes","nodeType":"ElementaryTypeName","src":"71684:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"71683:29:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103331,"nodeType":"FunctionDefinition","src":"71762:114:150","nodes":[],"documentation":{"id":103322,"nodeType":"StructuredDocumentation","src":"71719:38:150","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"71771:9:150","parameters":{"id":103327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103324,"mutability":"mutable","name":"toml","nameLocation":"71797:4:150","nodeType":"VariableDeclaration","scope":103331,"src":"71781:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103323,"name":"string","nodeType":"ElementaryTypeName","src":"71781:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103326,"mutability":"mutable","name":"key","nameLocation":"71819:3:150","nodeType":"VariableDeclaration","scope":103331,"src":"71803:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103325,"name":"string","nodeType":"ElementaryTypeName","src":"71803:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71780:43:150"},"returnParameters":{"id":103330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103329,"mutability":"mutable","name":"abiEncodedData","nameLocation":"71860:14:150","nodeType":"VariableDeclaration","scope":103331,"src":"71847:27:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":103328,"name":"bytes","nodeType":"ElementaryTypeName","src":"71847:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"71846:29:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103339,"nodeType":"FunctionDefinition","src":"71969:72:150","nodes":[],"documentation":{"id":103332,"nodeType":"StructuredDocumentation","src":"71882:82:150","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"71978:9:150","parameters":{"id":103337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103334,"mutability":"mutable","name":"json","nameLocation":"72004:4:150","nodeType":"VariableDeclaration","scope":103339,"src":"71988:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103333,"name":"string","nodeType":"ElementaryTypeName","src":"71988:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103336,"mutability":"mutable","name":"path","nameLocation":"72026:4:150","nodeType":"VariableDeclaration","scope":103339,"src":"72010:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103335,"name":"string","nodeType":"ElementaryTypeName","src":"72010:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71987:44:150"},"returnParameters":{"id":103338,"nodeType":"ParameterList","parameters":[],"src":"72040:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103349,"nodeType":"FunctionDefinition","src":"72310:98:150","nodes":[],"documentation":{"id":103340,"nodeType":"StructuredDocumentation","src":"72047:258:150","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"72319:9:150","parameters":{"id":103347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103342,"mutability":"mutable","name":"json","nameLocation":"72345:4:150","nodeType":"VariableDeclaration","scope":103349,"src":"72329:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103341,"name":"string","nodeType":"ElementaryTypeName","src":"72329:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103344,"mutability":"mutable","name":"path","nameLocation":"72367:4:150","nodeType":"VariableDeclaration","scope":103349,"src":"72351:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103343,"name":"string","nodeType":"ElementaryTypeName","src":"72351:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103346,"mutability":"mutable","name":"valueKey","nameLocation":"72389:8:150","nodeType":"VariableDeclaration","scope":103349,"src":"72373:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103345,"name":"string","nodeType":"ElementaryTypeName","src":"72373:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72328:70:150"},"returnParameters":{"id":103348,"nodeType":"ParameterList","parameters":[],"src":"72407:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103361,"nodeType":"FunctionDefinition","src":"72547:141:150","nodes":[],"documentation":{"id":103350,"nodeType":"StructuredDocumentation","src":"72450:92:150","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"72556:21:150","parameters":{"id":103357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103352,"mutability":"mutable","name":"salt","nameLocation":"72586:4:150","nodeType":"VariableDeclaration","scope":103361,"src":"72578:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72578:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":103354,"mutability":"mutable","name":"initCodeHash","nameLocation":"72600:12:150","nodeType":"VariableDeclaration","scope":103361,"src":"72592:20:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72592:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":103356,"mutability":"mutable","name":"deployer","nameLocation":"72622:8:150","nodeType":"VariableDeclaration","scope":103361,"src":"72614:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103355,"name":"address","nodeType":"ElementaryTypeName","src":"72614:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72577:54:150"},"returnParameters":{"id":103360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103361,"src":"72679:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103358,"name":"address","nodeType":"ElementaryTypeName","src":"72679:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72678:9:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103371,"nodeType":"FunctionDefinition","src":"72793:99:150","nodes":[],"documentation":{"id":103362,"nodeType":"StructuredDocumentation","src":"72694:94:150","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"72802:21:150","parameters":{"id":103367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103364,"mutability":"mutable","name":"salt","nameLocation":"72832:4:150","nodeType":"VariableDeclaration","scope":103371,"src":"72824:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72824:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":103366,"mutability":"mutable","name":"initCodeHash","nameLocation":"72846:12:150","nodeType":"VariableDeclaration","scope":103371,"src":"72838:20:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72838:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"72823:36:150"},"returnParameters":{"id":103370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103371,"src":"72883:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103368,"name":"address","nodeType":"ElementaryTypeName","src":"72883:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72882:9:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103381,"nodeType":"FunctionDefinition","src":"72997:95:150","nodes":[],"documentation":{"id":103372,"nodeType":"StructuredDocumentation","src":"72898:94:150","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"73006:20:150","parameters":{"id":103377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103374,"mutability":"mutable","name":"deployer","nameLocation":"73035:8:150","nodeType":"VariableDeclaration","scope":103381,"src":"73027:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103373,"name":"address","nodeType":"ElementaryTypeName","src":"73027:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103376,"mutability":"mutable","name":"nonce","nameLocation":"73053:5:150","nodeType":"VariableDeclaration","scope":103381,"src":"73045:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103375,"name":"uint256","nodeType":"ElementaryTypeName","src":"73045:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73026:33:150"},"returnParameters":{"id":103380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103381,"src":"73083:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103378,"name":"address","nodeType":"ElementaryTypeName","src":"73083:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"73082:9:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103390,"nodeType":"FunctionDefinition","src":"73202:91:150","nodes":[],"documentation":{"id":103382,"nodeType":"StructuredDocumentation","src":"73098:99:150","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73211:12:150","parameters":{"id":103385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103384,"mutability":"mutable","name":"walletLabel","nameLocation":"73240:11:150","nodeType":"VariableDeclaration","scope":103390,"src":"73224:27:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103383,"name":"string","nodeType":"ElementaryTypeName","src":"73224:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73223:29:150"},"returnParameters":{"id":103389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103388,"mutability":"mutable","name":"wallet","nameLocation":"73285:6:150","nodeType":"VariableDeclaration","scope":103390,"src":"73271:20:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$100444_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":103387,"nodeType":"UserDefinedTypeName","pathNode":{"id":103386,"name":"Wallet","nameLocations":["73271:6:150"],"nodeType":"IdentifierPath","referencedDeclaration":100444,"src":"73271:6:150"},"referencedDeclaration":100444,"src":"73271:6:150","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$100444_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73270:22:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103399,"nodeType":"FunctionDefinition","src":"73371:82:150","nodes":[],"documentation":{"id":103391,"nodeType":"StructuredDocumentation","src":"73299:67:150","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73380:12:150","parameters":{"id":103394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103393,"mutability":"mutable","name":"privateKey","nameLocation":"73401:10:150","nodeType":"VariableDeclaration","scope":103399,"src":"73393:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103392,"name":"uint256","nodeType":"ElementaryTypeName","src":"73393:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73392:20:150"},"returnParameters":{"id":103398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103397,"mutability":"mutable","name":"wallet","nameLocation":"73445:6:150","nodeType":"VariableDeclaration","scope":103399,"src":"73431:20:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$100444_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":103396,"nodeType":"UserDefinedTypeName","pathNode":{"id":103395,"name":"Wallet","nameLocations":["73431:6:150"],"nodeType":"IdentifierPath","referencedDeclaration":100444,"src":"73431:6:150"},"referencedDeclaration":100444,"src":"73431:6:150","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$100444_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73430:22:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103410,"nodeType":"FunctionDefinition","src":"73567:111:150","nodes":[],"documentation":{"id":103400,"nodeType":"StructuredDocumentation","src":"73459:103:150","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73576:12:150","parameters":{"id":103405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103402,"mutability":"mutable","name":"privateKey","nameLocation":"73597:10:150","nodeType":"VariableDeclaration","scope":103410,"src":"73589:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103401,"name":"uint256","nodeType":"ElementaryTypeName","src":"73589:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103404,"mutability":"mutable","name":"walletLabel","nameLocation":"73625:11:150","nodeType":"VariableDeclaration","scope":103410,"src":"73609:27:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103403,"name":"string","nodeType":"ElementaryTypeName","src":"73609:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73588:49:150"},"returnParameters":{"id":103409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103408,"mutability":"mutable","name":"wallet","nameLocation":"73670:6:150","nodeType":"VariableDeclaration","scope":103410,"src":"73656:20:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$100444_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":103407,"nodeType":"UserDefinedTypeName","pathNode":{"id":103406,"name":"Wallet","nameLocations":["73656:6:150"],"nodeType":"IdentifierPath","referencedDeclaration":100444,"src":"73656:6:150"},"referencedDeclaration":100444,"src":"73656:6:150","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$100444_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73655:22:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103420,"nodeType":"FunctionDefinition","src":"73826:102:150","nodes":[],"documentation":{"id":103411,"nodeType":"StructuredDocumentation","src":"73684:137:150","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"73835:9:150","parameters":{"id":103416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103413,"mutability":"mutable","name":"mnemonic","nameLocation":"73861:8:150","nodeType":"VariableDeclaration","scope":103420,"src":"73845:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103412,"name":"string","nodeType":"ElementaryTypeName","src":"73845:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103415,"mutability":"mutable","name":"index","nameLocation":"73878:5:150","nodeType":"VariableDeclaration","scope":103420,"src":"73871:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":103414,"name":"uint32","nodeType":"ElementaryTypeName","src":"73871:6:150","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"73844:40:150"},"returnParameters":{"id":103419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103418,"mutability":"mutable","name":"privateKey","nameLocation":"73916:10:150","nodeType":"VariableDeclaration","scope":103420,"src":"73908:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103417,"name":"uint256","nodeType":"ElementaryTypeName","src":"73908:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73907:20:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103432,"nodeType":"FunctionDefinition","src":"74057:158:150","nodes":[],"documentation":{"id":103421,"nodeType":"StructuredDocumentation","src":"73934:118:150","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74066:9:150","parameters":{"id":103428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103423,"mutability":"mutable","name":"mnemonic","nameLocation":"74092:8:150","nodeType":"VariableDeclaration","scope":103432,"src":"74076:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103422,"name":"string","nodeType":"ElementaryTypeName","src":"74076:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103425,"mutability":"mutable","name":"derivationPath","nameLocation":"74118:14:150","nodeType":"VariableDeclaration","scope":103432,"src":"74102:30:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103424,"name":"string","nodeType":"ElementaryTypeName","src":"74102:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103427,"mutability":"mutable","name":"index","nameLocation":"74141:5:150","nodeType":"VariableDeclaration","scope":103432,"src":"74134:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":103426,"name":"uint32","nodeType":"ElementaryTypeName","src":"74134:6:150","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"74075:72:150"},"returnParameters":{"id":103431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103430,"mutability":"mutable","name":"privateKey","nameLocation":"74203:10:150","nodeType":"VariableDeclaration","scope":103432,"src":"74195:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103429,"name":"uint256","nodeType":"ElementaryTypeName","src":"74195:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74194:20:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103444,"nodeType":"FunctionDefinition","src":"74389:152:150","nodes":[],"documentation":{"id":103433,"nodeType":"StructuredDocumentation","src":"74221:163:150","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74398:9:150","parameters":{"id":103440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103435,"mutability":"mutable","name":"mnemonic","nameLocation":"74424:8:150","nodeType":"VariableDeclaration","scope":103444,"src":"74408:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103434,"name":"string","nodeType":"ElementaryTypeName","src":"74408:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103437,"mutability":"mutable","name":"index","nameLocation":"74441:5:150","nodeType":"VariableDeclaration","scope":103444,"src":"74434:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":103436,"name":"uint32","nodeType":"ElementaryTypeName","src":"74434:6:150","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":103439,"mutability":"mutable","name":"language","nameLocation":"74464:8:150","nodeType":"VariableDeclaration","scope":103444,"src":"74448:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103438,"name":"string","nodeType":"ElementaryTypeName","src":"74448:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74407:66:150"},"returnParameters":{"id":103443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103442,"mutability":"mutable","name":"privateKey","nameLocation":"74529:10:150","nodeType":"VariableDeclaration","scope":103444,"src":"74521:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103441,"name":"uint256","nodeType":"ElementaryTypeName","src":"74521:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74520:20:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103458,"nodeType":"FunctionDefinition","src":"74696:184:150","nodes":[],"documentation":{"id":103445,"nodeType":"StructuredDocumentation","src":"74547:144:150","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74705:9:150","parameters":{"id":103454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103447,"mutability":"mutable","name":"mnemonic","nameLocation":"74731:8:150","nodeType":"VariableDeclaration","scope":103458,"src":"74715:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103446,"name":"string","nodeType":"ElementaryTypeName","src":"74715:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103449,"mutability":"mutable","name":"derivationPath","nameLocation":"74757:14:150","nodeType":"VariableDeclaration","scope":103458,"src":"74741:30:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103448,"name":"string","nodeType":"ElementaryTypeName","src":"74741:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103451,"mutability":"mutable","name":"index","nameLocation":"74780:5:150","nodeType":"VariableDeclaration","scope":103458,"src":"74773:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":103450,"name":"uint32","nodeType":"ElementaryTypeName","src":"74773:6:150","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":103453,"mutability":"mutable","name":"language","nameLocation":"74803:8:150","nodeType":"VariableDeclaration","scope":103458,"src":"74787:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103452,"name":"string","nodeType":"ElementaryTypeName","src":"74787:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74714:98:150"},"returnParameters":{"id":103457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103456,"mutability":"mutable","name":"privateKey","nameLocation":"74868:10:150","nodeType":"VariableDeclaration","scope":103458,"src":"74860:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103455,"name":"uint256","nodeType":"ElementaryTypeName","src":"74860:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74859:20:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103466,"nodeType":"FunctionDefinition","src":"74936:75:150","nodes":[],"documentation":{"id":103459,"nodeType":"StructuredDocumentation","src":"74886:45:150","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"74945:11:150","parameters":{"id":103462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103461,"mutability":"mutable","name":"name","nameLocation":"74973:4:150","nodeType":"VariableDeclaration","scope":103466,"src":"74957:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103460,"name":"string","nodeType":"ElementaryTypeName","src":"74957:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74956:22:150"},"returnParameters":{"id":103465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103466,"src":"75002:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75002:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75001:9:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103474,"nodeType":"FunctionDefinition","src":"75067:86:150","nodes":[],"documentation":{"id":103467,"nodeType":"StructuredDocumentation","src":"75017:45:150","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"75076:8:150","parameters":{"id":103470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103469,"mutability":"mutable","name":"account","nameLocation":"75093:7:150","nodeType":"VariableDeclaration","scope":103474,"src":"75085:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103468,"name":"address","nodeType":"ElementaryTypeName","src":"75085:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75084:17:150"},"returnParameters":{"id":103473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103472,"mutability":"mutable","name":"currentLabel","nameLocation":"75139:12:150","nodeType":"VariableDeclaration","scope":103474,"src":"75125:26:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":103471,"name":"string","nodeType":"ElementaryTypeName","src":"75125:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75124:28:150"},"scope":103547,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":103483,"nodeType":"FunctionDefinition","src":"75191:74:150","nodes":[],"documentation":{"id":103475,"nodeType":"StructuredDocumentation","src":"75159:27:150","text":"Get a `Wallet`'s nonce."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"75200:8:150","parameters":{"id":103479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103478,"mutability":"mutable","name":"wallet","nameLocation":"75225:6:150","nodeType":"VariableDeclaration","scope":103483,"src":"75209:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$100444_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":103477,"nodeType":"UserDefinedTypeName","pathNode":{"id":103476,"name":"Wallet","nameLocations":["75209:6:150"],"nodeType":"IdentifierPath","referencedDeclaration":100444,"src":"75209:6:150"},"referencedDeclaration":100444,"src":"75209:6:150","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$100444_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"75208:24:150"},"returnParameters":{"id":103482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103481,"mutability":"mutable","name":"nonce","nameLocation":"75258:5:150","nodeType":"VariableDeclaration","scope":103483,"src":"75251:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":103480,"name":"uint64","nodeType":"ElementaryTypeName","src":"75251:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"75250:14:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103491,"nodeType":"FunctionDefinition","src":"75313:67:150","nodes":[],"documentation":{"id":103484,"nodeType":"StructuredDocumentation","src":"75271:37:150","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"75322:5:150","parameters":{"id":103489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103486,"mutability":"mutable","name":"account","nameLocation":"75336:7:150","nodeType":"VariableDeclaration","scope":103491,"src":"75328:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103485,"name":"address","nodeType":"ElementaryTypeName","src":"75328:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103488,"mutability":"mutable","name":"newLabel","nameLocation":"75361:8:150","nodeType":"VariableDeclaration","scope":103491,"src":"75345:24:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103487,"name":"string","nodeType":"ElementaryTypeName","src":"75345:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75327:43:150"},"returnParameters":{"id":103490,"nodeType":"ParameterList","parameters":[],"src":"75379:0:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103499,"nodeType":"FunctionDefinition","src":"75464:76:150","nodes":[],"documentation":{"id":103492,"nodeType":"StructuredDocumentation","src":"75386:73:150","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"75473:11:150","parameters":{"id":103495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103494,"mutability":"mutable","name":"privateKey","nameLocation":"75493:10:150","nodeType":"VariableDeclaration","scope":103499,"src":"75485:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103493,"name":"uint256","nodeType":"ElementaryTypeName","src":"75485:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75484:20:150"},"returnParameters":{"id":103498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103497,"mutability":"mutable","name":"keyAddr","nameLocation":"75531:7:150","nodeType":"VariableDeclaration","scope":103499,"src":"75523:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103496,"name":"address","nodeType":"ElementaryTypeName","src":"75523:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75522:17:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103514,"nodeType":"FunctionDefinition","src":"75582:103:150","nodes":[],"documentation":{"id":103500,"nodeType":"StructuredDocumentation","src":"75546:31:150","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"75591:4:150","parameters":{"id":103506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103503,"mutability":"mutable","name":"wallet","nameLocation":"75612:6:150","nodeType":"VariableDeclaration","scope":103514,"src":"75596:22:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$100444_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":103502,"nodeType":"UserDefinedTypeName","pathNode":{"id":103501,"name":"Wallet","nameLocations":["75596:6:150"],"nodeType":"IdentifierPath","referencedDeclaration":100444,"src":"75596:6:150"},"referencedDeclaration":100444,"src":"75596:6:150","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$100444_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":103505,"mutability":"mutable","name":"digest","nameLocation":"75628:6:150","nodeType":"VariableDeclaration","scope":103514,"src":"75620:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75620:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75595:40:150"},"returnParameters":{"id":103513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103508,"mutability":"mutable","name":"v","nameLocation":"75660:1:150","nodeType":"VariableDeclaration","scope":103514,"src":"75654:7:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":103507,"name":"uint8","nodeType":"ElementaryTypeName","src":"75654:5:150","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":103510,"mutability":"mutable","name":"r","nameLocation":"75671:1:150","nodeType":"VariableDeclaration","scope":103514,"src":"75663:9:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75663:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":103512,"mutability":"mutable","name":"s","nameLocation":"75682:1:150","nodeType":"VariableDeclaration","scope":103514,"src":"75674:9:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75674:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75653:31:150"},"scope":103547,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103522,"nodeType":"FunctionDefinition","src":"75746:80:150","nodes":[],"documentation":{"id":103515,"nodeType":"StructuredDocumentation","src":"75691:50:150","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"75755:11:150","parameters":{"id":103518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103517,"mutability":"mutable","name":"data","nameLocation":"75782:4:150","nodeType":"VariableDeclaration","scope":103522,"src":"75767:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103516,"name":"bytes","nodeType":"ElementaryTypeName","src":"75767:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"75766:21:150"},"returnParameters":{"id":103521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103522,"src":"75811:13:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":103519,"name":"string","nodeType":"ElementaryTypeName","src":"75811:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75810:15:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103530,"nodeType":"FunctionDefinition","src":"75888:81:150","nodes":[],"documentation":{"id":103523,"nodeType":"StructuredDocumentation","src":"75832:51:150","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"75897:11:150","parameters":{"id":103526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103525,"mutability":"mutable","name":"data","nameLocation":"75925:4:150","nodeType":"VariableDeclaration","scope":103530,"src":"75909:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103524,"name":"string","nodeType":"ElementaryTypeName","src":"75909:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75908:22:150"},"returnParameters":{"id":103529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103530,"src":"75954:13:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":103527,"name":"string","nodeType":"ElementaryTypeName","src":"75954:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75953:15:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103538,"nodeType":"FunctionDefinition","src":"76027:77:150","nodes":[],"documentation":{"id":103531,"nodeType":"StructuredDocumentation","src":"75975:47:150","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"76036:8:150","parameters":{"id":103534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103533,"mutability":"mutable","name":"data","nameLocation":"76060:4:150","nodeType":"VariableDeclaration","scope":103538,"src":"76045:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103532,"name":"bytes","nodeType":"ElementaryTypeName","src":"76045:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"76044:21:150"},"returnParameters":{"id":103537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103538,"src":"76089:13:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":103535,"name":"string","nodeType":"ElementaryTypeName","src":"76089:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76088:15:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":103546,"nodeType":"FunctionDefinition","src":"76163:78:150","nodes":[],"documentation":{"id":103539,"nodeType":"StructuredDocumentation","src":"76110:48:150","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"76172:8:150","parameters":{"id":103542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103541,"mutability":"mutable","name":"data","nameLocation":"76197:4:150","nodeType":"VariableDeclaration","scope":103546,"src":"76181:20:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103540,"name":"string","nodeType":"ElementaryTypeName","src":"76181:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76180:22:150"},"returnParameters":{"id":103545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103546,"src":"76226:13:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":103543,"name":"string","nodeType":"ElementaryTypeName","src":"76226:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76225:15:150"},"scope":103547,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":100339,"nodeType":"StructuredDocumentation","src":"184:225:150","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[103547],"name":"VmSafe","nameLocation":"419:6:150","scope":104149,"usedErrors":[],"usedEvents":[]},{"id":104148,"nodeType":"ContractDefinition","src":"76416:14386:150","nodes":[{"id":103556,"nodeType":"FunctionDefinition","src":"76576:61:150","nodes":[],"documentation":{"id":103551,"nodeType":"StructuredDocumentation","src":"76475:96:150","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"76585:10:150","parameters":{"id":103552,"nodeType":"ParameterList","parameters":[],"src":"76595:2:150"},"returnParameters":{"id":103555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103554,"mutability":"mutable","name":"forkId","nameLocation":"76629:6:150","nodeType":"VariableDeclaration","scope":103556,"src":"76621:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103553,"name":"uint256","nodeType":"ElementaryTypeName","src":"76621:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76620:16:150"},"scope":104148,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":103562,"nodeType":"FunctionDefinition","src":"76721:51:150","nodes":[],"documentation":{"id":103557,"nodeType":"StructuredDocumentation","src":"76643:73:150","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"76730:15:150","parameters":{"id":103560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103559,"mutability":"mutable","name":"account","nameLocation":"76754:7:150","nodeType":"VariableDeclaration","scope":103562,"src":"76746:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103558,"name":"address","nodeType":"ElementaryTypeName","src":"76746:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76745:17:150"},"returnParameters":{"id":103561,"nodeType":"ParameterList","parameters":[],"src":"76771:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103568,"nodeType":"FunctionDefinition","src":"76811:54:150","nodes":[],"documentation":{"id":103563,"nodeType":"StructuredDocumentation","src":"76778:28:150","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"76820:11:150","parameters":{"id":103566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103565,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"76840:14:150","nodeType":"VariableDeclaration","scope":103568,"src":"76832:22:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103564,"name":"uint256","nodeType":"ElementaryTypeName","src":"76832:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76831:24:150"},"returnParameters":{"id":103567,"nodeType":"ParameterList","parameters":[],"src":"76864:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103575,"nodeType":"FunctionDefinition","src":"77032:56:150","nodes":[],"documentation":{"id":103569,"nodeType":"StructuredDocumentation","src":"76871:156:150","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"77041:10:150","parameters":{"id":103573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103572,"mutability":"mutable","name":"hashes","nameLocation":"77071:6:150","nodeType":"VariableDeclaration","scope":103575,"src":"77052:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":103570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77052:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":103571,"nodeType":"ArrayTypeName","src":"77052:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"77051:27:150"},"returnParameters":{"id":103574,"nodeType":"ParameterList","parameters":[],"src":"77087:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103581,"nodeType":"FunctionDefinition","src":"77124:46:150","nodes":[],"documentation":{"id":103576,"nodeType":"StructuredDocumentation","src":"77094:25:150","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"77133:7:150","parameters":{"id":103579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103578,"mutability":"mutable","name":"newChainId","nameLocation":"77149:10:150","nodeType":"VariableDeclaration","scope":103581,"src":"77141:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103577,"name":"uint256","nodeType":"ElementaryTypeName","src":"77141:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77140:20:150"},"returnParameters":{"id":103580,"nodeType":"ParameterList","parameters":[],"src":"77169:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103585,"nodeType":"FunctionDefinition","src":"77209:37:150","nodes":[],"documentation":{"id":103582,"nodeType":"StructuredDocumentation","src":"77176:28:150","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"77218:16:150","parameters":{"id":103583,"nodeType":"ParameterList","parameters":[],"src":"77234:2:150"},"returnParameters":{"id":103584,"nodeType":"ParameterList","parameters":[],"src":"77245:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103591,"nodeType":"FunctionDefinition","src":"77283:48:150","nodes":[],"documentation":{"id":103586,"nodeType":"StructuredDocumentation","src":"77252:26:150","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"77292:8:150","parameters":{"id":103589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103588,"mutability":"mutable","name":"newCoinbase","nameLocation":"77309:11:150","nodeType":"VariableDeclaration","scope":103591,"src":"77301:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103587,"name":"address","nodeType":"ElementaryTypeName","src":"77301:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77300:21:150"},"returnParameters":{"id":103590,"nodeType":"ParameterList","parameters":[],"src":"77330:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103599,"nodeType":"FunctionDefinition","src":"77451:82:150","nodes":[],"documentation":{"id":103592,"nodeType":"StructuredDocumentation","src":"77337:109:150","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"77460:10:150","parameters":{"id":103595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103594,"mutability":"mutable","name":"urlOrAlias","nameLocation":"77487:10:150","nodeType":"VariableDeclaration","scope":103599,"src":"77471:26:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103593,"name":"string","nodeType":"ElementaryTypeName","src":"77471:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77470:28:150"},"returnParameters":{"id":103598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103597,"mutability":"mutable","name":"forkId","nameLocation":"77525:6:150","nodeType":"VariableDeclaration","scope":103599,"src":"77517:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103596,"name":"uint256","nodeType":"ElementaryTypeName","src":"77517:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77516:16:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103609,"nodeType":"FunctionDefinition","src":"77640:103:150","nodes":[],"documentation":{"id":103600,"nodeType":"StructuredDocumentation","src":"77539:96:150","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"77649:10:150","parameters":{"id":103605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103602,"mutability":"mutable","name":"urlOrAlias","nameLocation":"77676:10:150","nodeType":"VariableDeclaration","scope":103609,"src":"77660:26:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103601,"name":"string","nodeType":"ElementaryTypeName","src":"77660:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103604,"mutability":"mutable","name":"blockNumber","nameLocation":"77696:11:150","nodeType":"VariableDeclaration","scope":103609,"src":"77688:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103603,"name":"uint256","nodeType":"ElementaryTypeName","src":"77688:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77659:49:150"},"returnParameters":{"id":103608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103607,"mutability":"mutable","name":"forkId","nameLocation":"77735:6:150","nodeType":"VariableDeclaration","scope":103609,"src":"77727:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103606,"name":"uint256","nodeType":"ElementaryTypeName","src":"77727:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77726:16:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103619,"nodeType":"FunctionDefinition","src":"77968:98:150","nodes":[],"documentation":{"id":103610,"nodeType":"StructuredDocumentation","src":"77749:214:150","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"77977:10:150","parameters":{"id":103615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103612,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78004:10:150","nodeType":"VariableDeclaration","scope":103619,"src":"77988:26:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103611,"name":"string","nodeType":"ElementaryTypeName","src":"77988:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103614,"mutability":"mutable","name":"txHash","nameLocation":"78024:6:150","nodeType":"VariableDeclaration","scope":103619,"src":"78016:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78016:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"77987:44:150"},"returnParameters":{"id":103618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103617,"mutability":"mutable","name":"forkId","nameLocation":"78058:6:150","nodeType":"VariableDeclaration","scope":103619,"src":"78050:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103616,"name":"uint256","nodeType":"ElementaryTypeName","src":"78050:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78049:16:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103627,"nodeType":"FunctionDefinition","src":"78201:88:150","nodes":[],"documentation":{"id":103620,"nodeType":"StructuredDocumentation","src":"78072:124:150","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"78210:16:150","parameters":{"id":103623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103622,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78243:10:150","nodeType":"VariableDeclaration","scope":103627,"src":"78227:26:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103621,"name":"string","nodeType":"ElementaryTypeName","src":"78227:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78226:28:150"},"returnParameters":{"id":103626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103625,"mutability":"mutable","name":"forkId","nameLocation":"78281:6:150","nodeType":"VariableDeclaration","scope":103627,"src":"78273:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103624,"name":"uint256","nodeType":"ElementaryTypeName","src":"78273:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78272:16:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103637,"nodeType":"FunctionDefinition","src":"78413:109:150","nodes":[],"documentation":{"id":103628,"nodeType":"StructuredDocumentation","src":"78295:113:150","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"78422:16:150","parameters":{"id":103633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103630,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78455:10:150","nodeType":"VariableDeclaration","scope":103637,"src":"78439:26:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103629,"name":"string","nodeType":"ElementaryTypeName","src":"78439:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103632,"mutability":"mutable","name":"blockNumber","nameLocation":"78475:11:150","nodeType":"VariableDeclaration","scope":103637,"src":"78467:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103631,"name":"uint256","nodeType":"ElementaryTypeName","src":"78467:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78438:49:150"},"returnParameters":{"id":103636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103635,"mutability":"mutable","name":"forkId","nameLocation":"78514:6:150","nodeType":"VariableDeclaration","scope":103637,"src":"78506:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103634,"name":"uint256","nodeType":"ElementaryTypeName","src":"78506:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78505:16:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103647,"nodeType":"FunctionDefinition","src":"78758:104:150","nodes":[],"documentation":{"id":103638,"nodeType":"StructuredDocumentation","src":"78528:225:150","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"78767:16:150","parameters":{"id":103643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103640,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78800:10:150","nodeType":"VariableDeclaration","scope":103647,"src":"78784:26:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103639,"name":"string","nodeType":"ElementaryTypeName","src":"78784:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":103642,"mutability":"mutable","name":"txHash","nameLocation":"78820:6:150","nodeType":"VariableDeclaration","scope":103647,"src":"78812:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78812:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78783:44:150"},"returnParameters":{"id":103646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103645,"mutability":"mutable","name":"forkId","nameLocation":"78854:6:150","nodeType":"VariableDeclaration","scope":103647,"src":"78846:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103644,"name":"uint256","nodeType":"ElementaryTypeName","src":"78846:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78845:16:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103655,"nodeType":"FunctionDefinition","src":"78902:60:150","nodes":[],"documentation":{"id":103648,"nodeType":"StructuredDocumentation","src":"78868:29:150","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"78911:4:150","parameters":{"id":103653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103650,"mutability":"mutable","name":"account","nameLocation":"78924:7:150","nodeType":"VariableDeclaration","scope":103655,"src":"78916:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103649,"name":"address","nodeType":"ElementaryTypeName","src":"78916:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103652,"mutability":"mutable","name":"newBalance","nameLocation":"78941:10:150","nodeType":"VariableDeclaration","scope":103655,"src":"78933:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103651,"name":"uint256","nodeType":"ElementaryTypeName","src":"78933:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78915:37:150"},"returnParameters":{"id":103654,"nodeType":"ParameterList","parameters":[],"src":"78961:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103663,"nodeType":"FunctionDefinition","src":"79200:76:150","nodes":[],"documentation":{"id":103656,"nodeType":"StructuredDocumentation","src":"78968:227:150","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"79209:14:150","parameters":{"id":103659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103658,"mutability":"mutable","name":"snapshotId","nameLocation":"79232:10:150","nodeType":"VariableDeclaration","scope":103663,"src":"79224:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103657,"name":"uint256","nodeType":"ElementaryTypeName","src":"79224:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79223:20:150"},"returnParameters":{"id":103662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103661,"mutability":"mutable","name":"success","nameLocation":"79267:7:150","nodeType":"VariableDeclaration","scope":103663,"src":"79262:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103660,"name":"bool","nodeType":"ElementaryTypeName","src":"79262:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"79261:14:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103667,"nodeType":"FunctionDefinition","src":"79348:36:150","nodes":[],"documentation":{"id":103664,"nodeType":"StructuredDocumentation","src":"79282:61:150","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"79357:15:150","parameters":{"id":103665,"nodeType":"ParameterList","parameters":[],"src":"79372:2:150"},"returnParameters":{"id":103666,"nodeType":"ParameterList","parameters":[],"src":"79383:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103673,"nodeType":"FunctionDefinition","src":"79560:52:150","nodes":[],"documentation":{"id":103668,"nodeType":"StructuredDocumentation","src":"79390:165:150","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"79569:10:150","parameters":{"id":103671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103670,"mutability":"mutable","name":"newDifficulty","nameLocation":"79588:13:150","nodeType":"VariableDeclaration","scope":103673,"src":"79580:21:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103669,"name":"uint256","nodeType":"ElementaryTypeName","src":"79580:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79579:23:150"},"returnParameters":{"id":103672,"nodeType":"ParameterList","parameters":[],"src":"79611:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103679,"nodeType":"FunctionDefinition","src":"79671:61:150","nodes":[],"documentation":{"id":103674,"nodeType":"StructuredDocumentation","src":"79618:48:150","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"79680:9:150","parameters":{"id":103677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103676,"mutability":"mutable","name":"pathToStateJson","nameLocation":"79706:15:150","nodeType":"VariableDeclaration","scope":103679,"src":"79690:31:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103675,"name":"string","nodeType":"ElementaryTypeName","src":"79690:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79689:33:150"},"returnParameters":{"id":103678,"nodeType":"ParameterList","parameters":[],"src":"79731:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103687,"nodeType":"FunctionDefinition","src":"79769:74:150","nodes":[],"documentation":{"id":103680,"nodeType":"StructuredDocumentation","src":"79738:26:150","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"79778:4:150","parameters":{"id":103685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103682,"mutability":"mutable","name":"target","nameLocation":"79791:6:150","nodeType":"VariableDeclaration","scope":103687,"src":"79783:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103681,"name":"address","nodeType":"ElementaryTypeName","src":"79783:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103684,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"79814:18:150","nodeType":"VariableDeclaration","scope":103687,"src":"79799:33:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103683,"name":"bytes","nodeType":"ElementaryTypeName","src":"79799:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79782:51:150"},"returnParameters":{"id":103686,"nodeType":"ParameterList","parameters":[],"src":"79842:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103693,"nodeType":"FunctionDefinition","src":"79879:42:150","nodes":[],"documentation":{"id":103688,"nodeType":"StructuredDocumentation","src":"79849:25:150","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"79888:3:150","parameters":{"id":103691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103690,"mutability":"mutable","name":"newBasefee","nameLocation":"79900:10:150","nodeType":"VariableDeclaration","scope":103693,"src":"79892:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103689,"name":"uint256","nodeType":"ElementaryTypeName","src":"79892:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79891:20:150"},"returnParameters":{"id":103692,"nodeType":"ParameterList","parameters":[],"src":"79920:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103700,"nodeType":"FunctionDefinition","src":"80099:73:150","nodes":[],"documentation":{"id":103694,"nodeType":"StructuredDocumentation","src":"79927:167:150","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"80108:13:150","parameters":{"id":103695,"nodeType":"ParameterList","parameters":[],"src":"80121:2:150"},"returnParameters":{"id":103699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103698,"mutability":"mutable","name":"hashes","nameLocation":"80164:6:150","nodeType":"VariableDeclaration","scope":103700,"src":"80147:23:150","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":103696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80147:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":103697,"nodeType":"ArrayTypeName","src":"80147:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"80146:25:150"},"scope":104148,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":103708,"nodeType":"FunctionDefinition","src":"80239:79:150","nodes":[],"documentation":{"id":103701,"nodeType":"StructuredDocumentation","src":"80178:56:150","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"80248:12:150","parameters":{"id":103704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103703,"mutability":"mutable","name":"account","nameLocation":"80269:7:150","nodeType":"VariableDeclaration","scope":103708,"src":"80261:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103702,"name":"address","nodeType":"ElementaryTypeName","src":"80261:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80260:17:150"},"returnParameters":{"id":103707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103706,"mutability":"mutable","name":"persistent","nameLocation":"80306:10:150","nodeType":"VariableDeclaration","scope":103708,"src":"80301:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103705,"name":"bool","nodeType":"ElementaryTypeName","src":"80301:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"80300:17:150"},"scope":104148,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":103714,"nodeType":"FunctionDefinition","src":"80399:63:150","nodes":[],"documentation":{"id":103709,"nodeType":"StructuredDocumentation","src":"80324:70:150","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"80408:10:150","parameters":{"id":103712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103711,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"80435:16:150","nodeType":"VariableDeclaration","scope":103714,"src":"80419:32:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":103710,"name":"string","nodeType":"ElementaryTypeName","src":"80419:6:150","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80418:34:150"},"returnParameters":{"id":103713,"nodeType":"ParameterList","parameters":[],"src":"80461:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103720,"nodeType":"FunctionDefinition","src":"80665:50:150","nodes":[],"documentation":{"id":103715,"nodeType":"StructuredDocumentation","src":"80468:192:150","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"80674:14:150","parameters":{"id":103718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103717,"mutability":"mutable","name":"account","nameLocation":"80697:7:150","nodeType":"VariableDeclaration","scope":103720,"src":"80689:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103716,"name":"address","nodeType":"ElementaryTypeName","src":"80689:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80688:17:150"},"returnParameters":{"id":103719,"nodeType":"ParameterList","parameters":[],"src":"80714:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103728,"nodeType":"FunctionDefinition","src":"80760:69:150","nodes":[],"documentation":{"id":103721,"nodeType":"StructuredDocumentation","src":"80721:34:150","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"80769:14:150","parameters":{"id":103726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103723,"mutability":"mutable","name":"account0","nameLocation":"80792:8:150","nodeType":"VariableDeclaration","scope":103728,"src":"80784:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103722,"name":"address","nodeType":"ElementaryTypeName","src":"80784:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103725,"mutability":"mutable","name":"account1","nameLocation":"80810:8:150","nodeType":"VariableDeclaration","scope":103728,"src":"80802:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103724,"name":"address","nodeType":"ElementaryTypeName","src":"80802:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80783:36:150"},"returnParameters":{"id":103727,"nodeType":"ParameterList","parameters":[],"src":"80828:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103738,"nodeType":"FunctionDefinition","src":"80874:87:150","nodes":[],"documentation":{"id":103729,"nodeType":"StructuredDocumentation","src":"80835:34:150","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"80883:14:150","parameters":{"id":103736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103731,"mutability":"mutable","name":"account0","nameLocation":"80906:8:150","nodeType":"VariableDeclaration","scope":103738,"src":"80898:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103730,"name":"address","nodeType":"ElementaryTypeName","src":"80898:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103733,"mutability":"mutable","name":"account1","nameLocation":"80924:8:150","nodeType":"VariableDeclaration","scope":103738,"src":"80916:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103732,"name":"address","nodeType":"ElementaryTypeName","src":"80916:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103735,"mutability":"mutable","name":"account2","nameLocation":"80942:8:150","nodeType":"VariableDeclaration","scope":103738,"src":"80934:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103734,"name":"address","nodeType":"ElementaryTypeName","src":"80934:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80897:54:150"},"returnParameters":{"id":103737,"nodeType":"ParameterList","parameters":[],"src":"80960:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103745,"nodeType":"FunctionDefinition","src":"81006:62:150","nodes":[],"documentation":{"id":103739,"nodeType":"StructuredDocumentation","src":"80967:34:150","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"81015:14:150","parameters":{"id":103743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103742,"mutability":"mutable","name":"accounts","nameLocation":"81049:8:150","nodeType":"VariableDeclaration","scope":103745,"src":"81030:27:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":103740,"name":"address","nodeType":"ElementaryTypeName","src":"81030:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":103741,"nodeType":"ArrayTypeName","src":"81030:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"81029:29:150"},"returnParameters":{"id":103744,"nodeType":"ParameterList","parameters":[],"src":"81067:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103755,"nodeType":"FunctionDefinition","src":"81139:97:150","nodes":[],"documentation":{"id":103746,"nodeType":"StructuredDocumentation","src":"81074:60:150","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"81148:14:150","parameters":{"id":103753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103748,"mutability":"mutable","name":"callee","nameLocation":"81171:6:150","nodeType":"VariableDeclaration","scope":103755,"src":"81163:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103747,"name":"address","nodeType":"ElementaryTypeName","src":"81163:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103750,"mutability":"mutable","name":"data","nameLocation":"81194:4:150","nodeType":"VariableDeclaration","scope":103755,"src":"81179:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103749,"name":"bytes","nodeType":"ElementaryTypeName","src":"81179:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":103752,"mutability":"mutable","name":"revertData","nameLocation":"81215:10:150","nodeType":"VariableDeclaration","scope":103755,"src":"81200:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103751,"name":"bytes","nodeType":"ElementaryTypeName","src":"81200:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81162:64:150"},"returnParameters":{"id":103754,"nodeType":"ParameterList","parameters":[],"src":"81235:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103767,"nodeType":"FunctionDefinition","src":"81336:123:150","nodes":[],"documentation":{"id":103756,"nodeType":"StructuredDocumentation","src":"81242:89:150","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"81345:14:150","parameters":{"id":103765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103758,"mutability":"mutable","name":"callee","nameLocation":"81368:6:150","nodeType":"VariableDeclaration","scope":103767,"src":"81360:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103757,"name":"address","nodeType":"ElementaryTypeName","src":"81360:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103760,"mutability":"mutable","name":"msgValue","nameLocation":"81384:8:150","nodeType":"VariableDeclaration","scope":103767,"src":"81376:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103759,"name":"uint256","nodeType":"ElementaryTypeName","src":"81376:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103762,"mutability":"mutable","name":"data","nameLocation":"81409:4:150","nodeType":"VariableDeclaration","scope":103767,"src":"81394:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103761,"name":"bytes","nodeType":"ElementaryTypeName","src":"81394:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":103764,"mutability":"mutable","name":"revertData","nameLocation":"81430:10:150","nodeType":"VariableDeclaration","scope":103767,"src":"81415:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103763,"name":"bytes","nodeType":"ElementaryTypeName","src":"81415:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81359:82:150"},"returnParameters":{"id":103766,"nodeType":"ParameterList","parameters":[],"src":"81458:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103777,"nodeType":"FunctionDefinition","src":"81719:91:150","nodes":[],"documentation":{"id":103768,"nodeType":"StructuredDocumentation","src":"81465:249:150","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"81728:8:150","parameters":{"id":103775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103770,"mutability":"mutable","name":"callee","nameLocation":"81745:6:150","nodeType":"VariableDeclaration","scope":103777,"src":"81737:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103769,"name":"address","nodeType":"ElementaryTypeName","src":"81737:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103772,"mutability":"mutable","name":"data","nameLocation":"81768:4:150","nodeType":"VariableDeclaration","scope":103777,"src":"81753:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103771,"name":"bytes","nodeType":"ElementaryTypeName","src":"81753:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":103774,"mutability":"mutable","name":"returnData","nameLocation":"81789:10:150","nodeType":"VariableDeclaration","scope":103777,"src":"81774:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103773,"name":"bytes","nodeType":"ElementaryTypeName","src":"81774:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81736:64:150"},"returnParameters":{"id":103776,"nodeType":"ParameterList","parameters":[],"src":"81809:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103789,"nodeType":"FunctionDefinition","src":"81985:109:150","nodes":[],"documentation":{"id":103778,"nodeType":"StructuredDocumentation","src":"81816:164:150","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"81994:8:150","parameters":{"id":103787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103780,"mutability":"mutable","name":"callee","nameLocation":"82011:6:150","nodeType":"VariableDeclaration","scope":103789,"src":"82003:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103779,"name":"address","nodeType":"ElementaryTypeName","src":"82003:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103782,"mutability":"mutable","name":"msgValue","nameLocation":"82027:8:150","nodeType":"VariableDeclaration","scope":103789,"src":"82019:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103781,"name":"uint256","nodeType":"ElementaryTypeName","src":"82019:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103784,"mutability":"mutable","name":"data","nameLocation":"82052:4:150","nodeType":"VariableDeclaration","scope":103789,"src":"82037:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103783,"name":"bytes","nodeType":"ElementaryTypeName","src":"82037:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":103786,"mutability":"mutable","name":"returnData","nameLocation":"82073:10:150","nodeType":"VariableDeclaration","scope":103789,"src":"82058:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103785,"name":"bytes","nodeType":"ElementaryTypeName","src":"82058:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82002:82:150"},"returnParameters":{"id":103788,"nodeType":"ParameterList","parameters":[],"src":"82093:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103795,"nodeType":"FunctionDefinition","src":"82169:43:150","nodes":[],"documentation":{"id":103790,"nodeType":"StructuredDocumentation","src":"82100:64:150","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"82178:5:150","parameters":{"id":103793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103792,"mutability":"mutable","name":"msgSender","nameLocation":"82192:9:150","nodeType":"VariableDeclaration","scope":103795,"src":"82184:17:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103791,"name":"address","nodeType":"ElementaryTypeName","src":"82184:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82183:19:150"},"returnParameters":{"id":103794,"nodeType":"ParameterList","parameters":[],"src":"82211:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103803,"nodeType":"FunctionDefinition","src":"82331:61:150","nodes":[],"documentation":{"id":103796,"nodeType":"StructuredDocumentation","src":"82218:108:150","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"82340:5:150","parameters":{"id":103801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103798,"mutability":"mutable","name":"msgSender","nameLocation":"82354:9:150","nodeType":"VariableDeclaration","scope":103803,"src":"82346:17:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103797,"name":"address","nodeType":"ElementaryTypeName","src":"82346:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103800,"mutability":"mutable","name":"txOrigin","nameLocation":"82373:8:150","nodeType":"VariableDeclaration","scope":103803,"src":"82365:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103799,"name":"address","nodeType":"ElementaryTypeName","src":"82365:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82345:37:150"},"returnParameters":{"id":103802,"nodeType":"ParameterList","parameters":[],"src":"82391:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103809,"nodeType":"FunctionDefinition","src":"82569:52:150","nodes":[],"documentation":{"id":103804,"nodeType":"StructuredDocumentation","src":"82398:166:150","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"82578:10:150","parameters":{"id":103807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103806,"mutability":"mutable","name":"newPrevrandao","nameLocation":"82597:13:150","nodeType":"VariableDeclaration","scope":103809,"src":"82589:21:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82589:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"82588:23:150"},"returnParameters":{"id":103808,"nodeType":"ParameterList","parameters":[],"src":"82620:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103815,"nodeType":"FunctionDefinition","src":"82798:52:150","nodes":[],"documentation":{"id":103810,"nodeType":"StructuredDocumentation","src":"82627:166:150","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"82807:10:150","parameters":{"id":103813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103812,"mutability":"mutable","name":"newPrevrandao","nameLocation":"82826:13:150","nodeType":"VariableDeclaration","scope":103815,"src":"82818:21:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103811,"name":"uint256","nodeType":"ElementaryTypeName","src":"82818:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82817:23:150"},"returnParameters":{"id":103814,"nodeType":"ParameterList","parameters":[],"src":"82849:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103826,"nodeType":"FunctionDefinition","src":"82978:101:150","nodes":[],"documentation":{"id":103816,"nodeType":"StructuredDocumentation","src":"82856:117:150","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"82987:11:150","parameters":{"id":103817,"nodeType":"ParameterList","parameters":[],"src":"82998:2:150"},"returnParameters":{"id":103825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103820,"mutability":"mutable","name":"callerMode","nameLocation":"83030:10:150","nodeType":"VariableDeclaration","scope":103826,"src":"83019:21:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$100346","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":103819,"nodeType":"UserDefinedTypeName","pathNode":{"id":103818,"name":"CallerMode","nameLocations":["83019:10:150"],"nodeType":"IdentifierPath","referencedDeclaration":100346,"src":"83019:10:150"},"referencedDeclaration":100346,"src":"83019:10:150","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$100346","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":103822,"mutability":"mutable","name":"msgSender","nameLocation":"83050:9:150","nodeType":"VariableDeclaration","scope":103826,"src":"83042:17:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103821,"name":"address","nodeType":"ElementaryTypeName","src":"83042:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103824,"mutability":"mutable","name":"txOrigin","nameLocation":"83069:8:150","nodeType":"VariableDeclaration","scope":103826,"src":"83061:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103823,"name":"address","nodeType":"ElementaryTypeName","src":"83061:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83018:60:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103832,"nodeType":"FunctionDefinition","src":"83167:46:150","nodes":[],"documentation":{"id":103827,"nodeType":"StructuredDocumentation","src":"83085:77:150","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"83176:10:150","parameters":{"id":103830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103829,"mutability":"mutable","name":"account","nameLocation":"83195:7:150","nodeType":"VariableDeclaration","scope":103832,"src":"83187:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103828,"name":"address","nodeType":"ElementaryTypeName","src":"83187:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83186:17:150"},"returnParameters":{"id":103831,"nodeType":"ParameterList","parameters":[],"src":"83212:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103840,"nodeType":"FunctionDefinition","src":"83556:70:150","nodes":[],"documentation":{"id":103833,"nodeType":"StructuredDocumentation","src":"83219:332:150","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"83565:8:150","parameters":{"id":103836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103835,"mutability":"mutable","name":"snapshotId","nameLocation":"83582:10:150","nodeType":"VariableDeclaration","scope":103840,"src":"83574:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103834,"name":"uint256","nodeType":"ElementaryTypeName","src":"83574:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83573:20:150"},"returnParameters":{"id":103839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103838,"mutability":"mutable","name":"success","nameLocation":"83617:7:150","nodeType":"VariableDeclaration","scope":103840,"src":"83612:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103837,"name":"bool","nodeType":"ElementaryTypeName","src":"83612:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83611:14:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103848,"nodeType":"FunctionDefinition","src":"83909:79:150","nodes":[],"documentation":{"id":103841,"nodeType":"StructuredDocumentation","src":"83632:272:150","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"83918:17:150","parameters":{"id":103844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103843,"mutability":"mutable","name":"snapshotId","nameLocation":"83944:10:150","nodeType":"VariableDeclaration","scope":103848,"src":"83936:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103842,"name":"uint256","nodeType":"ElementaryTypeName","src":"83936:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83935:20:150"},"returnParameters":{"id":103847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103846,"mutability":"mutable","name":"success","nameLocation":"83979:7:150","nodeType":"VariableDeclaration","scope":103848,"src":"83974:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103845,"name":"bool","nodeType":"ElementaryTypeName","src":"83974:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83973:14:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103854,"nodeType":"FunctionDefinition","src":"84085:52:150","nodes":[],"documentation":{"id":103849,"nodeType":"StructuredDocumentation","src":"83994:86:150","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"84094:16:150","parameters":{"id":103852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103851,"mutability":"mutable","name":"account","nameLocation":"84119:7:150","nodeType":"VariableDeclaration","scope":103854,"src":"84111:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103850,"name":"address","nodeType":"ElementaryTypeName","src":"84111:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"84110:17:150"},"returnParameters":{"id":103853,"nodeType":"ParameterList","parameters":[],"src":"84136:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103861,"nodeType":"FunctionDefinition","src":"84184:64:150","nodes":[],"documentation":{"id":103855,"nodeType":"StructuredDocumentation","src":"84143:36:150","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"84193:16:150","parameters":{"id":103859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103858,"mutability":"mutable","name":"accounts","nameLocation":"84229:8:150","nodeType":"VariableDeclaration","scope":103861,"src":"84210:27:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":103856,"name":"address","nodeType":"ElementaryTypeName","src":"84210:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":103857,"nodeType":"ArrayTypeName","src":"84210:9:150","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"84209:29:150"},"returnParameters":{"id":103860,"nodeType":"ParameterList","parameters":[],"src":"84247:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103867,"nodeType":"FunctionDefinition","src":"84283:42:150","nodes":[],"documentation":{"id":103862,"nodeType":"StructuredDocumentation","src":"84254:24:150","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"84292:4:150","parameters":{"id":103865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103864,"mutability":"mutable","name":"newHeight","nameLocation":"84305:9:150","nodeType":"VariableDeclaration","scope":103867,"src":"84297:17:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103863,"name":"uint256","nodeType":"ElementaryTypeName","src":"84297:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84296:19:150"},"returnParameters":{"id":103866,"nodeType":"ParameterList","parameters":[],"src":"84324:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103873,"nodeType":"FunctionDefinition","src":"84464:48:150","nodes":[],"documentation":{"id":103868,"nodeType":"StructuredDocumentation","src":"84331:128:150","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"84473:8:150","parameters":{"id":103871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103870,"mutability":"mutable","name":"blockNumber","nameLocation":"84490:11:150","nodeType":"VariableDeclaration","scope":103873,"src":"84482:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103869,"name":"uint256","nodeType":"ElementaryTypeName","src":"84482:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84481:21:150"},"returnParameters":{"id":103872,"nodeType":"ParameterList","parameters":[],"src":"84511:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103879,"nodeType":"FunctionDefinition","src":"84727:43:150","nodes":[],"documentation":{"id":103874,"nodeType":"StructuredDocumentation","src":"84518:204:150","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"84736:8:150","parameters":{"id":103877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103876,"mutability":"mutable","name":"txHash","nameLocation":"84753:6:150","nodeType":"VariableDeclaration","scope":103879,"src":"84745:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84745:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"84744:16:150"},"returnParameters":{"id":103878,"nodeType":"ParameterList","parameters":[],"src":"84769:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103887,"nodeType":"FunctionDefinition","src":"84830:64:150","nodes":[],"documentation":{"id":103880,"nodeType":"StructuredDocumentation","src":"84776:49:150","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"84839:8:150","parameters":{"id":103885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103882,"mutability":"mutable","name":"forkId","nameLocation":"84856:6:150","nodeType":"VariableDeclaration","scope":103887,"src":"84848:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103881,"name":"uint256","nodeType":"ElementaryTypeName","src":"84848:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103884,"mutability":"mutable","name":"blockNumber","nameLocation":"84872:11:150","nodeType":"VariableDeclaration","scope":103887,"src":"84864:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103883,"name":"uint256","nodeType":"ElementaryTypeName","src":"84864:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84847:37:150"},"returnParameters":{"id":103886,"nodeType":"ParameterList","parameters":[],"src":"84893:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103895,"nodeType":"FunctionDefinition","src":"85030:59:150","nodes":[],"documentation":{"id":103888,"nodeType":"StructuredDocumentation","src":"84900:125:150","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"85039:8:150","parameters":{"id":103893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103890,"mutability":"mutable","name":"forkId","nameLocation":"85056:6:150","nodeType":"VariableDeclaration","scope":103895,"src":"85048:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103889,"name":"uint256","nodeType":"ElementaryTypeName","src":"85048:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103892,"mutability":"mutable","name":"txHash","nameLocation":"85072:6:150","nodeType":"VariableDeclaration","scope":103895,"src":"85064:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85064:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"85047:32:150"},"returnParameters":{"id":103894,"nodeType":"ParameterList","parameters":[],"src":"85088:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103901,"nodeType":"FunctionDefinition","src":"85202:45:150","nodes":[],"documentation":{"id":103896,"nodeType":"StructuredDocumentation","src":"85095:102:150","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"85211:10:150","parameters":{"id":103899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103898,"mutability":"mutable","name":"forkId","nameLocation":"85230:6:150","nodeType":"VariableDeclaration","scope":103901,"src":"85222:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103897,"name":"uint256","nodeType":"ElementaryTypeName","src":"85222:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85221:16:150"},"returnParameters":{"id":103900,"nodeType":"ParameterList","parameters":[],"src":"85246:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103909,"nodeType":"FunctionDefinition","src":"85345:61:150","nodes":[],"documentation":{"id":103902,"nodeType":"StructuredDocumentation","src":"85253:87:150","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"85354:8:150","parameters":{"id":103907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103904,"mutability":"mutable","name":"account","nameLocation":"85371:7:150","nodeType":"VariableDeclaration","scope":103909,"src":"85363:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103903,"name":"address","nodeType":"ElementaryTypeName","src":"85363:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103906,"mutability":"mutable","name":"newNonce","nameLocation":"85387:8:150","nodeType":"VariableDeclaration","scope":103909,"src":"85380:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":103905,"name":"uint64","nodeType":"ElementaryTypeName","src":"85380:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"85362:34:150"},"returnParameters":{"id":103908,"nodeType":"ParameterList","parameters":[],"src":"85405:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103917,"nodeType":"FunctionDefinition","src":"85472:67:150","nodes":[],"documentation":{"id":103910,"nodeType":"StructuredDocumentation","src":"85412:55:150","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"85481:14:150","parameters":{"id":103915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103912,"mutability":"mutable","name":"account","nameLocation":"85504:7:150","nodeType":"VariableDeclaration","scope":103917,"src":"85496:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103911,"name":"address","nodeType":"ElementaryTypeName","src":"85496:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103914,"mutability":"mutable","name":"newNonce","nameLocation":"85520:8:150","nodeType":"VariableDeclaration","scope":103917,"src":"85513:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":103913,"name":"uint64","nodeType":"ElementaryTypeName","src":"85513:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"85495:34:150"},"returnParameters":{"id":103916,"nodeType":"ParameterList","parameters":[],"src":"85538:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103923,"nodeType":"FunctionDefinition","src":"85694:58:150","nodes":[],"documentation":{"id":103918,"nodeType":"StructuredDocumentation","src":"85545:144:150","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"85703:8:150","parameters":{"id":103919,"nodeType":"ParameterList","parameters":[],"src":"85711:2:150"},"returnParameters":{"id":103922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103921,"mutability":"mutable","name":"snapshotId","nameLocation":"85740:10:150","nodeType":"VariableDeclaration","scope":103923,"src":"85732:18:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103920,"name":"uint256","nodeType":"ElementaryTypeName","src":"85732:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85731:20:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103929,"nodeType":"FunctionDefinition","src":"85859:48:150","nodes":[],"documentation":{"id":103924,"nodeType":"StructuredDocumentation","src":"85758:96:150","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"85868:10:150","parameters":{"id":103927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103926,"mutability":"mutable","name":"msgSender","nameLocation":"85887:9:150","nodeType":"VariableDeclaration","scope":103929,"src":"85879:17:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103925,"name":"address","nodeType":"ElementaryTypeName","src":"85879:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85878:19:150"},"returnParameters":{"id":103928,"nodeType":"ParameterList","parameters":[],"src":"85906:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103937,"nodeType":"FunctionDefinition","src":"86058:66:150","nodes":[],"documentation":{"id":103930,"nodeType":"StructuredDocumentation","src":"85913:140:150","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"86067:10:150","parameters":{"id":103935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103932,"mutability":"mutable","name":"msgSender","nameLocation":"86086:9:150","nodeType":"VariableDeclaration","scope":103937,"src":"86078:17:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103931,"name":"address","nodeType":"ElementaryTypeName","src":"86078:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103934,"mutability":"mutable","name":"txOrigin","nameLocation":"86105:8:150","nodeType":"VariableDeclaration","scope":103937,"src":"86097:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103933,"name":"address","nodeType":"ElementaryTypeName","src":"86097:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86077:37:150"},"returnParameters":{"id":103936,"nodeType":"ParameterList","parameters":[],"src":"86123:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103941,"nodeType":"FunctionDefinition","src":"86199:30:150","nodes":[],"documentation":{"id":103938,"nodeType":"StructuredDocumentation","src":"86130:64:150","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"86208:9:150","parameters":{"id":103939,"nodeType":"ParameterList","parameters":[],"src":"86217:2:150"},"returnParameters":{"id":103940,"nodeType":"ParameterList","parameters":[],"src":"86228:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103951,"nodeType":"FunctionDefinition","src":"86287:69:150","nodes":[],"documentation":{"id":103942,"nodeType":"StructuredDocumentation","src":"86235:47:150","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"86296:5:150","parameters":{"id":103949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103944,"mutability":"mutable","name":"target","nameLocation":"86310:6:150","nodeType":"VariableDeclaration","scope":103951,"src":"86302:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103943,"name":"address","nodeType":"ElementaryTypeName","src":"86302:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103946,"mutability":"mutable","name":"slot","nameLocation":"86326:4:150","nodeType":"VariableDeclaration","scope":103951,"src":"86318:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86318:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":103948,"mutability":"mutable","name":"value","nameLocation":"86340:5:150","nodeType":"VariableDeclaration","scope":103951,"src":"86332:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86332:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86301:45:150"},"returnParameters":{"id":103950,"nodeType":"ParameterList","parameters":[],"src":"86355:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103957,"nodeType":"FunctionDefinition","src":"86459:43:150","nodes":[],"documentation":{"id":103952,"nodeType":"StructuredDocumentation","src":"86362:92:150","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"86468:8:150","parameters":{"id":103955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103954,"mutability":"mutable","name":"txHash","nameLocation":"86485:6:150","nodeType":"VariableDeclaration","scope":103957,"src":"86477:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86477:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86476:16:150"},"returnParameters":{"id":103956,"nodeType":"ParameterList","parameters":[],"src":"86501:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103965,"nodeType":"FunctionDefinition","src":"86604:59:150","nodes":[],"documentation":{"id":103958,"nodeType":"StructuredDocumentation","src":"86508:91:150","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"86613:8:150","parameters":{"id":103963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103960,"mutability":"mutable","name":"forkId","nameLocation":"86630:6:150","nodeType":"VariableDeclaration","scope":103965,"src":"86622:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103959,"name":"uint256","nodeType":"ElementaryTypeName","src":"86622:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103962,"mutability":"mutable","name":"txHash","nameLocation":"86646:6:150","nodeType":"VariableDeclaration","scope":103965,"src":"86638:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86638:7:150","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86621:32:150"},"returnParameters":{"id":103964,"nodeType":"ParameterList","parameters":[],"src":"86662:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103971,"nodeType":"FunctionDefinition","src":"86697:50:150","nodes":[],"documentation":{"id":103966,"nodeType":"StructuredDocumentation","src":"86669:23:150","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"86706:10:150","parameters":{"id":103969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103968,"mutability":"mutable","name":"newGasPrice","nameLocation":"86725:11:150","nodeType":"VariableDeclaration","scope":103971,"src":"86717:19:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103967,"name":"uint256","nodeType":"ElementaryTypeName","src":"86717:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86716:21:150"},"returnParameters":{"id":103970,"nodeType":"ParameterList","parameters":[],"src":"86746:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103977,"nodeType":"FunctionDefinition","src":"86785:45:150","nodes":[],"documentation":{"id":103972,"nodeType":"StructuredDocumentation","src":"86753:27:150","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"86794:4:150","parameters":{"id":103975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103974,"mutability":"mutable","name":"newTimestamp","nameLocation":"86807:12:150","nodeType":"VariableDeclaration","scope":103977,"src":"86799:20:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103973,"name":"uint256","nodeType":"ElementaryTypeName","src":"86799:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86798:22:150"},"returnParameters":{"id":103976,"nodeType":"ParameterList","parameters":[],"src":"86829:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103989,"nodeType":"FunctionDefinition","src":"86982:105:150","nodes":[],"documentation":{"id":103978,"nodeType":"StructuredDocumentation","src":"86870:107:150","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"86991:16:150","parameters":{"id":103987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103980,"mutability":"mutable","name":"callee","nameLocation":"87016:6:150","nodeType":"VariableDeclaration","scope":103989,"src":"87008:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103979,"name":"address","nodeType":"ElementaryTypeName","src":"87008:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103982,"mutability":"mutable","name":"msgValue","nameLocation":"87032:8:150","nodeType":"VariableDeclaration","scope":103989,"src":"87024:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103981,"name":"uint256","nodeType":"ElementaryTypeName","src":"87024:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103984,"mutability":"mutable","name":"minGas","nameLocation":"87049:6:150","nodeType":"VariableDeclaration","scope":103989,"src":"87042:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":103983,"name":"uint64","nodeType":"ElementaryTypeName","src":"87042:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":103986,"mutability":"mutable","name":"data","nameLocation":"87072:4:150","nodeType":"VariableDeclaration","scope":103989,"src":"87057:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103985,"name":"bytes","nodeType":"ElementaryTypeName","src":"87057:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87007:70:150"},"returnParameters":{"id":103988,"nodeType":"ParameterList","parameters":[],"src":"87086:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104003,"nodeType":"FunctionDefinition","src":"87220:127:150","nodes":[],"documentation":{"id":103990,"nodeType":"StructuredDocumentation","src":"87093:122:150","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"87229:16:150","parameters":{"id":104001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103992,"mutability":"mutable","name":"callee","nameLocation":"87254:6:150","nodeType":"VariableDeclaration","scope":104003,"src":"87246:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103991,"name":"address","nodeType":"ElementaryTypeName","src":"87246:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103994,"mutability":"mutable","name":"msgValue","nameLocation":"87270:8:150","nodeType":"VariableDeclaration","scope":104003,"src":"87262:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103993,"name":"uint256","nodeType":"ElementaryTypeName","src":"87262:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103996,"mutability":"mutable","name":"minGas","nameLocation":"87287:6:150","nodeType":"VariableDeclaration","scope":104003,"src":"87280:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":103995,"name":"uint64","nodeType":"ElementaryTypeName","src":"87280:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":103998,"mutability":"mutable","name":"data","nameLocation":"87310:4:150","nodeType":"VariableDeclaration","scope":104003,"src":"87295:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":103997,"name":"bytes","nodeType":"ElementaryTypeName","src":"87295:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":104000,"mutability":"mutable","name":"count","nameLocation":"87323:5:150","nodeType":"VariableDeclaration","scope":104003,"src":"87316:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":103999,"name":"uint64","nodeType":"ElementaryTypeName","src":"87316:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"87245:84:150"},"returnParameters":{"id":104002,"nodeType":"ParameterList","parameters":[],"src":"87346:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104011,"nodeType":"FunctionDefinition","src":"87479:66:150","nodes":[],"documentation":{"id":104004,"nodeType":"StructuredDocumentation","src":"87353:121:150","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87488:10:150","parameters":{"id":104009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104006,"mutability":"mutable","name":"callee","nameLocation":"87507:6:150","nodeType":"VariableDeclaration","scope":104011,"src":"87499:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104005,"name":"address","nodeType":"ElementaryTypeName","src":"87499:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104008,"mutability":"mutable","name":"data","nameLocation":"87530:4:150","nodeType":"VariableDeclaration","scope":104011,"src":"87515:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":104007,"name":"bytes","nodeType":"ElementaryTypeName","src":"87515:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87498:37:150"},"returnParameters":{"id":104010,"nodeType":"ParameterList","parameters":[],"src":"87544:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104021,"nodeType":"FunctionDefinition","src":"87632:80:150","nodes":[],"documentation":{"id":104012,"nodeType":"StructuredDocumentation","src":"87551:76:150","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87641:10:150","parameters":{"id":104019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104014,"mutability":"mutable","name":"callee","nameLocation":"87660:6:150","nodeType":"VariableDeclaration","scope":104021,"src":"87652:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104013,"name":"address","nodeType":"ElementaryTypeName","src":"87652:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104016,"mutability":"mutable","name":"data","nameLocation":"87683:4:150","nodeType":"VariableDeclaration","scope":104021,"src":"87668:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":104015,"name":"bytes","nodeType":"ElementaryTypeName","src":"87668:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":104018,"mutability":"mutable","name":"count","nameLocation":"87696:5:150","nodeType":"VariableDeclaration","scope":104021,"src":"87689:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":104017,"name":"uint64","nodeType":"ElementaryTypeName","src":"87689:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"87651:51:150"},"returnParameters":{"id":104020,"nodeType":"ParameterList","parameters":[],"src":"87711:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104031,"nodeType":"FunctionDefinition","src":"87800:84:150","nodes":[],"documentation":{"id":104022,"nodeType":"StructuredDocumentation","src":"87718:77:150","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87809:10:150","parameters":{"id":104029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104024,"mutability":"mutable","name":"callee","nameLocation":"87828:6:150","nodeType":"VariableDeclaration","scope":104031,"src":"87820:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104023,"name":"address","nodeType":"ElementaryTypeName","src":"87820:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104026,"mutability":"mutable","name":"msgValue","nameLocation":"87844:8:150","nodeType":"VariableDeclaration","scope":104031,"src":"87836:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":104025,"name":"uint256","nodeType":"ElementaryTypeName","src":"87836:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":104028,"mutability":"mutable","name":"data","nameLocation":"87869:4:150","nodeType":"VariableDeclaration","scope":104031,"src":"87854:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":104027,"name":"bytes","nodeType":"ElementaryTypeName","src":"87854:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87819:55:150"},"returnParameters":{"id":104030,"nodeType":"ParameterList","parameters":[],"src":"87883:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104043,"nodeType":"FunctionDefinition","src":"87987:98:150","nodes":[],"documentation":{"id":104032,"nodeType":"StructuredDocumentation","src":"87890:92:150","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87996:10:150","parameters":{"id":104041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104034,"mutability":"mutable","name":"callee","nameLocation":"88015:6:150","nodeType":"VariableDeclaration","scope":104043,"src":"88007:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104033,"name":"address","nodeType":"ElementaryTypeName","src":"88007:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104036,"mutability":"mutable","name":"msgValue","nameLocation":"88031:8:150","nodeType":"VariableDeclaration","scope":104043,"src":"88023:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":104035,"name":"uint256","nodeType":"ElementaryTypeName","src":"88023:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":104038,"mutability":"mutable","name":"data","nameLocation":"88056:4:150","nodeType":"VariableDeclaration","scope":104043,"src":"88041:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":104037,"name":"bytes","nodeType":"ElementaryTypeName","src":"88041:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":104040,"mutability":"mutable","name":"count","nameLocation":"88069:5:150","nodeType":"VariableDeclaration","scope":104043,"src":"88062:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":104039,"name":"uint64","nodeType":"ElementaryTypeName","src":"88062:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88006:69:150"},"returnParameters":{"id":104042,"nodeType":"ParameterList","parameters":[],"src":"88084:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104055,"nodeType":"FunctionDefinition","src":"88178:96:150","nodes":[],"documentation":{"id":104044,"nodeType":"StructuredDocumentation","src":"88091:82:150","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"88187:10:150","parameters":{"id":104053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104046,"mutability":"mutable","name":"callee","nameLocation":"88206:6:150","nodeType":"VariableDeclaration","scope":104055,"src":"88198:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104045,"name":"address","nodeType":"ElementaryTypeName","src":"88198:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104048,"mutability":"mutable","name":"msgValue","nameLocation":"88222:8:150","nodeType":"VariableDeclaration","scope":104055,"src":"88214:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":104047,"name":"uint256","nodeType":"ElementaryTypeName","src":"88214:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":104050,"mutability":"mutable","name":"gas","nameLocation":"88239:3:150","nodeType":"VariableDeclaration","scope":104055,"src":"88232:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":104049,"name":"uint64","nodeType":"ElementaryTypeName","src":"88232:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":104052,"mutability":"mutable","name":"data","nameLocation":"88259:4:150","nodeType":"VariableDeclaration","scope":104055,"src":"88244:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":104051,"name":"bytes","nodeType":"ElementaryTypeName","src":"88244:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88197:67:150"},"returnParameters":{"id":104054,"nodeType":"ParameterList","parameters":[],"src":"88273:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104069,"nodeType":"FunctionDefinition","src":"88383:110:150","nodes":[],"documentation":{"id":104056,"nodeType":"StructuredDocumentation","src":"88280:98:150","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"88392:10:150","parameters":{"id":104067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104058,"mutability":"mutable","name":"callee","nameLocation":"88411:6:150","nodeType":"VariableDeclaration","scope":104069,"src":"88403:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104057,"name":"address","nodeType":"ElementaryTypeName","src":"88403:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104060,"mutability":"mutable","name":"msgValue","nameLocation":"88427:8:150","nodeType":"VariableDeclaration","scope":104069,"src":"88419:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":104059,"name":"uint256","nodeType":"ElementaryTypeName","src":"88419:7:150","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":104062,"mutability":"mutable","name":"gas","nameLocation":"88444:3:150","nodeType":"VariableDeclaration","scope":104069,"src":"88437:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":104061,"name":"uint64","nodeType":"ElementaryTypeName","src":"88437:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":104064,"mutability":"mutable","name":"data","nameLocation":"88464:4:150","nodeType":"VariableDeclaration","scope":104069,"src":"88449:19:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":104063,"name":"bytes","nodeType":"ElementaryTypeName","src":"88449:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":104066,"mutability":"mutable","name":"count","nameLocation":"88477:5:150","nodeType":"VariableDeclaration","scope":104069,"src":"88470:12:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":104065,"name":"uint64","nodeType":"ElementaryTypeName","src":"88470:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88402:81:150"},"returnParameters":{"id":104068,"nodeType":"ParameterList","parameters":[],"src":"88492:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104081,"nodeType":"FunctionDefinition","src":"88832:99:150","nodes":[],"documentation":{"id":104070,"nodeType":"StructuredDocumentation","src":"88499:328:150","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"88841:10:150","parameters":{"id":104079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104072,"mutability":"mutable","name":"checkTopic1","nameLocation":"88857:11:150","nodeType":"VariableDeclaration","scope":104081,"src":"88852:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":104071,"name":"bool","nodeType":"ElementaryTypeName","src":"88852:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":104074,"mutability":"mutable","name":"checkTopic2","nameLocation":"88875:11:150","nodeType":"VariableDeclaration","scope":104081,"src":"88870:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":104073,"name":"bool","nodeType":"ElementaryTypeName","src":"88870:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":104076,"mutability":"mutable","name":"checkTopic3","nameLocation":"88893:11:150","nodeType":"VariableDeclaration","scope":104081,"src":"88888:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":104075,"name":"bool","nodeType":"ElementaryTypeName","src":"88888:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":104078,"mutability":"mutable","name":"checkData","nameLocation":"88911:9:150","nodeType":"VariableDeclaration","scope":104081,"src":"88906:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":104077,"name":"bool","nodeType":"ElementaryTypeName","src":"88906:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"88851:70:150"},"returnParameters":{"id":104080,"nodeType":"ParameterList","parameters":[],"src":"88930:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104095,"nodeType":"FunctionDefinition","src":"89034:124:150","nodes":[],"documentation":{"id":104082,"nodeType":"StructuredDocumentation","src":"88937:92:150","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"89043:10:150","parameters":{"id":104093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104084,"mutability":"mutable","name":"checkTopic1","nameLocation":"89059:11:150","nodeType":"VariableDeclaration","scope":104095,"src":"89054:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":104083,"name":"bool","nodeType":"ElementaryTypeName","src":"89054:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":104086,"mutability":"mutable","name":"checkTopic2","nameLocation":"89077:11:150","nodeType":"VariableDeclaration","scope":104095,"src":"89072:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":104085,"name":"bool","nodeType":"ElementaryTypeName","src":"89072:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":104088,"mutability":"mutable","name":"checkTopic3","nameLocation":"89095:11:150","nodeType":"VariableDeclaration","scope":104095,"src":"89090:16:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":104087,"name":"bool","nodeType":"ElementaryTypeName","src":"89090:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":104090,"mutability":"mutable","name":"checkData","nameLocation":"89113:9:150","nodeType":"VariableDeclaration","scope":104095,"src":"89108:14:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":104089,"name":"bool","nodeType":"ElementaryTypeName","src":"89108:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":104092,"mutability":"mutable","name":"emitter","nameLocation":"89132:7:150","nodeType":"VariableDeclaration","scope":104095,"src":"89124:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104091,"name":"address","nodeType":"ElementaryTypeName","src":"89124:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89053:87:150"},"returnParameters":{"id":104094,"nodeType":"ParameterList","parameters":[],"src":"89157:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104099,"nodeType":"FunctionDefinition","src":"89428:31:150","nodes":[],"documentation":{"id":104096,"nodeType":"StructuredDocumentation","src":"89164:259:150","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"89437:10:150","parameters":{"id":104097,"nodeType":"ParameterList","parameters":[],"src":"89447:2:150"},"returnParameters":{"id":104098,"nodeType":"ParameterList","parameters":[],"src":"89458:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104105,"nodeType":"FunctionDefinition","src":"89562:46:150","nodes":[],"documentation":{"id":104100,"nodeType":"StructuredDocumentation","src":"89465:92:150","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"89571:10:150","parameters":{"id":104103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104102,"mutability":"mutable","name":"emitter","nameLocation":"89590:7:150","nodeType":"VariableDeclaration","scope":104105,"src":"89582:15:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104101,"name":"address","nodeType":"ElementaryTypeName","src":"89582:7:150","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89581:17:150"},"returnParameters":{"id":104104,"nodeType":"ParameterList","parameters":[],"src":"89607:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104109,"nodeType":"FunctionDefinition","src":"89674:33:150","nodes":[],"documentation":{"id":104106,"nodeType":"StructuredDocumentation","src":"89614:55:150","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"89683:12:150","parameters":{"id":104107,"nodeType":"ParameterList","parameters":[],"src":"89695:2:150"},"returnParameters":{"id":104108,"nodeType":"ParameterList","parameters":[],"src":"89706:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104115,"nodeType":"FunctionDefinition","src":"89785:50:150","nodes":[],"documentation":{"id":104110,"nodeType":"StructuredDocumentation","src":"89713:67:150","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"89794:12:150","parameters":{"id":104113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104112,"mutability":"mutable","name":"revertData","nameLocation":"89814:10:150","nodeType":"VariableDeclaration","scope":104115,"src":"89807:17:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":104111,"name":"bytes4","nodeType":"ElementaryTypeName","src":"89807:6:150","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"89806:19:150"},"returnParameters":{"id":104114,"nodeType":"ParameterList","parameters":[],"src":"89834:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104121,"nodeType":"FunctionDefinition","src":"89917:58:150","nodes":[],"documentation":{"id":104116,"nodeType":"StructuredDocumentation","src":"89841:71:150","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"89926:12:150","parameters":{"id":104119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104118,"mutability":"mutable","name":"revertData","nameLocation":"89954:10:150","nodeType":"VariableDeclaration","scope":104121,"src":"89939:25:150","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":104117,"name":"bytes","nodeType":"ElementaryTypeName","src":"89939:5:150","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"89938:27:150"},"returnParameters":{"id":104120,"nodeType":"ParameterList","parameters":[],"src":"89974:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104129,"nodeType":"FunctionDefinition","src":"90204:59:150","nodes":[],"documentation":{"id":104122,"nodeType":"StructuredDocumentation","src":"89981:218:150","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"90213:16:150","parameters":{"id":104127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104124,"mutability":"mutable","name":"min","nameLocation":"90237:3:150","nodeType":"VariableDeclaration","scope":104129,"src":"90230:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":104123,"name":"uint64","nodeType":"ElementaryTypeName","src":"90230:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":104126,"mutability":"mutable","name":"max","nameLocation":"90249:3:150","nodeType":"VariableDeclaration","scope":104129,"src":"90242:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":104125,"name":"uint64","nodeType":"ElementaryTypeName","src":"90242:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90229:24:150"},"returnParameters":{"id":104128,"nodeType":"ParameterList","parameters":[],"src":"90262:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104137,"nodeType":"FunctionDefinition","src":"90505:63:150","nodes":[],"documentation":{"id":104130,"nodeType":"StructuredDocumentation","src":"90269:231:150","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"90514:20:150","parameters":{"id":104135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104132,"mutability":"mutable","name":"min","nameLocation":"90542:3:150","nodeType":"VariableDeclaration","scope":104137,"src":"90535:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":104131,"name":"uint64","nodeType":"ElementaryTypeName","src":"90535:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":104134,"mutability":"mutable","name":"max","nameLocation":"90554:3:150","nodeType":"VariableDeclaration","scope":104137,"src":"90547:10:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":104133,"name":"uint64","nodeType":"ElementaryTypeName","src":"90547:6:150","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90534:24:150"},"returnParameters":{"id":104136,"nodeType":"ParameterList","parameters":[],"src":"90567:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104143,"nodeType":"FunctionDefinition","src":"90646:38:150","nodes":[],"documentation":{"id":104138,"nodeType":"StructuredDocumentation","src":"90574:67:150","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"90655:4:150","parameters":{"id":104141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104140,"mutability":"mutable","name":"skipTest","nameLocation":"90665:8:150","nodeType":"VariableDeclaration","scope":104143,"src":"90660:13:150","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":104139,"name":"bool","nodeType":"ElementaryTypeName","src":"90660:4:150","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"90659:15:150"},"returnParameters":{"id":104142,"nodeType":"ParameterList","parameters":[],"src":"90683:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":104147,"nodeType":"FunctionDefinition","src":"90759:41:150","nodes":[],"documentation":{"id":104144,"nodeType":"StructuredDocumentation","src":"90690:64:150","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"90768:20:150","parameters":{"id":104145,"nodeType":"ParameterList","parameters":[],"src":"90788:2:150"},"returnParameters":{"id":104146,"nodeType":"ParameterList","parameters":[],"src":"90799:0:150"},"scope":104148,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":103549,"name":"VmSafe","nameLocations":["76432:6:150"],"nodeType":"IdentifierPath","referencedDeclaration":103547,"src":"76432:6:150"},"id":103550,"nodeType":"InheritanceSpecifier","src":"76432:6:150"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":103548,"nodeType":"StructuredDocumentation","src":"76245:171:150","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[104148,103547],"name":"Vm","nameLocation":"76426:2:150","scope":104149,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":150}