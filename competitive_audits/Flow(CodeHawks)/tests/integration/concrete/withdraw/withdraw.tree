Withdraw_Integration_Concrete_Test
├── when delegate call
│  └── it should revert
└── when no delegate call
   ├── given null
   │  └── it should revert
   └── given not null
      ├── when amount zero
      │  └── it should revert
      └── when amount not zero
         ├── when withdrawal address zero
         │  └── it should revert
         └── when withdrawal address not zero
            ├── when withdrawal address not owner
            │  ├── when caller sender
            │  │  └── it should revert
            │  ├── when caller unknown
            │  │  └── it should revert
            │  └── when caller recipient
            │     └── it should withdraw
            └── when withdrawal address owner
               ├── when amount overdraws
               │  ├── given stream has uncovered debt
               │  │  └── it should revert
               │  └── given stream has no uncovered debt
               │     └── it should revert
               └── when amount not overdraw
                  ├── when amount not equal total debt
                  │  ├── it should update snapshot debt
                  │  └── it should make the withdrawal
                  └── when amount equal total debt
                     ├── when amount not exceed snapshot debt
                     │   ├── it should not update snapshot time
                     │   └── it should make the withdrawal
                     └── when amount exceed snapshot debt
                        ├── given protocol fee not zero
                        │  ├── it should update the protocol revenue
                        │  └── it should withdraw the net amount
                        └── given protocol fee zero
                           ├── given token has 18 decimals
                           │  └── it should make the withdrawal
                           └── given token not have 18 decimals
                              ├── it should withdraw the withdrawable amount
                              ├── it should reduce the stream balance by the withdrawn amount
                              ├── it should reduce the aggregate amount by the withdrawn amount
                              ├── it should update snapshot debt to zero
                              ├── it should update snapshot time
                              ├── it should emit 1 {Transfer}, 1 {WithdrawFromFlowStream}  and 1 {MetadataUpdated} events
                              └── it should return the withdrawn amount
